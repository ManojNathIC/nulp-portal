{"version":3,"file":"static/js/6846.93046abb.chunk.js","mappings":"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","sources":["services/utilService.js","components/Footer.js","components/header.js","components/FloatingChatIcon.js","components/CircularProgressWithLabel.js","components/filter.js","components/Card.js","pages/content/noResultFound.js","pages/ToasterCommon.js","pages/profile/continueLearning.js","pages/SelectPreference.js","pages/profile/learningHistory.js","pages/profile/certificate.js","pages/profile/Profile.js","pages/FAQPage.js","configs/zustandStore.js","pages/connections/chat.js","pages/connections/AddConnections.js","services/RestClient.ts","services/frameworkService.js","components/domainCarousel.js","pages/search/DomainList.js","pages/registration/Registration.js","pages/registration/Keys.js","services/contentService.js","components/drawerFilter.js","pages/search/ContentList.js","pages/content/AllContent.js","pages/content/CategoryPage.js","pages/content/joinCourse.js","pages/content/Player.js","pages/registration/Otp.js","pages/content/pdf.js","pages/connections/message.js","pages/terms.js","components/SampleComponent.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","bootstrap.js","assets/dummyCardImgs|sync|/^/.//.*/.png$","assets|sync|/^/.//domainImgs.*$"],"sourcesContent":["export const userId = () => {\n  const userIdElement = document.getElementById(\"userId\");\n  const userId = userIdElement ? userIdElement.value : \"\";\n  return userId;\n};\n\nexport const userSid = () => {\n  const userSidElement = document.getElementById(\"userSid\");\n  const userSid = userSidElement ? userSidElement.value : \"\";\n  return userSid;\n};\n\nexport const sessionId = () => {\n  const sessionIdElement = document.getElementById(\"sessionId\");\n  const sessionId = sessionIdElement ? sessionIdElement.value : \"\";\n  return sessionId;\n};\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport SearchSharpIcon from '@mui/icons-material/SearchSharp';\nimport GroupsOutlinedIcon from '@mui/icons-material/GroupsOutlined';\nimport AccountCircleOutlinedIcon from '@mui/icons-material/AccountCircleOutlined';\nimport EditNoteOutlinedIcon from '@mui/icons-material/EditNoteOutlined';\nimport Container from '@mui/material/Container';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport { useTranslation } from \"react-i18next\";\nimport { useParams,useNavigate } from \"react-router-dom\";\nimport MenuBookOutlinedIcon from '@mui/icons-material/MenuBookOutlined';\nimport ChatOutlinedIcon from '@mui/icons-material/ChatOutlined';\nimport TwitterIcon from '@mui/icons-material/Twitter';\nimport FacebookIcon from '@mui/icons-material/Facebook';\nimport InstagramIcon from '@mui/icons-material/Instagram';\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\n// const styles = {\n//   BottomNavigation: {\n//     width: '100%',\n//     position: 'fixed',\n//     bottom: 0,\n//   },\n// };\n\nexport default function Footer() {\n  const { t } = useTranslation();\n  const [value, setValue] = React.useState(0);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const navigate = useNavigate();\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n \n\n  return (\n    <>\n    <Box maxWidth=\"xl\" className='lg-hide bg-blue'>\n    <Box sx={{  position: 'fixed', bottom: 0, left: 0, right: 0 ,width:'100%',zIndex:'9999' }}>\n    <BottomNavigation\n            sx={{ width: '100%', display: 'flex', position: 'relative', paddingTop: '10px' }}\n            showLabels\n            value={value}\n            onChange={(event, newValue) => setValue(newValue)}\n          >\n            <BottomNavigationAction\n              onClick={() => navigate('/domainList')}\n              label={t(\"SEARCH\")}\n              icon={<SearchSharpIcon />}\n              className={location.pathname === '/domainList' ? 'navigateActive' : ''}\n\n            />\n            <BottomNavigationAction\n              onClick={() => navigate('/all')}\n              label={t(\"CONTENTS\")}\n              className={location.pathname === '/all' ? 'navigateActive' : ''}\n\n              icon={<MenuBookOutlinedIcon />}\n            />\n            <BottomNavigationAction\n              onClick={() => navigate('/addConnections')}\n              label={t(\"CONNECTION\")}\n              className={location.pathname === '/addConnections' ? 'navigateActive' : ''}\n\n              icon={<ChatOutlinedIcon />}\n            />\n            <BottomNavigationAction\n              onClick={() => navigate('/profile')}\n              label={t(\"PROFILE\")}\n              className={location.pathname === '/profile' ? 'navigateActive' : ''}\n              icon={<AccountCircleOutlinedIcon />}\n            />\n          </BottomNavigation>\n</Box>\n\n</Box>\n<Box className='xs-hide' style={{background:'#065872', color:'#fff',padding:'15px 15px 13px'}}>\n  {/* <Box>dfgdfgsg */}\n  \n\n<Grid container spacing={2} className='footer'>\n  <Grid item xs={8} md={3} style={{fontSize:'14px', lineHeight:'2.4',fontWeight:'400'}}>\n  <Link underline=\"none\" target=\"_blank\" href=\"https://niua.in/\" style={{padding:'10px 0 2px',color:'#fff',margin:'0 8px'}}>{t(\"NIUA\")}</Link>\n    <Link underline=\"none\" target=\"_blank\" href=\"https://mohua.gov.in/\" style={{padding:'10px 0 2px',color:'#fff',margin:'0 8px'}}>{t(\"MOHUA\")}</Link><br/>\n    <Link  underline=\"none\" target=\"_blank\"  href=\"/aboutus.html\" style={{padding:'10px 0 2px',color:'#fff',margin:'0 8px'}}>{t(\"ABOUT_US\")}</Link>\n    <Link underline=\"none\" target=\"_blank\"  href=\"#\" style={{padding:'10px 0 2px',color:'#fff',margin:'0 8px'}}>{t(\"CONTACT_US\")}</Link>\n    <Link underline=\"none\" target=\"_blank\"  href=\"#\" style={{padding:'10px 0 2px',color:'#fff',margin:'0 8px'}}>{t(\"FAQS\")}</Link>\n    <Link underline=\"none\" target=\"_blank\"  href=\"/logout\" style={{padding:'10px 0 2px',color:'#fff',margin:'0 8px'}}>{t(\"LOG_OUT\")}</Link>\n\n  </Grid>\n  <Grid item xs={4} md={3} style={{fontSize:'14px', lineHeight:'2.4',fontWeight:'400'}}>\n  {/* <Link underline=\"none\" target=\"_blank\" href=\"https://niua.org/cdg/\" style={{padding:'10px 0 2px',color:'#fff', fontSize:'14px'}}>{t(\"CENTER_FOR_DIGITAL_GOVERNANCE\")}</Link><br/> */}\n    <Link  underline=\"none\" target=\"_blank\" href=\"https://nudm.mohua.gov.in/\" style={{padding:'10px 0 2px',color:'#fff', fontSize:'14px'}}>{t(\"NATIONAL_URBAN_DIGITAL_MISSION\")}</Link>\n    <Box className=\"social-icons\">\n    <Link href=\"#\" underline=\"none\"><FacebookIcon/></Link>\n    <Link href=\"#\" underline=\"none\"><InstagramIcon/></Link>\n    <Link href=\"#\" underline=\"none\"><LinkedInIcon/></Link>\n    <Link href=\"#\" underline=\"none\"><TwitterIcon/></Link>\n    </Box>\n</Grid>\n  <Grid item xs={4} md={3} style={{fontSize:'14px', lineHeight:'1.5', fontWeight:'400'}}>\n  <Box style={{fontSize:'14px',fontWeight:'700'}}>{t(\"N0DAL_MINISTRY\")}:</Box>\n {t(\"MINISTRY_OF_HOUSING_AND_URBAN\")}<br/>\n {t(\"NIRMAN_BHAWAN\")}\n</Grid>\n      <Grid item xs={8} md={3} style={{fontSize:'14px', lineHeight:'1.5',fontWeight:'400'}}>\n         <Box style={{fontSize:'14px',fontWeight:'700'}}> {t(\"ANCHOR_INSTITUE\")}:</Box>\n        {t(\"NATIONAL_INSTITUE_OF_URBAN\")}<br/>\n        {t(\"FIRST_FLOOR_CORE\")}<br/>\n\n        Phone: (+91 11) 24617517, 24617543, 24617595\n    </Grid>\n</Grid>\n</Box>\n\n</>\n  );\n}","import React, { useState, useEffect } from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport AccountCircleOutlinedIcon from \"@mui/icons-material/AccountCircleOutlined\";\nimport TextField from \"@mui/material/TextField\";\nimport IconButton from \"@mui/material/IconButton\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport Link from \"@mui/material/Link\";\nimport DevicesIcon from \"@mui/icons-material/Devices\";\nimport WebIcon from \"@mui/icons-material/Web\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport LanguageIcon from \"@mui/icons-material/Language\";\nimport { useTranslation } from \"react-i18next\";\nimport { changeLanguage } from \"i18next\";\nimport LiveHelpOutlinedIcon from \"@mui/icons-material/LiveHelpOutlined\";\nimport LogoutOutlinedIcon from \"@mui/icons-material/LogoutOutlined\";\nimport GTranslateIcon from \"@mui/icons-material/GTranslate\";\nimport MenuBookOutlinedIcon from \"@mui/icons-material/MenuBookOutlined\";\nimport ChatOutlinedIcon from \"@mui/icons-material/ChatOutlined\";\nimport SortOutlinedIcon from \"@mui/icons-material/SortOutlined\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Header({ globalSearchQuery }) {\n  const { t } = useTranslation();\n  const [language, setLanguage] = useState(\"en\");\n\n  const handleChangeLanguage = (event) => {\n    const selectedLanguage = event.target.value;\n    setLanguage(selectedLanguage);\n    changeLanguage(selectedLanguage);\n  };\n\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n  const [searchQuery, setSearchQuery] = useState(globalSearchQuery || \"\");\n  const navigate = useNavigate();\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n  const [activePath, setActivePath] = useState(location.pathname);\n\n  useEffect(() => {\n    setActivePath(location.pathname);\n  }, [location.pathname]);\n\n  const onGlobalSearch = () => {\n    navigate(\"/contentList/1\", {\n      state: { globalSearchQuery: searchQuery },\n    });\n  };\n\n  const handleInputChange = (event) => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      onGlobalSearch();\n    }\n  };\n\n  return (\n    <>\n      {/* Sidebar Navigation */}\n      <Box\n        className=\"xs-hide bg-white d-flex pos-fixed\"\n        style={{\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Box>\n          <Link href=\"/all\" className=\"pl-0 py-15\">\n            <img\n              src={require(\"../assets/logo.png\")}\n              style={{ maxWidth: \"100%\" }}\n            />\n          </Link>\n        </Box>\n        <Box\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            paddingRight: \"14px\",\n          }}\n        >\n          {/* Navigation Links */}\n          <Box style={{ padding: \"10px\" }}>\n            <DevicesIcon\n              style={{\n                padding: \"0 10px\",\n                verticalAlign: \"middle\",\n                color: \"#424242\",\n              }}\n            />\n\n            <Link\n              href=\"#\"\n              underline=\"none\"\n              style={{\n                color: \"#424242\",\n                fontSize: \"16px\",\n                borderRight: \"solid 1px #424242\",\n                paddingRight: \"10px\",\n              }}\n            >\n              {t(\"MAIN_CONTENT\")}{\" \"}\n            </Link>\n          </Box>\n          <Box\n            style={{\n              padding: \"0 10px\",\n              color: \"#424242\",\n              fontSize: \"16px\",\n              borderRight: \"solid 1px #424242\",\n            }}\n          >\n            <Link\n              href=\"#\"\n              underline=\"none\"\n              style={{\n                color: \"#424242\",\n                fontSize: \"16px\",\n                paddingRight: \"10px\",\n              }}\n            >\n              {\" \"}\n              +A\n            </Link>{\" \"}\n            <Link\n              href=\"#\"\n              underline=\"none\"\n              style={{\n                color: \"#424242\",\n                fontSize: \"16px\",\n                paddingRight: \"10px\",\n              }}\n            >\n              A -{\" \"}\n            </Link>\n            <Link\n              href=\"#\"\n              underline=\"none\"\n              style={{\n                color: \"#424242\",\n                fontSize: \"16px\",\n                paddingRight: \"10px\",\n              }}\n            >\n              A\n            </Link>{\" \"}\n          </Box>\n          <Box\n            style={{\n              padding: \"0 10px\",\n              color: \"#424242\",\n              fontSize: \"14px\",\n              borderRight: \"solid 1px #424242\",\n            }}\n          >\n            <WebIcon style={{ padding: \"0 10px\", verticalAlign: \"middle\" }} />\n            <Link\n              href=\"#\"\n              underline=\"none\"\n              style={{ color: \"#424242\", fontSize: \"16px\" }}\n            >\n              {t(\"SCREEN_READER\")}{\" \"}\n            </Link>\n          </Box>\n          {/* Language Select */}\n          <Box sx={{ minWidth: 120, paddingLeft: \"10px\" }}>\n            <FormControl\n              fullWidth\n              size=\"small\"\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                flexDirection: \"row\",\n                paddingRight: \"15px\",\n              }}\n            >\n              {/* <InputLabel id=\"language-select-label\">\n                  {t(\"LANGUAGE\")}\n                </InputLabel> */}\n              <GTranslateIcon />\n              <Select\n                labelId=\"language-select-label\"\n                id=\"language-select\"\n                className=\"language\"\n                style={{ border: \"none\" }}\n                label={t(\"LANGUAGE\")}\n                value={language}\n                startIcon={<LanguageIcon />}\n                onChange={handleChangeLanguage}\n                inputProps={{ \"aria-label\": t(\"SELECT_LANGUAGE\") }}\n              >\n                <MenuItem value=\"en\">{t(\"ENGLISH\")}</MenuItem>\n                <MenuItem value=\"hi\">{t(\"HINDI\")}</MenuItem>\n              </Select>\n            </FormControl>\n          </Box>\n        </Box>\n      </Box>\n\n      {/* Top Navigation Bar */}\n      <AppBar className=\"lg-my-10  bg-inherit pos-inherit mt-65\">\n        <Container className=\"p-0\">\n          <Box className=\"d-flex\">\n            <Toolbar\n              disableGutters\n              style={{\n                justifyContent: \"space-between\",\n                background: \"#fff\",\n                width: \"100%\",\n              }}\n              className=\"lg-hide lg-mt-10\"\n            >\n              <Box className=\"d-flex lg-hide\">\n                <IconButton\n                  size=\"large\"\n                  aria-label=\"account of current user\"\n                  aria-controls=\"menu-appbar\"\n                  aria-haspopup=\"true\"\n                  onClick={handleOpenNavMenu}\n                  color=\"inherit\"\n                  className=\"lg-hide\"\n                >\n                  <SortOutlinedIcon />\n                </IconButton>\n                <Box\n                  sx={{\n                    display: { xs: \"block\", md: \"none\" },\n                  }}\n                >\n                  <Menu\n                    id=\"menu-appbar\"\n                    anchorEl={anchorElNav}\n                    anchorOrigin={{\n                      vertical: \"bottom\",\n                      horizontal: \"left\",\n                    }}\n                    keepMounted\n                    transformOrigin={{\n                      vertical: \"top\",\n                      horizontal: \"left\",\n                    }}\n                    open={Boolean(anchorElNav)}\n                    onClose={handleCloseNavMenu}\n                  >\n                    <MenuItem>\n                      <Link href=\"/help\" textAlign=\"center\" underline=\"none\">\n                        <LiveHelpOutlinedIcon\n                          style={{ verticalAlign: \"bottom\", color: \"#000\" }}\n                        />{\" \"}\n                        {t(\"HELP\")}\n                      </Link>\n                    </MenuItem>\n                    <MenuItem>\n                      <Link href=\"/logoff\" textAlign=\"center\" underline=\"none\">\n                        <LogoutOutlinedIcon\n                          style={{ verticalAlign: \"bottom\", color: \"#000\" }}\n                        />{\" \"}\n                        {t(\"LOGOUT\")}\n                      </Link>\n                    </MenuItem>\n                  </Menu>\n                </Box>\n                <Link href=\"/all\" className=\"pl-18 py-15\">\n                  <img\n                    src={require(\"../assets/logo.png\")}\n                    style={{ maxWidth: \"100%\" }}\n                  />\n                </Link>\n              </Box>\n              <Box className=\"lg-hide\">\n                {/* Language Select */}\n                <Box sx={{ minWidth: 120, paddingLeft: \"10px\" }}>\n                  <FormControl\n                    fullWidth\n                    size=\"small\"\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      flexDirection: \"row\",\n                    }}\n                  >\n                    {/* <InputLabel id=\"language-select-label\">\n                  {t(\"LANGUAGE\")}\n                </InputLabel> */}\n                    <GTranslateIcon style={{ color: \"#000\" }} />\n                    <Select\n                      labelId=\"language-select-label\"\n                      id=\"language-select\"\n                      className=\"language\"\n                      style={{ border: \"none\" }}\n                      label={t(\"LANGUAGE\")}\n                      value={language}\n                      startIcon={<LanguageIcon />}\n                      onChange={handleChangeLanguage}\n                      inputProps={{ \"aria-label\": t(\"SELECT_LANGUAGE\") }}\n                    >\n                      <MenuItem value=\"en\">{t(\"ENGLISH\")}</MenuItem>\n                      <MenuItem value=\"hi\">{t(\"HINDI\")}</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Box>\n              </Box>\n\n              {/* Language Select */}\n            </Toolbar>{\" \"}\n            {/* Search Box */}\n            <Box\n              className=\"xs-hide d-flex header-bg w-40 mr-30\"\n              style={{ alignItems: \"center\", paddingLeft: \"8px\" }}\n            >\n              <Box className=\"h1-title px-10 pr-20\">{t(\"EXPLORE\")}</Box>\n              <TextField\n                placeholder={t(\"What do you want to learn today?  \")}\n                variant=\"outlined\"\n                size=\"small\"\n                fullWidth\n                value={searchQuery}\n                onChange={handleInputChange}\n                onKeyPress={handleKeyPress}\n                InputProps={{\n                  endAdornment: (\n                    <IconButton\n                      type=\"submit\"\n                      aria-label=\"search\"\n                      onClick={onGlobalSearch}\n                    >\n                      <SearchIcon />\n                    </IconButton>\n                  ),\n                }}\n              />\n            </Box>\n            {/* Other Navigation Links */}\n            <Box\n              className=\"xs-hide header-bg py-15\"\n              sx={{ flexGrow: 1, display: \"flex\", justifyContent: \"flex-end\" }}\n            >\n              <Link\n                href=\"/domainList\"\n                className={activePath === \"/domainList\" ? \"Menuactive\" : \"\"}\n                underline=\"none\"\n                style={{\n                  my: 2,\n                  color: \"#484848\",\n                  display: \"flex\",\n                  margin: \"0 20px\",\n                  padding: \"10px\",\n                }}\n              >\n                <MenuBookOutlinedIcon\n                  style={{ padding: \"0 10px\", verticalAlign: \"middle\" }}\n                />\n                {t(\"Home\")}\n              </Link>\n              <Link\n                href=\"/all\"\n                className={activePath === \"/all\" ? \"Menuactive\" : \"\"}\n                underline=\"none\"\n                style={{\n                  my: 2,\n                  color: \"#484848\",\n                  display: \"flex\",\n                  margin: \"0 20px\",\n                  padding: \"10px\",\n                }}\n              >\n                <MenuBookOutlinedIcon\n                  style={{ padding: \"0 10px\", verticalAlign: \"middle\" }}\n                />\n                {t(\"CONTENT\")}\n              </Link>\n              <Link\n                href=\"/addConnections\"\n                className={activePath === \"/addConnections\" ? \"Menuactive\" : \"\"}\n                underline=\"none\"\n                style={{\n                  my: 2,\n                  color: \"#484848\",\n                  display: \"flex\",\n                  margin: \"0 20px\",\n                  padding: \"10px\",\n                }}\n              >\n                <ChatOutlinedIcon\n                  style={{ padding: \"0 10px\", verticalAlign: \"middle\" }}\n                />\n                {t(\"CONNECTIONS\")}\n              </Link>\n\n              {/* User Profile */}\n              <Tooltip>\n                <IconButton\n                  onClick={handleOpenUserMenu}\n                  sx={{ p: 0 }}\n                  className=\"profile-btn\"\n                >\n                  <AccountCircleOutlinedIcon\n                    style={{ padding: \"0 10px\", verticalAlign: \"middle\" }}\n                  />{\" \"}\n                  {t(\"PROFILE\")}\n                </IconButton>\n              </Tooltip>\n              <Menu\n                sx={{ mt: \"45px\" }}\n                id=\"menu-appbar\"\n                anchorEl={anchorElUser}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                open={Boolean(anchorElUser)}\n                onClose={handleCloseUserMenu}\n              >\n                <MenuItem>\n                  <Link href=\"/profile\" underline=\"none\" textAlign=\"center\">\n                    {t(\"PROFILE\")}\n                  </Link>\n                </MenuItem>\n                <MenuItem>\n                  <Link href=\"/help\" underline=\"none\" textAlign=\"center\">\n                    {t(\"HELP\")}\n                  </Link>\n                </MenuItem>\n                <MenuItem>\n                  <Link href=\"/logoff\" underline=\"none\" textAlign=\"center\">\n                    {t(\"LOGOUT\")}\n                  </Link>\n                </MenuItem>\n              </Menu>\n            </Box>\n          </Box>\n          {/* <Box className=\"lg-hide header-bg\" style={{ padding: \"10px\" }}>\n            <TextField\n              placeholder={t(\"What do you want to learn today?\")}\n              variant=\"outlined\"\n              size=\"small\"\n              style={{ background: \"#fff\" }}\n              fullWidth\n              InputProps={{\n                endAdornment: (\n                  <IconButton aria-label=\"search\">\n                    <SearchIcon />\n                  </IconButton>\n                ),\n              }}\n            />\n          </Box> */}\n        </Container>\n      </AppBar>\n    </>\n  );\n}\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { Popover, Typography } from \"@mui/material\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport HeadsetMicOutlinedIcon from '@mui/icons-material/HeadsetMicOutlined';\nimport { t } from \"i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    position: \"fixed\",\n    bottom: 0,\n    right: 0,\n    zIndex: 999,\n    background: \"blue\", // Ensures the icon appears above other elements\n  },\n}));\n\nconst FloatingChatIcon = () => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleOpenPopover = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClosePopover = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"chat-popover\" : undefined;\n\n  return (\n    <>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClosePopover}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <iframe\n          src=\"http://localhost:5000\"\n          width=\"350\"\n          height=\"500\"\n          title=\"ChatBot\"\n        />\n      </Popover>\n      <Link href=\"#\" color=\"primary\" aria-label=\"chat\" className=\"chatIcon\">\n        <HeadsetMicOutlinedIcon\n          onClick={handleOpenPopover}\n          style={{\n            paddingRight: \"8px\",\n            borderRadius: \"50%\",\n            width: \"30px\", // Adjust the size as needed\n            height: \"3  2px\", // Adjust the size as needed\n           \n          }}\n        />\n        {t(\"NULP_ASSIST\")}\n      </Link>\n    </>\n  );\n};\n\nexport default FloatingChatIcon;\n","import React from \"react\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nconst CircularProgressWithLabel = ({ received, total }) => {\n  // Calculate the progress percentage\n  const progress = (received / total) * 100;\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress variant=\"determinate\" value={progress} />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"caption\"\n          component=\"div\"\n          color=\"textSecondary\"\n        >{`${received}/${total}`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default CircularProgressWithLabel;\n","import React from \"react\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\n\nconst Filter = ({ options, label, onChange }) => {\n  const handleFilterChange = (event, selectedValues) => {\n    onChange(selectedValues);\n  };\n\n  return (\n    <Autocomplete\n      multiple\n      disablePortal\n      id=\"combo-box-demo\"\n      options={options}\n      sx={{ width: \"100%\", background: \"#fff\" }}\n      onChange={handleFilterChange}\n      renderInput={(params) => <TextField {...params} label={label} />}\n    />\n  );\n};\n\nexport default Filter;\n\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport { Divider } from \"native-base\";\nimport RandomImage from \"../assets/cardRandomImgs.json\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function BoxCard({ items, index, onClick }) {\n  const [imgUrl, setImgUrl] = useState();\n  const [subdomain, setSubdomain] = useState();\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    if (items.se_gradeLevels) {\n      setSubdomain(items.se_gradeLevels[0]);\n    } else if (items.gradeLevel) {\n      setSubdomain(items.gradeLevel[0]);\n    } else {\n      setSubdomain(undefined);\n    }\n    setImgUrl(RandomImage.ImagePaths[index % 10 || 10]);\n  }, [items, index]);\n\n  const unixTimestampToHumanDate = (unixTimestamp) => {\n    const dateObject = new Date(unixTimestamp);\n    const options = { day: \"2-digit\", month: \"long\", year: \"numeric\" };\n    return dateObject.toLocaleDateString(\"en-GB\", options);\n  };\n\n  if (items.content) {\n    return (\n      <Card\n        className=\"cardBox\"\n        sx={{ position: \"relative\", cursor: \"pointer\" }}\n        onClick={onClick}\n      >\n        <CardMedia\n          className=\"card-media\"\n          image={\n            subdomain\n              ? require(`./../assets/dummyCardImgs/${subdomain}.png`)\n              : require(\"./../assets/dummyCardImgs/Management.png\")\n          }\n          title=\"green iguana\"\n        />\n        <div onClick={onClick} className=\"card-div\"></div>\n        <CardContent>\n          {items.content.primaryCategory && (\n            <Typography\n              gutterBottom\n              variant=\"h7\"\n              component=\"div\"\n              className=\"ribbonCard\"\n            >\n              <Box className=\"cardCourses\">{items.content.primaryCategory}</Box>\n            </Typography>\n          )}\n          <Box className=\"card-img-container\">\n            <img\n              src={\n                items.content.appIcon\n                  ? items.content.appIcon\n                  : require(\"assets/default.png\")\n              }\n              className=\"card-img\"\n              alt=\"Content App Icon\"\n            />\n          </Box>\n          {items.content.name && (\n            <Typography\n              gutterBottom\n              variant=\"h5\"\n              component=\"div\"\n              className=\"cardTitle mt-20\"\n            >\n              {items.content.name}\n            </Typography>\n          )}\n          {items.enrolledDate && (\n            <Typography\n              variant=\"body2\"\n              color=\"#5B5B5B\"\n              style={{ fontSize: \"11px\", padding: \"10px 0\", textAlign: \"left\" }}\n            >\n              <Box>\n                {t(\"ENROLLED_ON\")} :{\" \"}\n                {unixTimestampToHumanDate(items.enrolledDate)}\n              </Box>\n            </Typography>\n          )}\n        </CardContent>\n        <Box className=\"my-10 pl-20\">\n          <Typography\n            style={{\n              marginTop: \"10px\",\n              color:\n                items.status === 2\n                  ? \"#065872\"\n                  : items.status === 1\n                  ? \"#579b00\"\n                  : \"#FF0000\",\n              fontSize: \"12px\",\n              padding: \"10px 0\",\n              textAlign: \"left\",\n              fontWeight: \"500\",\n            }}\n          >\n            {items.status === 2\n              ? t(\"Completed\")\n              : items.status === 1\n              ? t(\"ongoing\")\n              : t(\"Expired\")}\n          </Typography>\n        </Box>\n      </Card>\n    );\n  }\n\n  return (\n    <Card\n      className=\"cardBox\"\n      sx={{ position: \"relative\", cursor: \"pointer\" }}\n      onClick={onClick}\n    >\n      <CardMedia\n        className=\"card-media\"\n        image={\n          subdomain\n            ? require(`./../assets/dummyCardImgs/${subdomain}.png`)\n            : require(\"./../assets/dummyCardImgs/Management.png\")\n        }\n        title=\"green iguana\"\n      />\n      <div onClick={onClick} className=\"card-div\"></div>\n      <CardContent>\n        {items.primaryCategory && (\n          <Typography\n            gutterBottom\n            variant=\"h7\"\n            component=\"div\"\n            className=\"ribbonCard\"\n          >\n            <Box className=\"cardCourses\">{items.primaryCategory}</Box>\n          </Typography>\n        )}\n        <Box className=\"card-img-container\">\n          <img\n            src={items.appIcon ? items.appIcon : require(\"assets/default.png\")}\n            className=\"card-img\"\n            alt=\"App Icon\"\n          />\n        </Box>\n        {items.name && (\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n            component=\"div\"\n            className=\"cardTitle mt-20\"\n          >\n            {items.name}\n          </Typography>\n        )}\n        {items.organisation && items.organisation.length > 0 && (\n          <Typography\n            variant=\"body2\"\n            color=\"#5B5B5B\"\n            style={{ fontSize: \"11px\", padding: \"10px 0\", textAlign: \"left\" }}\n          >\n            <Box>\n              {items.organisation.length === 1\n                ? items.organisation[0]\n                : `${items.organisation[0]} + ${items.organisation.length - 1}`}\n            </Box>\n          </Typography>\n        )}\n      </CardContent>\n      {(items.board ||\n        items.gradeLevel ||\n        items.se_boards ||\n        items.se_gradeLevels) && (\n        <>\n          <Box className=\"textLeft mb-15 d-flex\">\n            {(items.board || items.se_boards) && (\n              <Tooltip\n                title={items.board || items.se_boards}\n                placement=\"top\"\n                className=\"labelOne cardLabelEllips\"\n              >\n                <Button> {items.board || items.se_boards}</Button>\n              </Tooltip>\n              // <Button type=\"button\" size=\"small\">\n              //   {items.board || items.se_boards}\n              // </Button>\n            )}\n            {(items.gradeLevel || items.se_gradeLevels) && (\n              <Tooltip\n                title={items.gradeLevel || items.se_gradeLevels}\n                placement=\"top\"\n                className=\"labeltwo cardLabelEllips\"\n              >\n                <Button> {items.gradeLevel || items.se_gradeLevels}</Button>\n              </Tooltip>\n            )}\n          </Box>\n        </>\n      )}\n    </Card>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Footer from \"components/Footer\";\nimport Header from \"components/header\";\nimport Container from \"@mui/material/Container\";\nimport FloatingChatIcon from \"../../components/FloatingChatIcon\";\nimport SearchOffIcon from \"@mui/icons-material/SearchOff\";\nimport Box from \"@mui/material/Box\";\nimport { BorderAllRounded } from \"@mui/icons-material\";\n\nconst NoResult = () => {\n  //   const { contentId } = useParams();\n  const { t } = useTranslation();\n\n  // Now contentId contains the value from the URL parameter\n  return (\n    <div>\n      {/* <Container maxWidth=\"md\" role=\"main\" className=\"container-pb\"> */}\n      <Box\n        style={{\n          fontSize: \"30px\",\n          border: \"solid 1px #edece9\",\n          padding: \"109px\",\n          textAlign: \"center\",\n          margin: \"20px 0 60px 0\",\n          BorderRadius: \"10px\",\n        }}\n      >\n        <SearchOffIcon style={{ fontSize: \"70px\", color: \"#ccc\" }} />\n        <Box> {t(\"NO_RESULT_FOUND\")}</Box>\n      </Box>\n      {/* </Container> */}\n      <FloatingChatIcon />\n    </div>\n  );\n};\n\nexport default NoResult;\n","import * as React from \"react\";\n\nimport Alert from \"@mui/material/Alert\";\nimport Button from \"@mui/material/Button\";\nimport Slide from \"@mui/material/Slide\";\nimport Snackbar from \"@mui/material/Snackbar\";\n\nexport default function ToasterCommon({ response }) {\n  const [open, setOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    if (response) {\n      setOpen(true);\n    }\n  }, [response]);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n      open={open}\n      autoHideDuration={6000}\n      onClose={handleClose}\n      TransitionComponent={Slide}\n      TransitionProps={{\n        direction: \"center\",\n      }}\n      sx={{\n        width: \"35%\",\n        margin: \"0 auto\",\n        marginTop: \"50vh\",\n        transform: \"translateY(-50%)\",\n      }}\n    >\n      <Alert\n        onClose={handleClose}\n        severity=\"error\"\n        variant=\"filled\"\n        icon={false}\n        sx={{ width: \"100%\", backgroundColor: \"#E9F5EA\", color: \"red\" }}\n      >\n        {response}\n      </Alert>\n    </Snackbar>\n  );\n}\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Footer from \"components/Footer\";\nimport Header from \"components/header\";\nimport Container from \"@mui/material/Container\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport Filter from \"components/filter\";\nimport BoxCard from \"components/Card\";\nimport FloatingChatIcon from \"../../components/FloatingChatIcon\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport * as util from \"../../services/utilService\";\nimport Search from \"components/search\";\nimport NoResult from \"pages/content/noResultFound\";\nimport Alert from \"@mui/material/Alert\";\nimport appConfig from \"../../configs/appConfig.json\";\nconst urlConfig = require(\"../../configs/urlConfig.json\");\nimport ToasterCommon from \"../ToasterCommon\";\n\nconst ContinueLearning = () => {\n  const { t } = useTranslation();\n  const [data, setData] = useState([]);\n  const [filters, setFilters] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [gradeLevels, setGradeLevels] = useState([]);\n  const [courseStatus, setCourseStatus] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { domain } = location.state || {};\n  const [toasterOpen, setToasterOpen] = useState(false);\n  const [toasterMessage, setToasterMessage] = useState(\"\");\n\n  const showErrorMessage = (msg) => {\n    setToasterMessage(msg);\n    setTimeout(() => {\n      setToasterMessage(\"\");\n    }, 2000);\n    setToasterOpen(true);\n  };\n\n  useEffect(() => {\n    fetchData();\n    fetchGradeLevels();\n  }, [filters]);\n\n  const handleFilterChange = (selectedOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    setFilters({ ...filters, se_gradeLevel: selectedValues });\n  };\n\n  const fetchData = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    const _userId = util.userId();\n\n    const headers = {\n      \"Content-Type\": \"application/json\",\n    };\n\n    try {\n      const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.COURSE.GET_ENROLLED_COURSES}/${_userId}?orgdetails=${appConfig.Course.contentApiQueryParams.orgdetails}&licenseDetails=${appConfig.Course.contentApiQueryParams.licenseDetails}&fields=${urlConfig.params.enrolledCourses.fields}&batchDetails=${urlConfig.params.enrolledCourses.batchDetails}&contentDetails=${urlConfig.params.enrolledCourses.contentDetails}`;\n      const response = await fetch(url, headers);\n      const responseData = await response.json();\n      setData(responseData.result.courses);\n    } catch (error) {\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const fetchGradeLevels = async () => {\n    const defaultFramework = localStorage.getItem(\"defaultFramework\");\n    try {\n      const url = `${urlConfig.URLS.PUBLIC_PREFIX}${urlConfig.URLS.FRAMEWORK.READ}/${defaultFramework}?categories=${urlConfig.params.framework}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      if (\n        data.result &&\n        data.result.framework &&\n        data.result.framework.categories\n      ) {\n        const gradeLevelCategory = data.result.framework.categories.find(\n          (category) => category.identifier === \"nulp_gradelevel\"\n        );\n        if (gradeLevelCategory && gradeLevelCategory.terms) {\n          const gradeLevelsOptions = gradeLevelCategory.terms.map((term) => ({\n            value: term.code,\n            label: term.name,\n          }));\n          setGradeLevels(gradeLevelsOptions);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error fetching grade levels:\", error);\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    }\n  };\n\n  const handleCourseStatusChange = (selectedOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    setCourseStatus(selectedValues);\n  };\n\n  // Filtered courses based on selected course status\n  const filteredCourses = useMemo(() => {\n    if (!courseStatus.length) {\n      // If no course status is selected, return all courses\n      return data;\n    }\n\n    // Filter courses based on selected course status\n    return data.filter((courses) =>\n      courseStatus.includes(courses.contents.status)\n    );\n  }, [courseStatus, data]);\n  const handleCardClick = (contentId, courseType) => {\n    if (courseType === \"Course\") {\n      // navigate(\"/joinCourse\", { state: { contentId } });\n      navigate(`/joinCourse/${contentId}`);\n    } else {\n      navigate(\"/player\");\n    }\n  };\n  return (\n    <div>\n      {toasterMessage && <ToasterCommon response={toasterMessage} />}\n      <Container\n        maxWidth=\"xl\"\n        role=\"main\"\n        className=\"allContent filter-profile\"\n      >\n        {error && (\n          <Alert severity=\"error\" className=\"my-10\">\n            {error}\n          </Alert>\n        )}\n        <Box style={{ margin: \"20px 0\" }}>\n          <Filter\n            options={gradeLevels}\n            label=\"Filter by Sub-Domain\"\n            onChange={handleFilterChange}\n          />\n        </Box>\n        <Box textAlign=\"center\" padding=\"10\">\n          <Box>\n            <Grid\n              container\n              spacing={2}\n              style={{ margin: \"20px 0\", marginBottom: \"10px\" }}\n            >\n              {/* \n              {filteredCourses.map((items) => (\n                <Grid\n                  item\n                  xs={12}\n                  md={6}\n                  lg={3}\n                  style={{ marginBottom: \"10px\" }}\n                  key={items.contentId}\n                >\n                  <BoxCard items={items.content} index={filteredCourses.length}></BoxCard>\n                </Grid>\n              ))} */}\n\n              {filteredCourses.length === 0 ? (\n                <NoResult />\n              ) : (\n                filteredCourses.map((items) => (\n                  <Grid\n                    item\n                    xs={6}\n                    md={6}\n                    lg={3}\n                    style={{ marginBottom: \"10px\" }}\n                    key={items.contentId}\n                  >\n                    <BoxCard\n                      items={items.content}\n                      index={filteredCourses.length}\n                      onClick={() =>\n                        handleCardClick(\n                          items.content.identifier,\n                          items.content.primaryCategory\n                        )\n                      }\n                    ></BoxCard>\n                  </Grid>\n                ))\n              )}\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n      <FloatingChatIcon />\n    </div>\n  );\n};\n\nexport default ContinueLearning;\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Checkbox,\n  ListItemText,\n  Box,\n} from \"@mui/material\";\nimport * as util from \"../services/utilService\";\nimport { useTranslation } from \"react-i18next\";\nconst urlConfig = require(\"../configs/urlConfig.json\");\nimport ToasterCommon from \"./ToasterCommon\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 300,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst SelectPreference = ({ isOpen, onClose }) => {\n  const { t } = useTranslation();\n  const [categories, setCategories] = useState([]);\n  const [subCategories, setSubCategories] = useState([]);\n  const [languages, setLanguages] = useState([]);\n  const [topics, setTopics] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [frameworkData, setFrameworkData] = useState();\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [selectedSubCategory, setSelectedSubCategory] = useState([]);\n  const [selectedTopic, setSelectedTopic] = useState(\"\");\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n  const _userId = util.userId();\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState([]);\n  const [isRootOrg, setIsRootOrg] = useState(false);\n  const [frameworks, setFrameworks] = useState([]);\n  const [defaultFramework, setDefaultFramework] = useState(\"\");\n  const [custodianOrgId, setCustodianOrgId] = useState(\"\");\n  const [isEmptyPreference, setIsEmptyPreference] = useState(false);\n  const [domain, setDomain] = useState();\n  const [subDomain, setSubDomain] = useState();\n  const [language, setLanguage] = useState();\n  const [topic, setTopic] = useState();\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [preCategory, setPreCategory] = useState(\"\");\n  const [preTopic, setPreTopic] = useState(\"\");\n  const [preSubCategory, setPreSubCategory] = useState([]);\n  const [preLanguages, setPreLanguages] = useState([]);\n  const [toasterOpen, setToasterOpen] = useState(false);\n  const [toasterMessage, setToasterMessage] = useState(\"\");\n\n  const showErrorMessage = (msg) => {\n    setToasterMessage(msg);\n    setTimeout(() => {\n      setToasterMessage(\"\");\n    }, 2000);\n    setToasterOpen(true);\n  };\n\n  useEffect(() => {\n    const fetchUserDataAndSetCustodianOrgData = async () => {\n      try {\n        const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.SYSTEM_SETTING.CUSTODIAN_ORG}`;\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch custodian organization ID\");\n        }\n        const data = await response.json();\n        console.log(\"Raw API response:\", data);\n        const custodianOrgId = data?.result?.response?.value;\n        setCustodianOrgId(custodianOrgId);\n        // setUserRootOrgId(localStorage.getItem(\"userRootOrgId\"));\n        const rootOrgId = localStorage.getItem(\"userRootOrgId\");\n        if (custodianOrgId === rootOrgId) {\n          const url = `${urlConfig.URLS.PUBLIC_PREFIX}${urlConfig.URLS.CHANNEL.READ}/${custodianOrgId}`;\n          const response = await fetch(url);\n          const data = await response.json();\n          const defaultFramework = data?.result?.channel?.defaultFramework;\n          setDefaultFramework(defaultFramework);\n          localStorage.setItem(\"defaultFramework\", defaultFramework);\n        } else {\n          const url = `${urlConfig.URLS.PUBLIC_PREFIX}${urlConfig.URLS.CHANNEL.READ}/${rootOrgId}`;\n          const response = await fetch(url);\n          const data = await response.json();\n          const defaultFramework = data?.result?.channel?.defaultFramework;\n          setDefaultFramework(defaultFramework);\n        }\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n        showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n        setToasterOpen(true);\n      }\n    };\n\n    fetchUserDataAndSetCustodianOrgData();\n  }, []);\n\n  useEffect(() => {\n    const defaultFrameworkFromLocal = localStorage.getItem(\"defaultFramework\");\n    setDefaultFramework(defaultFrameworkFromLocal);\n    if (defaultFramework) {\n      getFramework(defaultFramework);\n    }\n  }, [defaultFramework]);\n\n  const handleCategoryChange = (event) => {\n    setSelectedCategory(event.target.value);\n    setSelectedSubCategory([]);\n  };\n\n  const handleSubCategoryChange = (event) => {\n    setSelectedSubCategory(event.target.value);\n  };\n\n  const handleTopicChange = (event) => {\n    setSelectedTopic(event.target.value);\n  };\n\n  const handleLanguageChange = (event) => {\n    setSelectedLanguages(event.target.value);\n  };\n\n  useEffect(() => {\n    if (frameworkData) {\n      getUserData();\n    }\n  }, [frameworkData]);\n\n  const getFramework = async (defaultFramework) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const url = `${urlConfig.URLS.PUBLIC_PREFIX}${urlConfig.URLS.FRAMEWORK.READ}/${defaultFramework}`;\n      const response = await fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n        throw new Error(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n\n      const data = await response.json();\n      setFrameworkData(data?.result?.framework?.categories);\n      setCategories(data?.result?.framework?.categories[0]?.terms);\n      setSubCategories(data?.result?.framework?.categories[1]?.terms);\n      setTopics(data?.result?.framework?.categories[2]?.terms);\n      setLanguages(data?.result?.framework?.categories[3]?.terms);\n\n      setDomain(data?.result?.framework?.categories[0]?.name);\n      setSubDomain(data?.result?.framework?.categories[1]?.name);\n      setTopic(data?.result?.framework?.categories[2]?.name);\n      setLanguage(data?.result?.framework?.categories[3]?.name);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getUserData = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.USER.GET_PROFILE}${_userId}?fields=${urlConfig.params.userReadParam.fields}`;\n      const response = await fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n        throw new Error(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n\n      const responseData = await response.json();\n      if (_.isEmpty(responseData?.result?.response.framework)) {\n        setIsEmptyPreference(true);\n      } else {\n        setSelectedCategory(\n          responseData?.result?.response?.framework?.board[0]\n        );\n        setSelectedSubCategory(\n          responseData?.result?.response?.framework?.gradeLevel\n        );\n\n        setSelectedTopic(\n          responseData?.result?.response?.framework?.subject &&\n            responseData?.result?.response?.framework?.subject[0]\n        );\n        setSelectedLanguages(responseData?.result?.response?.framework?.medium);\n\n        setPreCategory(responseData?.result?.response?.framework?.board[0]);\n        responseData?.result?.response?.framework?.subject &&\n          setPreTopic(responseData?.result?.response?.framework?.subject[0]);\n        setPreLanguages(responseData?.result?.response?.framework?.medium);\n        setPreSubCategory(\n          responseData?.result?.response?.framework?.gradeLevel\n        );\n      }\n      console.log(\"getUserData\", responseData);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      showErrorMessage(\"Failed to fetch data. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const updateUserData = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    const requestBody = {\n      params: {},\n      request: {\n        framework: {\n          board: [selectedCategory],\n          medium: selectedLanguages,\n          gradeLevel: selectedSubCategory,\n          subject: [selectedTopic],\n          id: defaultFramework,\n        },\n        userId: _userId,\n      },\n    };\n\n    try {\n      const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.USER.UPDATE_USER_PROFILE}`;\n      const response = await fetch(url, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(requestBody),\n      });\n\n      if (!response.ok) {\n        showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n        throw new Error(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n\n      const responseData = await response.json();\n      console.log(\"responseData\", responseData);\n    } catch (error) {\n      showErrorMessage(\"Failed to fetch data. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSavePreferences = () => {\n    updateUserData();\n    handleClose();\n  };\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const deepEqual = (array1, array2) => {\n    array1 = array1.sort();\n    array2 = array2.sort();\n    var is_same =\n      array1.length == array2.length &&\n      array1.every(function (element, index) {\n        return element === array2[index];\n      });\n    return is_same;\n  };\n\n  useEffect(() => {\n    if (\n      preCategory == selectedCategory &&\n      preTopic == selectedTopic &&\n      deepEqual(preLanguages, selectedLanguages) &&\n      deepEqual(preSubCategory, selectedSubCategory)\n    ) {\n      setIsDisabled(true);\n    } else {\n      setIsDisabled(false);\n    }\n  }, [\n    selectedCategory,\n    selectedSubCategory,\n    selectedLanguages,\n    selectedTopic,\n    preCategory,\n    preTopic,\n    preLanguages,\n    preSubCategory,\n  ]);\n\n  return (\n    <div>\n      {toasterMessage && <ToasterCommon response={toasterMessage} />}\n      <Box sx={{ minWidth: 120 }} className=\"preference\">\n        <FormControl fullWidth sx={{ marginBottom: 2 }}>\n          <InputLabel id=\"category-label\" className=\"year-select\">\n            {domain}\n          </InputLabel>\n          <Select\n            labelId=\"category-label\"\n            value={selectedCategory}\n            onChange={handleCategoryChange}\n          >\n            {categories?.map((category) => (\n              <MenuItem key={category?.id} value={category?.name}>\n                {category?.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <Box sx={{ minWidth: 120 }}>\n          <FormControl fullWidth sx={{ marginBottom: 2 }}>\n            <InputLabel id=\"sub-category-label\" className=\"year-select\">\n              {subDomain}\n            </InputLabel>\n            <Select\n              labelId=\"sub-category-label\"\n              id=\"sub-category-select\"\n              multiple\n              value={selectedSubCategory}\n              onChange={handleSubCategoryChange}\n            >\n              {subCategories?.map((subCategory) => (\n                <MenuItem key={subCategory?.id} value={subCategory?.name}>\n                  <Checkbox\n                    checked={selectedSubCategory?.includes(subCategory?.name)}\n                  />\n                  <ListItemText primary={subCategory?.name} />\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Box>\n        <Box sx={{ minWidth: 120 }}>\n          <FormControl fullWidth sx={{ marginBottom: 2 }}>\n            <InputLabel id=\"language-label\" className=\"year-select\">\n              {language}\n            </InputLabel>\n            <Select\n              labelId=\"language-label\"\n              id=\"language-select\"\n              multiple\n              value={selectedLanguages}\n              onChange={handleLanguageChange}\n            >\n              {languages?.map((language) => (\n                <MenuItem key={language?.id} value={language?.name}>\n                  <Checkbox\n                    checked={selectedLanguages?.includes(language?.name)}\n                  />\n                  <ListItemText primary={language?.name} />\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Box>\n        <FormControl fullWidth sx={{ marginBottom: 2 }}>\n          <InputLabel id=\"topic-label\" className=\"year-select\">\n            {topic}\n          </InputLabel>\n          <Select\n            labelId=\"topic-label\"\n            value={selectedTopic}\n            onChange={handleTopicChange}\n          >\n            {topics?.map((topic) => (\n              <MenuItem key={topic?.id} value={topic?.name}>\n                {topic?.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Box>\n      <Box className=\"d-flex jc-en\">\n        <Button\n          className=\"custom-btn-primary my-10 lg-mr-20\"\n          onClick={handleSavePreferences}\n          disabled={isDisabled}\n        >\n          {t(\"SUBMIT\")}\n        </Button>\n\n        {!isEmptyPreference && (\n          <Button className=\"custom-btn-default\" onClick={handleClose}>\n            {t(\"CANCEL\")}\n          </Button>\n        )}\n      </Box>\n    </div>\n  );\n};\n\nexport default SelectPreference;\n","import React, { useState, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Footer from \"components/Footer\";\nimport Header from \"components/header\";\nimport Container from \"@mui/material/Container\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport FloatingChatIcon from \"../../components/FloatingChatIcon\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport Card from \"@mui/material/Card\";\nimport * as util from \"../../services/utilService\";\nimport Filter from \"components/filter\";\nimport NoResult from \"pages/content/noResultFound\";\nimport Alert from \"@mui/material/Alert\";\nimport appConfig from \"../../configs/appConfig.json\";\nconst urlConfig = require(\"../../configs/urlConfig.json\");\nimport ToasterCommon from \"../ToasterCommon\";\nimport BoxCard from \"components/Card\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\n\nconst LearningHistory = () => {\n  const { t } = useTranslation();\n  const [courseData, setCourseData] = useState(null);\n  const [selectedStatus, setSelectedStatus] = useState([]);\n  const [error, setError] = useState(null);\n  const [toasterOpen, setToasterOpen] = useState(false);\n  const [toasterMessage, setToasterMessage] = useState(\"\");\n  const navigate = useNavigate();\n\n  const showErrorMessage = (msg) => {\n    setToasterMessage(msg);\n    setTimeout(() => {\n      setToasterMessage(\"\");\n      setToasterOpen(false);\n    }, 2000);\n    setToasterOpen(true);\n  };\n\n  const _userId = util.userId();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setError(null);\n      try {\n        const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.COURSE.GET_ENROLLED_COURSES}/${_userId}?orgdetails=${appConfig.Course.contentApiQueryParams.orgdetails}&licenseDetails=${appConfig.Course.contentApiQueryParams.licenseDetails}&fields=${urlConfig.params.enrolledCourses.fields}&batchDetails=${urlConfig.params.enrolledCourses.batchDetails}`;\n        const response = await fetch(url, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        const data = await response.json();\n        setCourseData(data);\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n        showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n    };\n    fetchData();\n  }, [_userId, t]);\n\n  const handleFilterChange = (selectedOptions) => {\n    console.log(\"Selected filter options:\", selectedOptions); // Debug: Check selected filter options\n    setSelectedStatus(selectedOptions);\n  };\n\n  const filteredCourses = courseData?.result?.courses?.filter((course) => {\n    if (selectedStatus.length > 0) {\n      const selectedValues = selectedStatus.map((option) => option.value);\n      return selectedValues.includes(course.status);\n    }\n    return true; // Show all if no filter selected\n  });\n\n  return (\n    <div>\n      {toasterMessage && <ToasterCommon response={toasterMessage} />}\n      <Container\n        maxWidth=\"xl\"\n        role=\"main\"\n        className=\"allContent filter-profile profile\"\n      >\n        {error && (\n          <Alert severity=\"error\" className=\"my-10\">\n            {error}\n          </Alert>\n        )}\n        <Box textAlign=\"center\" padding=\"10\">\n          <Box style={{ margin: \"20px 0\" }}>\n            <Filter\n              options={[\n                { label: \"Ongoing\", value: 1 },\n                { label: \"Completed\", value: 2 },\n                { label: \"Expired\", value: 0 },\n              ]}\n              label=\"Filter by Status\"\n              onChange={handleFilterChange}\n            />\n          </Box>\n          <Box>\n            <Grid\n              container\n              spacing={2}\n              style={{ textAlign: \"left\", paddingTop: \"10px\" }}\n            >\n              {filteredCourses?.length === 0 ? (\n                <NoResult />\n              ) : (\n                filteredCourses?.map((course) => (\n                  <Grid item xs={6} md={3} key={course.courseName}>\n                    <BoxCard\n                      items={course}\n                      index={courseData.result.courses.length}\n                      onClick={() =>\n                        navigate(`/joinCourse/${course.content.identifier}`)\n                      }\n                    />\n                  </Grid>\n                ))\n              )}\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n      <FloatingChatIcon />\n      {/* <Footer /> */}\n    </div>\n  );\n};\nexport default LearningHistory;\n","// Profile.js\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Footer from \"components/Footer\";\nimport Header from \"components/header\";\nimport Container from \"@mui/material/Container\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport SimCardDownloadOutlinedIcon from \"@mui/icons-material/SimCardDownloadOutlined\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport data from \"../../assets/certificates.json\";\nimport DescriptionOutlinedIcon from \"@mui/icons-material/DescriptionOutlined\";\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport Card from \"@mui/material/Card\";\nimport FloatingChatIcon from \"../../components/FloatingChatIcon\";\nimport * as util from \"../../services/utilService\";\nimport axios from \"axios\";\nimport NoResult from \"pages/content/noResultFound\";\nimport Alert from \"@mui/material/Alert\";\nimport ToasterCommon from \"../ToasterCommon\";\nimport { Button } from \"@mui/material\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { jsPDF } from \"jspdf\";\nimport { svg2pdf } from \"svg2pdf.js\";\nimport DOMPurify from \"dompurify\";\n\nconst Certificate = () => {\n  const { t } = useTranslation();\n  const [certData, setCertData] = useState(null);\n  const [otherCertData, setOtherCertData] = useState([]);\n  const [error, setError] = useState(null);\n  const urlConfig = require(\"../../configs/urlConfig.json\");\n  const [toasterOpen, setToasterOpen] = useState(false);\n  const [toasterMessage, setToasterMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const [svgData, setSvgData] = useState(\"\");\n  const svgContainerRef = useRef(null);\n\n  const showErrorMessage = (msg) => {\n    setToasterMessage(msg);\n    setTimeout(() => {\n      setToasterMessage(\"\");\n    }, 2000);\n    setToasterOpen(true);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setError(null);\n      try {\n        const _userId = util.userId();\n        const request = {\n          request: {\n            _source: [\n              \"data.badge.issuer.name\",\n              \"pdfUrl\",\n              \"data.issuedOn\",\n              \"data.badge.name\",\n            ],\n            query: {\n              bool: {\n                must: [\n                  {\n                    match_phrase: {\n                      \"recipient.id\": _userId,\n                    },\n                  },\n                ],\n              },\n            },\n          },\n        };\n        const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.CERTIFICATE.CERT_SEARCH}`;\n        const response = await axios.post(url, request);\n        const data = response.data;\n        setCertData(data);\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n        showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n\n      try {\n        const _userId = util.userId();\n        const request = {\n          filters: {\n            recipient: { id: { eq: _userId } },\n          },\n        };\n        const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.CERTIFICATE.CERTIF_SEARCH}`;\n        const response = await axios.post(url, request);\n        const data = response.data;\n        setOtherCertData(data);\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n        showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const getCertificate = async (template, osid) => {\n    setError(null);\n    try {\n      let config = {\n        method: \"get\",\n        maxBodyLength: Infinity,\n        url: `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.USER.DOWNLOAD_CERTIFICATE}/${osid}`,\n        withCredentials: true,\n        headers: {\n          Accept: \"image/svg+xml\",\n          \"Content-Type\": \"application/json, text/plain\",\n          template: template,\n        },\n      };\n\n      const response = await axios.request(config);\n      setSvgData(response.data);\n      if (response.data) {\n        await downloadPDF(response.data);\n      }\n    } catch (error) {\n      console.error(\"Error fetching user certificate:\", error);\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    }\n  };\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    const options = { day: \"2-digit\", month: \"long\", year: \"numeric\" };\n    return date.toLocaleDateString(\"en-GB\", options);\n  };\n  const handleGoBack = () => {\n    navigate(-1);\n  };\n  const downloadPDF = async (svgData) => {\n    // Sanitize the SVG data\n    const cleanSvgData = DOMPurify.sanitize(svgData);\n\n    // Create a temporary div to parse the sanitized SVG data\n    const svgContainer = document.createElement(\"div\");\n    svgContainer.innerHTML = cleanSvgData;\n\n    const svgElement = svgContainer.querySelector(\"svg\");\n    if (!svgElement) {\n      console.error(\"No SVG element found\");\n      return;\n    }\n\n    // Adjust the dimensions of the jsPDF document\n    const width = svgElement.getAttribute(\"width\") || svgElement.clientWidth;\n    const height = svgElement.getAttribute(\"height\") || svgElement.clientHeight;\n\n    const doc = new jsPDF({\n      orientation: \"landscape\",\n      unit: \"pt\",\n      format: [width, height],\n    });\n\n    // Convert the SVG to PDF using svg2pdf\n    await svg2pdf(svgElement, doc, {\n      xOffset: 0,\n      yOffset: 0,\n      scale: 1,\n    });\n\n    // Save the PDF document\n    doc.save(\"certificate.pdf\");\n  };\n\n  return (\n    <div>\n      <Box className=\"lg-hide\">\n        <Header />\n      </Box>\n      {toasterMessage && <ToasterCommon response={toasterMessage} />}\n      <Container\n        maxWidth=\"xxl\"\n        role=\"main\"\n        className=\"container-pb mb-20  xs-pb-75\"\n      >\n        {error && (\n          <Alert severity=\"error\" className=\"my-10\">\n            {error}\n          </Alert>\n        )}\n        <Box textAlign=\"center\" padding=\"10\" className=\"xs-pt-15\">\n          <Box\n            sx={{ fontSize: \"18px\", color: \"#484848\" }}\n            className=\"lg-hide text-left my-15\"\n          >\n            {t(\"MY_PROFILE\")}\n          </Box>\n          <Box className=\"d-flex jc-bw alignItems-center lg-mb-20\">\n            <Box style={{ display: \"flex\", alignItems: \"end\" }}>\n              <DescriptionOutlinedIcon style={{ paddingRight: \"10px\" }} />{\" \"}\n              {t(\"DOWNLOAD_CERTIFICATES\")}\n            </Box>\n            <Link\n              type=\"button\"\n              href=\"/profile\"\n              className=\"viewAll xs-cert-btn\"\n              // onClick={handleGoBack}\n            >\n              {t(\"BACK_TO_LEARNNG\")}\n            </Link>\n          </Box>\n          <Card\n            style={{ padding: \"20px\", textAlign: \"left\" }}\n            className=\"xs-cert-bx\"\n          >\n            <Grid container spacing={2} style={{ textAlign: \"left\" }}>\n              {(!certData || certData.result.response.content.length === 0) &&\n              otherCertData.length === 0 ? (\n                <NoResult />\n              ) : (\n                <>\n                  {certData &&\n                    certData.result.response.content &&\n                    certData.result.response.content.map((certificate) => (\n                      <Grid item xs={12} md={4} key={certificate._id}>\n                        <Card\n                          sx={{\n                            marginTop: \"10px\",\n                            padding: \"10px\",\n                            borderRadius: \"10px\",\n                            border: \"solid 1px #EFEFEF\",\n                            boxShadow: \"none\",\n                            color: \"#484848\",\n                          }}\n                        >\n                          <Typography\n                            className=\"twoLineEllipsis\"\n                            variant=\"subtitle1\"\n                            color=\"text.secondary\"\n                            component=\"div\"\n                            style={{\n                              fontSize: \"14px\",\n                              paddingBottom: \"0\",\n                              height: \"42px\",\n                              fontWeight: \"600\",\n                            }}\n                          >\n                            {certificate._source.data.badge.name}\n                          </Typography>\n                          <Typography\n                            variant=\"subtitle1\"\n                            color=\"text.secondary\"\n                            component=\"div\"\n                            style={{ fontSize: \"12px\" }}\n                          >\n                            {t(\"CERTIFICATE_GIVEN_BY\")}:{\" \"}\n                            {certificate._source.data.badge.issuer.name}\n                          </Typography>\n                          <Typography\n                            variant=\"subtitle1\"\n                            color=\"text.secondary\"\n                            component=\"div\"\n                            style={{ fontSize: \"12px\" }}\n                          >\n                            {t(\"CERTIFICATE_ISSUE_DATE\")}:{\" \"}\n                            {formatDate(certificate._source.data.issuedOn)}\n                          </Typography>\n                          <Box\n                            style={{\n                              display: \"flex\",\n                              alignItems: \"end\",\n                              color: \"#1976d2\",\n                            }}\n                          >\n                            <SimCardDownloadOutlinedIcon />\n                            <Link\n                              href={certificate._source.pdfUrl} // Corrected usage of pdfUrl\n                              underline=\"none\"\n                              style={{\n                                fontSize: \"12px\",\n                                marginTop: \"15px\",\n                                display: \"block\",\n                              }}\n                              key={certificate._id} // Add key prop\n                            >\n                              {t(\"CERTIFICATES\")}\n                            </Link>\n                          </Box>\n                        </Card>\n                      </Grid>\n                    ))}\n                  {otherCertData.map((certificate) => (\n                    <Grid item xs={12} md={4} key={certificate.osid}>\n                      {console.log(\"77777777777777777777777777\", certificate)}\n                      <Card\n                        sx={{\n                          marginTop: \"10px\",\n                          padding: \"10px\",\n                          borderRadius: \"10px\",\n                          border: \"solid 1px #EFEFEF\",\n                          boxShadow: \"none\",\n                          color: \"#484848\",\n                        }}\n                      >\n                        <Typography\n                          className=\"twoLineEllipsis\"\n                          variant=\"subtitle1\"\n                          color=\"text.secondary\"\n                          component=\"div\"\n                          style={{\n                            fontSize: \"14px\",\n                            paddingBottom: \"0\",\n                            height: \"42px\",\n                            fontWeight: \"600\",\n                          }}\n                        >\n                          {certificate.training.name}\n                        </Typography>\n                        <Typography\n                          variant=\"subtitle1\"\n                          color=\"text.secondary\"\n                          component=\"div\"\n                          style={{ fontSize: \"12px\" }}\n                        >\n                          {t(\"CERTIFICATE_GIVEN_BY\")}: {certificate.issuer.name}\n                        </Typography>\n                        <Typography\n                          variant=\"subtitle1\"\n                          color=\"text.secondary\"\n                          component=\"div\"\n                          style={{ fontSize: \"12px\" }}\n                        >\n                          {t(\"CERTIFICATE_ISSUE_DATE\")}:{\" \"}\n                          {formatDate(certificate.osCreatedAt)}\n                        </Typography>\n                        <Box\n                          style={{\n                            display: \"flex\",\n                            alignItems: \"end\",\n                            color: \"#1976d2\",\n                          }}\n                          className=\"text-green\"\n                        >\n                          <SimCardDownloadOutlinedIcon />\n                          <Link\n                            href={certificate.pdfUrl}\n                            underline=\"none\"\n                            style={{\n                              fontSize: \"12px\",\n                              marginTop: \"15px\",\n                              display: \"block\",\n                            }}\n                            key={certificate.osid}\n                            onClick={() => {\n                              getCertificate(\n                                certificate.templateUrl,\n                                certificate.osid\n                              );\n                            }}\n                          >\n                            {t(\"CERTIFICATES\")}\n                          </Link>\n                        </Box>\n                      </Card>\n                    </Grid>\n                  ))}\n                </>\n              )}\n            </Grid>\n          </Card>\n        </Box>\n      </Container>\n      <FloatingChatIcon />\n      <Box className=\"lg-hide\">\n        <Footer />\n      </Box>\n    </div>\n  );\n};\n\nexport default Certificate;\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Footer from \"components/Footer\";\nimport Header from \"components/header\";\nimport Container from \"@mui/material/Container\";\nimport Box from \"@mui/material/Box\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Card from \"@mui/material/Card\";\nimport Typography from \"@mui/material/Typography\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport ModeEditIcon from \"@mui/icons-material/ModeEdit\";\nimport EmojiEventsOutlinedIcon from \"@mui/icons-material/EmojiEventsOutlined\";\nimport TimelapseOutlinedIcon from \"@mui/icons-material/TimelapseOutlined\";\nimport Grid from \"@mui/material/Grid\";\nimport LibraryAddCheckOutlinedIcon from \"@mui/icons-material/LibraryAddCheckOutlined\";\nimport ReceiptLongOutlinedIcon from \"@mui/icons-material/ReceiptLongOutlined\";\nimport FloatingChatIcon from \"../../components/FloatingChatIcon\";\nimport CircularProgressWithLabel from \"../../components/CircularProgressWithLabel\";\nimport RestoreOutlinedIcon from \"@mui/icons-material/RestoreOutlined\";\nimport SettingsOutlinedIcon from \"@mui/icons-material/SettingsOutlined\";\nimport * as util from \"../../services/utilService\";\nimport { useNavigate } from \"react-router-dom\";\nimport SearchBox from \"components/search\";\nimport ContinueLearning from \"./continueLearning\";\nimport SelectPreference from \"pages/SelectPreference\";\nimport { Dialog, DialogTitle, DialogContent } from \"@mui/material\";\nimport _ from \"lodash\";\nimport Modal from \"@mui/material/Modal\";\nconst designations = require(\"../../configs/designations.json\");\nconst urlConfig = require(\"../../configs/urlConfig.json\");\nimport ToasterCommon from \"../ToasterCommon\";\nimport Tab from \"@mui/material/Tab\";\nimport TabContext from \"@material-ui/lab/TabContext\";\nimport TabList from \"@material-ui/lab/TabList\";\nimport TabPanel from \"@material-ui/lab/TabPanel\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n} from \"@mui/material\";\nimport styled from \"styled-components\";\nimport LearningHistory from \"./learningHistory\";\nimport Certificate from \"./certificate\";\n\nconst DELAY = 1500;\nconst MAX_CHARS = 500;\nconst CssTextField = styled(TextField)({\n  \"& label.Mui-focused\": {\n    color: \"#A0AAB4\",\n  },\n  \"& .MuiInput-underline:after\": {\n    borderBottomColor: \"#B2BAC2\",\n  },\n  \"& .MuiOutlinedInput-root\": {\n    \"& fieldset\": {\n      borderRadius: \"4px\",\n    },\n    \"&:hover fieldset\": {\n      borderColor: \"#B2BAC2\",\n    },\n\n    \"&.Mui-focused fieldset\": {\n      borderColor: \"#6F7E8C\",\n    },\n  },\n});\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  width: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n};\n\nconst Profile = () => {\n  const [value, setValue] = useState(\"1\");\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const { t } = useTranslation();\n  const [userData, setUserData] = useState(null);\n  const [certData, setCertificateCountData] = useState({});\n  const [courseData, setCourseCountData] = useState({});\n  const navigate = useNavigate();\n  const _userId = util.userId();\n  const [openModal, setOpenModal] = useState(false);\n  const [isEmptyPreference, setIsEmptyPreference] = useState(false);\n  const [userInfo, setUserInfo] = useState();\n  const axios = require(\"axios\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedUserInfo, setEditedUserInfo] = useState({\n    firstName: userData?.result?.response?.firstName || \"\",\n    lastName: userData?.result?.response?.lastName || \"\",\n    bio: \"\",\n    designation: \"\",\n    otherDesignation: \"\",\n  });\n  const [originalUserInfo, setOriginalUserInfo] = useState({});\n  const [isFormDirty, setIsFormDirty] = useState(false);\n  const [designationsList, setDesignationsList] = useState([]);\n  const [load, setLoad] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [toasterOpen, setToasterOpen] = useState(false);\n  const [toasterMessage, setToasterMessage] = useState(\"\");\n  const [rootOrgId, setRootOrgId] = useState();\n  const [domain, setDomain] = useState(\"\");\n  const [subDomain, setSubDomain] = useState(\"\");\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 767);\n  const [showCertificate, setShowCertificate] = useState(false);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n\n  const showErrorMessage = (msg) => {\n    setToasterMessage(msg);\n    setTimeout(() => {\n      setToasterMessage(\"\");\n    }, 2000);\n    setToasterOpen(true);\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoad(true);\n    }, DELAY);\n    setDesignationsList(designations);\n  }, []);\n\n  useEffect(() => {\n    if (userData?.result?.response && userInfo) {\n      setEditedUserInfo({\n        firstName: userData?.result?.response.firstName,\n        lastName: userData?.result?.response.lastName,\n        bio: userInfo[0]?.bio,\n        designation: userInfo[0]?.designation,\n        otherDesignation: \"\",\n      });\n      setOriginalUserInfo({\n        firstName: userData?.result?.response.firstName,\n        lastName: userData?.result?.response.lastName,\n        bio: userInfo[0]?.bio,\n        designation: userInfo[0]?.designation,\n        otherDesignation: \"\",\n      });\n    }\n    setDomain(userData?.result?.response.framework.board);\n    setSubDomain(userData?.result?.response.framework.gradeLevel);\n  }, [userData, userInfo]);\n  useEffect(() => {\n    const handleResize = () => setIsMobile(window.innerWidth <= 767);\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  useEffect(() => {\n    setDesignationsList(designations);\n    const fetchCertificateCount = async () => {\n      try {\n        const url = `${urlConfig.URLS.POFILE_PAGE.CERTIFICATE_COUNT}?user_id=${_userId}`;\n\n        const response = await fetch(url);\n        const data = await response.json();\n        setCertificateCountData({\n          totalCourses: data.result.courseWithCertificate,\n          certificatesReceived: data.result.certificateReceived,\n        });\n      } catch (error) {\n        console.error(\"Error fetching certificate count:\", error);\n        showErrorMessage(t(\"FAILED_TO_FETCH_CERT_COUNT\"));\n      }\n    };\n\n    const fetchCourseCount = async () => {\n      try {\n        const url = `${urlConfig.URLS.POFILE_PAGE.COURSE_COUNT}?user_id=${_userId}`;\n\n        const response = await fetch(url);\n        const data = await response.json();\n        setCourseCountData({\n          enrolledThisMonth: data.result.enrolledThisMonth,\n          enrolledLastMonth: data.result.enrolledLastMonth,\n        });\n      } catch (error) {\n        console.error(error);\n        showErrorMessage(t(\"FAILED_TO_FETCH_COURSE_COUNT\"));\n      }\n    };\n    const fetchUserInfo = async () => {\n      try {\n        const url = `${urlConfig.URLS.POFILE_PAGE.USER_READ}`;\n        const response = await axios.post(\n          url,\n          { user_ids: [_userId] },\n          {\n            withCredentials: true,\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        setUserInfo(response?.data?.result);\n      } catch (error) {\n        console.error(error);\n        showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n    };\n\n    fetchData();\n    fetchCertificateCount();\n    fetchCourseCount();\n    fetchUserInfo();\n    fetchUserDataAndSetCustodianOrgData();\n  }, []);\n\n  const fetchUserDataAndSetCustodianOrgData = async () => {\n    try {\n      const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.SYSTEM_SETTING.CUSTODIAN_ORG}`;\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch custodian organization ID\");\n      }\n      const data = await response.json();\n      const custodianOrgId = data?.result?.response?.value;\n      const rootOrgId = sessionStorage.getItem(\"rootOrgId\");\n\n      if (custodianOrgId === rootOrgId) {\n        const url = `${urlConfig.URLS.PUBLIC_PREFIX}${urlConfig.URLS.CHANNEL.READ}/${custodianOrgId}`;\n        const response = await fetch(url);\n        const data = await response.json();\n        const defaultFramework = data?.result?.channel?.defaultFramework;\n        localStorage.setItem(\"defaultFramework\", defaultFramework);\n      } else {\n        const url = `${urlConfig.URLS.PUBLIC_PREFIX}${urlConfig.URLS.CHANNEL.READ}/${rootOrgId}`;\n        const response = await fetch(url);\n        const data = await response.json();\n        const defaultFramework = data?.result?.channel?.defaultFramework;\n        localStorage.setItem(\"defaultFramework\", defaultFramework);\n      }\n    } catch (error) {\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n      console.error(\"Error fetching user data:\", error);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setEditedUserInfo({\n      ...editedUserInfo,\n      [name]: value,\n    });\n    setIsFormDirty(true);\n  };\n  const handleOpenEditDialog = () => {\n    setIsEditing(true);\n  };\n\n  const handleCloseEditDialog = () => {\n    setIsEditing(false);\n  };\n  const updateUserData = async () => {\n    setIsLoading(true);\n    setError(null);\n    const requestBody = {\n      params: {},\n      request: {\n        firstName: editedUserInfo.firstName,\n        lastName: editedUserInfo.lastName,\n        userId: _userId,\n      },\n    };\n\n    try {\n      const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.USER.UPDATE_USER_PROFILE}`;\n      const response = await fetch(url, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(requestBody),\n      });\n\n      if (!response.ok) {\n        showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n        throw new Error(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n\n      const responseData = await response.json();\n      await updateUserInfoInCustomDB();\n      console.log(\"responseData\", responseData);\n    } catch (error) {\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const updateUserInfoInCustomDB = async () => {\n    const requestBody = {\n      designation:\n        editedUserInfo.designation === \"Other\"\n          ? editedUserInfo.otherDesignation\n          : editedUserInfo.designation,\n      bio: editedUserInfo.bio,\n      created_by: _userId,\n    };\n    try {\n      const url = `${urlConfig.URLS.POFILE_PAGE.USER_UPDATE}?user_id=${_userId}`;\n      const response = await fetch(url, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(requestBody),\n      });\n\n      if (!response.ok) {\n        showErrorMessage(t(\"SOMETHING_WENT_WRONG\"));\n        throw new Error(t(\"SOMETHING_WENT_WRONG\"));\n      }\n\n      const data = await response.json();\n    } catch (error) {\n      showErrorMessage(t(\"SOMETHING_WENT_WRONG\"));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  // Handle form submit\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    await updateUserData();\n    // Close the edit dialog\n    setIsEditing(false);\n    window.location.reload();\n    setIsFormDirty(false);\n  };\n\n  const fetchData = async () => {\n    try {\n      const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.USER.GET_PROFILE}${_userId}?fields=${urlConfig.params.userReadParam.fields}`;\n\n      const header = \"application/json\";\n      const response = await fetch(url, {\n        // headers: {\n        //   \"Content-Type\": \"application/json\",\n        // },\n      });\n      const data = await response.json();\n      setUserData(data);\n      const rootOrgId = data.result.response.rootOrgId;\n      sessionStorage.setItem(\"rootOrgId\", rootOrgId);\n      setRootOrgId(rootOrgId);\n      console.log(\"rootOrgId\", rootOrgId);\n      if (_.isEmpty(data?.result?.response.framework)) {\n        setOpenModal(true);\n      }\n    } catch (error) {\n      console.error(\"Error fetching user data:\", error);\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    }\n  };\n\n  const handleLearningHistoryClick = () => {\n    navigate(\"/learningHistory\");\n  };\n\n  const handleContinueLearningClick = () => {\n    navigate(\"/continueLearning\");\n  };\n\n  const handleCertificateButtonClick = () => {\n    if (isMobile) {\n      navigate(\"/certificate\");\n    } else {\n      setIsButtonDisabled(true);\n      setShowCertificate(true);\n    }\n  };\n\n  const handleSearch = (query) => {\n    // Implement your search logic here\n    console.log(\"Search query:\", query);\n  };\n\n  const handleOpenModal = () => {\n    setOpenModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setOpenModal(false);\n    fetchData();\n    window.location.reload();\n  };\n\n  return (\n    <div>\n      <Header />\n      {toasterMessage && <ToasterCommon response={toasterMessage} />}\n\n      <Container maxWidth=\"xxl\" role=\"main\" className=\"xs-p-0 xs-pb-75 pt-1\">\n        {error && (\n          <Alert severity=\"error\" className=\"my-10\">\n            {error}\n          </Alert>\n        )}\n\n        <Grid container spacing={2} className=\"pt-8\">\n          <Grid\n            item\n            xs={12}\n            md={4}\n            lg={4}\n            className=\"sm-p-25 left-container profile mt-2\"\n          >\n            <Box sx={{ fontSize: \"18px\", color: \"#484848\" }}>\n              {t(\"MY_PROFILE\")}\n            </Box>\n\n            <Box\n              textAlign=\"center\"\n              padding=\"10\"\n              sx={{ marginTop: \"22px\" }}\n              className=\"xs-pr-16 mb-10\"\n            >\n              <Box className=\"grey-bx\">\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    padding: \"20px 10px 0\",\n                  }}\n                >\n                  {userData && (\n                    <>\n                      <div className=\"img-text-circle\">\n                        {userData?.result?.response?.firstName[0]}\n                      </div>\n                    </>\n                  )}\n                  <CardContent className=\"profile-cardContent\">\n                    {userData && (\n                      <>\n                        <Box className=\"d-flex jc-bw mb-10 alignItems-center\">\n                          <Box>\n                            <Typography className=\"h4-title\">\n                              {userData?.result?.response?.firstName}{\" \"}\n                              {userData?.result?.response?.lastName}\n                            </Typography>\n                            <Typography className=\"h6-title d-flex\">\n                              {userInfo?.length &&\n                                userInfo?.[0]?.designation && (\n                                  <>{userInfo[0].designation} </>\n                                )}\n                              <Box className=\"cardLabelEllips\">\n                                {userInfo?.length &&\n                                  userInfo?.[0]?.designation &&\n                                  \"   | \"}{\" \"}\n                                ID: {userData?.result?.response?.userName}{\" \"}\n                                {\n                                  userData?.result?.response?.organisations\n                                    ?.orgName\n                                }\n                              </Box>\n                            </Typography>\n                          </Box>\n\n                          <ModeEditIcon onClick={handleOpenEditDialog} />\n                        </Box>\n                      </>\n                    )}\n                  </CardContent>\n                </Box>\n                {userData && userInfo?.length > 0 && (\n                  <Typography\n                    variant=\"subtitle1\"\n                    color=\"text.secondary\"\n                    component=\"div\"\n                    style={{ fontSize: \"12px\", padding: \"0 20px\" }}\n                  >\n                    {userInfo?.length ? userInfo[0]?.bio : \"\"}\n                  </Typography>\n                )}\n\n                <Box className=\"mb-15 mt-20\">\n                  <Box\n                    className=\"d-flex jc-bw\"\n                    sx={{\n                      flexDirection: \"row\",\n                      padding: \"0 0 12px 15px\",\n                    }}\n                  >\n                    <Box\n                      style={{\n                        alignItems: \"center\",\n                      }}\n                      className=\"h4-title d-flex fw-400\"\n                    >\n                      <EmojiEventsOutlinedIcon\n                        style={{ paddingRight: \"10px\" }}\n                      />{\" \"}\n                      {t(\"PERFORMANCE\")}\n                    </Box>\n                  </Box>\n\n                  <Grid container spacing={2}>\n                    <Grid\n                      item\n                      xs={3}\n                      md={3}\n                      className=\"circular\"\n                      style={{ paddingRight: \"0\", textAlign: \"right\" }}\n                    >\n                      {certData &&\n                        certData.certificatesReceived &&\n                        certData.totalCourses && (\n                          <CircularProgressWithLabel\n                            received={certData.certificatesReceived}\n                            total={certData.totalCourses}\n                            className=\"circular\"\n                            style={{ width: \"80px\", height: \"80px\" }}\n                          />\n                        )}\n                    </Grid>\n                    <Grid item xs={3} md={3} className=\"circular\">\n                      <Typography\n                        style={{\n                          margin: \"9px 10px 9px 0\",\n                          display: \"block\",\n                          textAlign: \"left\",\n                        }}\n                        className=\"fs-14 text-yellow\"\n                      >\n                        {t(\"CERTIFICATIONS_RECEIVED\")}\n                      </Typography>\n                    </Grid>\n                    <Grid\n                      item\n                      xs={2}\n                      md={3}\n                      style={{ paddingRight: \"0\", textAlign: \"right\" }}\n                    >\n                      {courseData && (\n                        <CircularProgressWithLabel\n                          received={courseData.enrolledThisMonth}\n                          total={courseData.enrolledLastMonth}\n                          className=\"circular\"\n                          style={{ width: \"80px\", height: \"80px\" }}\n                        />\n                      )}\n                    </Grid>\n                    <Grid item xs={4} md={3}>\n                      <Typography\n                        variant=\"h7\"\n                        style={{\n                          margin: \"9px 0\",\n                          display: \"block\",\n                          textAlign: \"left\",\n                        }}\n                        className=\"fs-14 text-blueShade0\"\n                      >\n                        {t(\"COURSES_THAN_LAST_MONTH\")}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Box>\n\n                {isEditing && (\n                  <Modal\n                    // open={open}\n                    // onClose={handleClose}\n                    aria-labelledby=\"modal-modal-title\"\n                    aria-describedby=\"modal-modal-description\"\n                    className=\"xs-w-300\"\n                    open={isEditing}\n                    onClose={handleCloseEditDialog}\n                  >\n                    <Box sx={style}>\n                      <Typography\n                        id=\"modal-modal-title\"\n                        className=\"h3-title\"\n                        style={{ marginBottom: \"20px\" }}\n                      >\n                        {t(\"EDIT_PROFILE\")}\n                      </Typography>\n                      <form onSubmit={handleFormSubmit}>\n                        <Box py={1}>\n                          <CssTextField\n                            id=\"firstName\"\n                            name=\"firstName\"\n                            label={<span>First Name</span>}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            value={editedUserInfo.firstName}\n                            onChange={(e) =>\n                              setEditedUserInfo({\n                                ...editedUserInfo,\n                                firstName: e.target.value,\n                              })\n                            }\n                          />\n                        </Box>\n                        <Box py={1}>\n                          <CssTextField\n                            id=\"lastName\"\n                            name=\"lastName\"\n                            label={<span>Last Name</span>}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            value={editedUserInfo.lastName}\n                            onChange={(e) =>\n                              setEditedUserInfo({\n                                ...editedUserInfo,\n                                lastName: e.target.value,\n                              })\n                            }\n                          />\n                        </Box>\n\n                        <Box py={1}>\n                          <FormControl fullWidth style={{ marginTop: \"10px\" }}>\n                            <InputLabel\n                              id=\"designation-label\"\n                              className=\"year-select\"\n                            >\n                              {\" \"}\n                              {t(\"DESIGNATION\")}{\" \"}\n                            </InputLabel>\n                            <Select\n                              labelId=\"designation-label\"\n                              id=\"designation\"\n                              value={editedUserInfo.designation}\n                              onChange={(e) =>\n                                setEditedUserInfo({\n                                  ...editedUserInfo,\n                                  designation: e.target.value,\n                                })\n                              }\n                            >\n                              {designationsList.map((desig, index) => (\n                                <MenuItem key={index} value={desig}>\n                                  {desig}\n                                </MenuItem>\n                              ))}\n                            </Select>\n                          </FormControl>\n                        </Box>\n                        {editedUserInfo.designation === \"Other\" && (\n                          <Box py={1}>\n                            <CssTextField\n                              id=\"otherDesignation\"\n                              name=\"otherDesignation\"\n                              label={\n                                <span>\n                                  {t(\"OTHER_DESIGNATION\")}{\" \"}\n                                  <span className=\"required\">*</span>\n                                </span>\n                              }\n                              variant=\"outlined\"\n                              size=\"small\"\n                              value={editedUserInfo.otherDesignation}\n                              onChange={(e) =>\n                                setEditedUserInfo({\n                                  ...editedUserInfo,\n                                  otherDesignation: e.target.value,\n                                })\n                              }\n                            />\n                          </Box>\n                        )}\n                        <Box py={2}>\n                          <TextField\n                            id=\"bio\"\n                            name=\"bio\"\n                            label={<span>{t(\"BIO\")}</span>}\n                            multiline\n                            rows={3}\n                            variant=\"outlined\"\n                            fullWidth\n                            value={editedUserInfo.bio}\n                            onChange={(e) =>\n                              setEditedUserInfo({\n                                ...editedUserInfo,\n                                bio: e.target.value,\n                              })\n                            }\n                            inputProps={{ maxLength: MAX_CHARS }}\n                          />\n                          <Typography\n                            variant=\"caption\"\n                            color={\n                              editedUserInfo.bio?.length > MAX_CHARS\n                                ? \"error\"\n                                : \"textSecondary\"\n                            }\n                          >\n                            {editedUserInfo.bio ? editedUserInfo.bio.length : 0}\n                            /{MAX_CHARS}\n                          </Typography>\n                        </Box>\n\n                        <Box pt={4} className=\"d-flex jc-en\">\n                          <Button\n                            className=\"custom-btn-primary mr-5\"\n                            type=\"submit\"\n                          >\n                            {t(\"SAVE\")}\n                          </Button>\n\n                          <Button\n                            className=\"custom-btn-default\"\n                            onClick={handleCloseEditDialog}\n                          >\n                            {t(\"CANCEL\")}\n                          </Button>\n                        </Box>\n                      </form>\n                    </Box>\n                  </Modal>\n                )}\n              </Box>\n              <Button\n                type=\"buttom\"\n                className=\"my-30 custom-btn-primary\"\n                onClick={handleCertificateButtonClick}\n                disabled={isButtonDisabled}\n              >\n                <ReceiptLongOutlinedIcon className=\"pr-5\" />\n                {t(\"Download Certificates\")}\n              </Button>\n\n              <Modal\n                // open={open}\n                // onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n                isableEscapeKeyDown={!isEmptyPreference}\n                open={openModal}\n                className=\"xs-w-300\"\n                onClose={(event, reason) => {\n                  if (\n                    reason === \"backdropClick\" ||\n                    reason === \"escapeKeyDown\"\n                  ) {\n                    setOpenModal(true);\n                  } else {\n                    handleCloseModal();\n                  }\n                }}\n              >\n                <Box sx={style}>\n                  <Typography\n                    id=\"modal-modal-title\"\n                    className=\"h3-title\"\n                    style={{ marginBottom: \"20px\" }}\n                  >\n                    {t(\"SELECT_PREFERENCE\")}\n                  </Typography>\n                  <SelectPreference onClose={handleCloseModal} />\n                </Box>\n              </Modal>\n\n              <Box className=\"grey-bx p-10 py-15\">\n                <Box className=\"h4-title d-flex pt-10\">\n                  <SettingsOutlinedIcon className=\"pr-5 fw-400\" />\n                  {t(\"USER_PREFERENCES\")}\n                </Box>\n                <Box className=\"mb-20\">\n                  <Box className=\"h5-title mt-15 mb-10\">\n                    <span className=\"fw-400\"> {t(\"DOMAIN\")} </span> : {domain}\n                  </Box>\n                  <Box className=\"h5-title\">\n                    <span className=\"fw-400\"> {t(\"SUB_DOMAIN\")} </span>:{\" \"}\n                    {subDomain}\n                  </Box>\n                </Box>\n                <Box className=\"text-center\">\n                  <Button\n                    type=\"button\"\n                    className=\"custom-btn-primary my-10\"\n                    onClick={handleOpenModal}\n                  >\n                    {t(\"CHANGE_PREFERENCES\")}\n                  </Button>\n                </Box>\n              </Box>\n            </Box>\n          </Grid>\n          <Grid item xs={12} md={8} lg={8} className=\"xs-pl-0\">\n            {showCertificate ? (\n              <Certificate />\n            ) : (\n              <div>\n                <TabContext value={value}>\n                  <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n                    <TabList\n                      onChange={handleChange}\n                      aria-label=\"lab API tabs example\"\n                    >\n                      <Tab\n                        label=\"Continue learning\"\n                        className=\"tab-text\"\n                        value=\"1\"\n                      />\n                      <Tab\n                        label=\"Learning History\"\n                        className=\"tab-text\"\n                        value=\"2\"\n                        // onClick={handleLearningHistoryClick}\n                      />\n                    </TabList>\n                  </Box>\n                  <TabPanel value=\"1\">\n                    <ContinueLearning />\n                  </TabPanel>\n                  <TabPanel value=\"2\">\n                    <LearningHistory />\n                  </TabPanel>\n                </TabContext>\n              </div>\n            )}\n          </Grid>\n        </Grid>\n      </Container>\n      <FloatingChatIcon />\n      <Footer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Header from \"components/header\";\nimport Footer from \"components/Footer\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport { Accordion, AccordionSummary, AccordionDetails } from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { makeStyles } from \"@mui/styles\";\nimport Alert from \"@mui/material/Alert\";\n\nconst useStyles = makeStyles((theme) => ({\n  active: {\n    color: \"#004367\", // Change color to blue\n    textDecoration: \"underline\", // Add underline\n  },\n}));\n\nconst FAQPage = () => {\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const [faqData, setFaqData] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"Login\");\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setError(null);\n    fetch(\n      \"https://nulpstorage1.blob.core.windows.net/public/portal-faq/resources/res/faq-en.json\"\n    )\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.json();\n      })\n      .then((result) => {\n        setFaqData(result.categories);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching FAQ data:\", error);\n        setError(error.message);\n      });\n  }, []);\n\n  return (\n    <div>\n      <Header />\n      <Container maxWidth=\"xxl\" role=\"main\" className=\"container-pb\">\n        {error && (\n          <Alert severity=\"error\" className=\"my-10\">\n            {error}\n          </Alert>\n        )}\n        <Box sx={{ fontSize: \"18px\", color: \"#484848\", marginTop: \"15px\" }}>\n          {t(\"FAQS\")}\n        </Box>\n        <Grid container spacing={2}>\n          <Grid item xs={12} lg={3}>\n            <ul className=\"bg-white h6-title\" style={{ borderRadius: \"5px\" }}>\n              <Box\n                sx={{ fontSize: \"18px\", color: \"#484848\" }}\n                className=\"h5-title\"\n              >\n                {t(\"SELECT_CATEGORY\")}\n              </Box>\n              {faqData.map((category, index) => (\n                <li\n                  key={index}\n                  onClick={() => setSelectedCategory(category.name)}\n                  className={\n                    selectedCategory === category.name ? classes.active : \"\"\n                  } // Apply active class\n                >\n                  {category.name}\n                </li>\n              ))}\n            </ul>\n          </Grid>\n          <Grid item xs={12} lg={9}>\n            {faqData\n              .filter((category) => category.name === selectedCategory)\n              .map((selectedCategoryData, index) => (\n                <div key={index}>\n                  {selectedCategoryData.faqs.map((faq, faqIndex) => (\n                    <Accordion\n                      key={faqIndex}\n                      style={{\n                        background: \"#f9fafc\",\n                        borderRadius: \"10px\",\n                        marginTop: \"10px\",\n                        maxHeight: \"calc(100vh - 20px)\",\n                        overflow: \"auto\",\n                      }}\n                    >\n                      <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        style={{\n                          background: \"#F9FAFC\",\n                          borderRadius: \"10px\",\n                          position: \"sticky\",\n                          top: \"0\",\n                          zIndex: \"1\",\n                        }}\n                        className=\"h5-title\"\n                      >\n                        {faq.topic}\n                      </AccordionSummary>\n                      <AccordionDetails\n                        style={{ background: \"#fff\" }}\n                        className=\"h6-title\"\n                      >\n                        <div\n                          dangerouslySetInnerHTML={{\n                            __html: faq.description,\n                          }}\n                        />\n                      </AccordionDetails>\n                    </Accordion>\n                  ))}\n                </div>\n              ))}\n          </Grid>\n        </Grid>\n      </Container>\n      <Footer />\n    </div>\n  );\n};\n\nexport default FAQPage;\n","// import create from \"zustand\";\nimport { create } from \"zustand\";\n\n// Zustand store\nexport const useStore = create((set) => ({\n  data: \"\",\n  setData: (data) => set({ data }),\n}));\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport {\n  TextField,\n  Button,\n  Alert,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextareaAutosize,\n} from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport * as util from \"../../services/utilService\";\nconst axios = require(\"axios\");\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { useStore } from \"configs/zustandStore\";\nimport { IconButton, Menu, MenuItem } from \"@mui/material\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport BlockIcon from \"@mui/icons-material/Block\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport { useTranslation } from \"react-i18next\";\nimport DoneAllIcon from \"@mui/icons-material/DoneAll\";\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\nimport Typography from \"@mui/material/Typography\";\nconst urlConfig = require(\"../../configs/urlConfig.json\");\nimport ToasterCommon from \"../ToasterCommon\";\nimport Modal from \"@mui/material/Modal\";\n\nconst moment = require(\"moment\");\nconst timezone = require(\"moment-timezone\");\nconst useStyles = makeStyles((theme) => ({\n  chatContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100vh\",\n    overflow: \"hidden\",\n    background: \"#FFF5E9\",\n  },\n  chatHeader: {\n    padding: \"8px 11px\",\n    backgroundColor: \"#FFE6C8 !important\",\n    color: \"#484848\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    textAlign: \"center\",\n  },\n  chat: {\n    flex: 1,\n    overflowY: \"auto\",\n    padding: \"16px\",\n    borderBottom: \"1px solid #DDDDDD\",\n    background: \"#fff5e9 !important\",\n  },\n  messageInput: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"8px\",\n    backgroundColor: \"#f9fafc\",\n    marginTop: \"10px\",\n  },\n  senderMessage: {\n    borderRadius: \"5px\",\n    padding: \"8px\",\n    margin: \"25px 0\",\n    textAlign: \"right\",\n    background: \"#F1FAFF  !important\",\n    color: \"#484848\",\n    fontSize: \"16px\",\n    fontWeight: \"400\",\n    marginLeft: \"auto\",\n    // width: \"16%\",\n    display: \"inline-block\",\n  },\n  receiverMessage: {\n    margin: \"13px 0\",\n    padding: \"8px 12px\",\n    clear: \"both\",\n    alignSelf: \"flex-end\",\n    display: \"table\",\n    borderRadius: \"5px\",\n    color: \"#212121\",\n    backgroundColor: \"#effaff !important\",\n    fontSize: \"16px\",\n    fontWeight: \"400\",\n  },\n}));\nconst Chat = ({\n  senderUserId: propSenderUserId,\n  receiverUserId: propReceiverUserId,\n  onChatSent,\n}) => {\n  const classes = useStyles();\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [loggedInUserId, setLoggedInUserId] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const dataStore = useStore((state) => state.data);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const navigate = useNavigate();\n  const [reason, setReason] = useState(\"\");\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [isBlocked, setIsBlocked] = useState(false); // State to track if user is blocked\n  const [showUnblockOption, setShowUnblockOption] = useState(false); // State to show/hide unblock option\n  const [toasterOpen, setToasterOpen] = useState(false);\n  const [toasterMessage, setToasterMessage] = useState(\"\");\n  const [receiverData, setReceiverData] = useState([]);\n  const [prefilledMessage, setPrefilledMessage] = useState(\n    \"Hello, I would like to connect with you regarding some queries i had in your course.\"\n  );\n  const [textValue, setTextValue] = useState(\"\");\n\n  const location = useLocation();\n  const {\n    senderUserId: routeSenderUserId,\n    receiverUserId: routeReceiverUserId,\n  } = location.state || {};\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 767);\n  const senderUserId = propSenderUserId || routeSenderUserId;\n  const receiverUserId = propReceiverUserId || routeReceiverUserId;\n\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const _userId = util.userId();\n    setLoggedInUserId(_userId);\n    const getInvitationNotAcceptedUserByIds = async () => {\n      const requestBody = {\n        request: {\n          filters: {\n            status: \"1\",\n            userId: [receiverUserId],\n          },\n        },\n      };\n\n      try {\n        const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.ADMIN.USER_SEARCH}`;\n        const response = await fetch(url, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(requestBody),\n        });\n\n        if (!response.ok) {\n          showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n          throw new Error(t(\"FAILED_TO_FETCH_DATA\"));\n        }\n\n        const responseData = await response.json();\n        const content = responseData?.result?.response?.content || [];\n        const userInfoPromises = content.map((item) => fetchUserInfo(item.id));\n        const userInfoList = await Promise.all(userInfoPromises);\n\n        // Add designation and bio to each item\n        content.forEach((item, index) => {\n          item.designation = userInfoList[index].designation || \"\";\n          item.bio = userInfoList[index].bio || \"\";\n        });\n        setReceiverData(content);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n    };\n    getInvitationNotAcceptedUserByIds();\n\n    if (messages.length > 0) {\n      fetchChats();\n      setTextValue(\"\");\n    }\n  }, [receiverUserId]);\n\n  useEffect(() => {\n    const handleResize = () => setIsMobile(window.innerWidth <= 767);\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const fetchUserInfo = async (userId) => {\n    try {\n      const url = `${urlConfig.URLS.POFILE_PAGE.USER_READ}`;\n      const response = await axios.post(\n        url,\n        { user_ids: [userId] },\n        {\n          withCredentials: true,\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      return response.data.result[0] || {};\n    } catch (error) {\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    if (loggedInUserId) {\n      // Fetch block user status when component mounts\n      fetchBlockUserStatus();\n      fetchChats();\n      updateMessage();\n    }\n  }, [loggedInUserId]);\n\n  const showErrorMessage = (msg) => {\n    setToasterMessage(msg);\n    setTimeout(() => {\n      setToasterMessage(\"\");\n    }, 2000);\n    setToasterOpen(true);\n  };\n\n  useEffect(() => {\n    if (loggedInUserId && !isBlocked && messages.length > 0) {\n      const intervalId = setInterval(fetchChats, 5000);\n      return () => clearInterval(intervalId);\n    }\n  }, [loggedInUserId, isBlocked, messages]);\n\n  const fetchBlockUserStatus = async () => {\n    try {\n      const url = `${urlConfig.URLS.DIRECT_CONNECT.GET_BLOCK_USER}?sender_id=${loggedInUserId}&receiver_id=${receiverUserId}`;\n      const response = await axios.get(url, {\n        withCredentials: true,\n      });\n      const blockedUserId =\n        response.data.result.length > 0\n          ? response.data.result[0].sender_id\n          : null;\n\n      setIsBlocked(response.data.result.length > 0); // Update isBlocked state based on API response\n      setShowUnblockOption(blockedUserId === loggedInUserId);\n    } catch (error) {\n      console.error(\"Error fetching block user status:\", error);\n      showErrorMessage(t(\"FAILED_TO_BLOCK_USER\"));\n    }\n  };\n\n  const fetchChats = async () => {\n    try {\n      const url = `${\n        urlConfig.URLS.DIRECT_CONNECT.GET_CHATS\n      }?sender_id=${loggedInUserId}&receiver_id=${receiverUserId}&is_accepted=${true}`;\n\n      // Check if the user is not blocked before fetching chats\n      if (!isBlocked) {\n        const response = await axios.get(url, {\n          withCredentials: true,\n        });\n        setMessages(response.data.result || []);\n        if (!response.data.result.length > 0) {\n          setTextValue(\n            \"Hello, I would like to connect with you regarding some queries i had in your course.\"\n          );\n        }\n      }\n    } catch (error) {\n      console.error(\"Error fetching chats:\", error);\n      showErrorMessage(t(\"FAILED_TO_FETCH_CHAT\"));\n    }\n  };\n\n  const sendMessage = async () => {\n    if (textValue.trim() !== \"\") {\n      try {\n        const url = `${urlConfig.URLS.DIRECT_CONNECT.SEND_CHATS}`;\n        console.log(\"Sending message:\", textValue);\n\n        await axios.post(\n          url,\n          {\n            sender_id: loggedInUserId,\n            receiver_id: receiverUserId,\n            message: textValue,\n          },\n          {\n            withCredentials: true,\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        setMessage(\"\");\n        setTextValue(\"\");\n        if (!messages.length > 0) {\n          navigate(-1);\n          window.location.reload();\n          if (onChatSent) {\n            onChatSent();\n          }\n        }\n        fetchChats(); // Fetch messages after sending a message\n      } catch (error) {\n        console.error(\"Error saving message:\", error);\n        showErrorMessage(t(\"FAILED_TO_SEND_CHAT\"));\n      }\n    }\n  };\n\n  const updateMessage = async () => {\n    try {\n      const url = `${urlConfig.URLS.DIRECT_CONNECT.UPDATE_CHAT}`;\n      console.log(\"updating message:\", textValue);\n\n      const data = await axios.put(\n        url,\n        {\n          sender_id: loggedInUserId,\n          receiver_id: receiverUserId,\n          is_read: true,\n        },\n        {\n          withCredentials: true,\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n    } catch (error) {\n      console.error(\"Error updating message:\", error);\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    }\n  };\n\n  const getTimeAgo = (timestamp) => {\n    const timeZone = \"Asia/Kolkata\";\n    const date = moment(timestamp).tz(timeZone);\n    const now = moment().tz(timeZone);\n\n    if (date.isSame(now, \"day\")) {\n      return \"Today\";\n    } else if (date.isSame(now.clone().subtract(1, \"day\"), \"day\")) {\n      return \"Yesterday\";\n    } else {\n      return date.format(\"D MMMM YYYY\");\n    }\n  };\n  const getTime = (timestamp) => {\n    const date = new Date(timestamp);\n    const istTime = date.toLocaleString(\"en-US\", {\n      timeZone: \"Asia/Kolkata\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n      hour12: true,\n    });\n    return istTime;\n  };\n\n  const handleMenuClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n  const handleGoBack = () => {\n    navigate(-1); // Navigate back in history\n  };\n\n  const handleDialogOpen = () => {\n    setDialogOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n  const handleBlockUser = () => {\n    handleDialogOpen();\n  };\n\n  const handleUnblockUser = async () => {\n    try {\n      const url = `${urlConfig.URLS.DIRECT_CONNECT.UNBLOCK}`;\n      console.log(\"UnBlocking User\");\n\n      const data = await axios.post(\n        url,\n        {\n          sender_id: loggedInUserId,\n          receiver_id: receiverUserId,\n        },\n        {\n          withCredentials: true,\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      console.log(\"User unblocked successfully!\");\n      // Reload the page after unblocking the user\n      if (data) {\n        window.location.reload();\n      }\n    } catch (error) {\n      console.error(\"Error unblocking user:\", error);\n      showErrorMessage(t(\"FAILED_TO_UNBLOCK_USER\"));\n    }\n  };\n\n  const handleBlockUserConfirmed = async () => {\n    try {\n      const url = `${urlConfig.URLS.DIRECT_CONNECT.BLOCK}`;\n      console.log(\"Blocking User\");\n\n      await axios.post(\n        url,\n        {\n          sender_id: loggedInUserId,\n          receiver_id: receiverUserId,\n          reason: reason,\n        },\n        {\n          withCredentials: true,\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      setReason(\"\");\n      setDialogOpen(false);\n      console.log(\"User blocked successfully!\");\n      // Reload the page after blocking the user\n      window.location.reload();\n    } catch (error) {\n      console.error(\"Error blocking user:\", error);\n      showErrorMessage(t(\"FAILED_TO_BLOCK_USER\"));\n    }\n    handleMenuClose(); // Close the menu after the action is completed\n  };\n\n  const handleTextareaChange = (event) => {\n    setPrefilledMessage(event.target.value);\n    setTextValue(event.target.value);\n  };\n  return (\n    <div className={classes.chatContainer}>\n      <div\n        className={classes.chatHeader}\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Box className=\"d-flex\" style={{ alignItems: \"center\" }}>\n          {isMobile && (\n            <IconButton onClick={handleGoBack} style={{ paddingLeft: \"0\" }}>\n              <ArrowBackIcon />\n            </IconButton>\n          )}\n          {receiverData && receiverData?.length > 0 && (\n            <Box\n              sx={{\n                fontSize: \"20px\",\n                fontWeight: \"500\",\n                paddingLeft: \"10px\",\n                color: \"#484848\",\n                textAlign: \"left\",\n              }}\n            >\n              <div>\n                <Typography className=\"h2-title chat-hed\">\n                  {receiverData[0].firstName}{\" \"}\n                  {receiverData[0].lastName && receiverData[0].lastName}\n                </Typography>\n                <Box className=\"h5-title\">{receiverData[0].designation}</Box>\n              </div>\n            </Box>\n          )}\n        </Box>\n\n        {receiverData && receiverData?.length > 0 && messages.length > 0 && (\n          <Box\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              fontSize: \"18px\",\n              cursor: \"pointer\",\n            }}\n          >\n            {!isBlocked && (\n              <IconButton onClick={handleBlockUser} className=\"block-btn\">\n                <BlockIcon style={{ fontSize: \"16px\", paddingRight: \"8px\" }} />\n                {t(\"BLOCK\")}\n              </IconButton>\n            )}\n            {showUnblockOption && (\n              <IconButton onClick={handleUnblockUser} className=\"unblock-btn\">\n                <BlockIcon style={{ fontSize: \"16px\", paddingRight: \"8px\" }} />\n                {t(\"UNBLOCK\")}\n              </IconButton>\n            )}\n          </Box>\n        )}\n      </div>\n      <Dialog\n        // open={open}\n        // onClose={handleClose}\n\n        open={dialogOpen}\n        onClose={handleDialogClose}\n      >\n        <DialogTitle>\n          {\" \"}\n          <Box className=\"h3-title\">{t(\"BLOCK_USER\")}</Box>\n        </DialogTitle>\n        <DialogContent>\n          <Box className=\"h5-title\">\n            {t(\"ARE_YOU_SURE_YOU_WANT_TO_BLOCK_THIS_USER\")}\n          </Box>\n          <Box py={2}>\n            <TextField\n              id=\"reason\"\n              name=\"reason\"\n              label={\n                <span>\n                  {t(\"REASON\")}\n                  <span style={{ color: \"red\", marginLeft: \"2px\" }}>*</span>\n                </span>\n              }\n              multiline\n              rows={3}\n              variant=\"outlined\"\n              fullWidth\n              value={reason}\n              onChange={(e) => setReason(e.target.value)}\n            />\n          </Box>{\" \"}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDialogClose} className=\"custom-btn-default\">\n            {\"CANCEL\"}\n          </Button>\n          <Button\n            onClick={handleBlockUserConfirmed}\n            className=\"custom-btn-primary\"\n            disabled={!reason}\n            style={{\n              background: !reason ? \"rgba(0, 67, 103, 0.5)\" : \"#004367\",\n            }}\n          >\n            {\"BLOCK\"}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {receiverData && receiverData.length > 0 && !messages.length > 0 ? (\n        <div className={classes.chat}>\n          <Box\n            className=\"h5-title my-15\"\n            style={{ color: \"#484848\", textAlign: \"left\" }}\n          >\n            {receiverData[0]?.bio}\n            <Box className=\"my-15\">\n              {t(\"CONNECT_WITH_THEM_TO_GET_INSIGHTS\")}\n            </Box>\n          </Box>\n        </div>\n      ) : messages.length > 0 ? (\n        <div className={classes.chat}>\n          <Alert severity=\"info\" style={{ margin: \"10px 0\" }}>\n            {t(\"YOUR_CHAT_WILL_DISAPPEAR\")}\n          </Alert>\n          {messages.map((msg, index) => (\n            <div key={index} style={{ textAlign: \"right\" }}>\n              {index === 0 ||\n              getTimeAgo(msg.timestamp) !==\n                getTimeAgo(messages[index - 1].timestamp) ? (\n                <div style={{ margin: \"0 auto\", textAlign: \"center\" }}>\n                  <Box className=\"dayDisplay\">{getTimeAgo(msg.timestamp)}</Box>\n                </div>\n              ) : null}\n              <div\n                className={\n                  msg.sender_id === loggedInUserId\n                    ? `${classes.senderMessage} ${classes.message}`\n                    : `${classes.receiverMessage} ${classes.message}`\n                }\n              >\n                <div>{msg.message}</div>\n                <Box\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                  }}\n                >\n                  <div\n                    style={{\n                      fontSize: \"10px\",\n                      color: \"#484848\",\n                      fontWeight: \"400\",\n                    }}\n                  >\n                    {getTime(msg.timestamp)}\n                  </div>\n                  {msg.sender_id === loggedInUserId ? (\n                    <div\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        fontSize: \"13px\",\n                        justifyContent: \"flex-end\",\n                      }}\n                    >\n                      {msg.is_read ? (\n                        <DoneAllIcon\n                          style={{\n                            color: \"#00ebff\",\n                            fontSize: \"15px\",\n                            paddingLeft: \"6px\",\n                          }}\n                        />\n                      ) : (\n                        <DoneAllIcon\n                          style={{\n                            color: \"#bdbaba\",\n                            fontSize: \"18px\",\n                            paddingRight: \"10px\",\n                          }}\n                        />\n                      )}\n                      {/* {msg.is_read ? \"Read\" : \"Delivered\"} */}\n                    </div>\n                  ) : null}\n                </Box>\n              </div>\n              {msg.is_accepted ? (\n                <div style={{ textAlign: \"center\" }}>\n                  <Alert\n                    className=\"my-10\"\n                    iconMapping={{\n                      success: <CheckCircleOutlineIcon fontSize=\"inherit\" />,\n                    }}\n                  >\n                    {t(\"YOU_CHAT_ACCEPTED\")}\n                  </Alert>\n                </div>\n              ) : null}\n            </div>\n          ))}\n        </div>\n      ) : null}\n\n      {isBlocked ? (\n        <Alert severity=\"warning\" style={{ marginBottom: \"10px\" }}>\n          {t(\"USER_BLOCKED_YOU_CANNOT\")}\n        </Alert>\n      ) : (\n        <>\n          {receiverData && receiverData.length > 0 && !messages.length > 0 && (\n            <Alert severity=\"info\" style={{ margin: \"10px 0\" }}>\n              {t(\"SYSTEM_GENERATED_MESSAGE\")}\n            </Alert>\n          )}\n          <div className=\"d-flex sendMessag\">\n            <TextField\n              multiline\n              minRows={2}\n              maxRows={10}\n              value={textValue}\n              onChange={handleTextareaChange}\n              disabled={isBlocked}\n              placeholder=\"Enter your message here...\"\n              fullWidth\n              sx={{ fontSize: \"13px\" }}\n            />\n            <Button\n              style={{ color: \"#484848\" }}\n              onClick={sendMessage}\n              disabled={isBlocked}\n            >\n              <SendIcon />\n            </Button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n","import React, { useState, useEffect } from \"react\";\nimport Tab from \"@mui/material/Tab\";\nimport TabContext from \"@material-ui/lab/TabContext\";\nimport TabList from \"@material-ui/lab/TabList\";\nimport TabPanel from \"@material-ui/lab/TabPanel\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { Modal as BaseModal, makeStyles } from \"@material-ui/core\";\nimport { styled, css } from \"@mui/system\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@mui/base/Button\";\nimport Link from \"@mui/material/Link\";\nimport TextField from \"@mui/material/TextField\";\nimport Divider from \"@mui/material/Divider\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Search from \"components/search\";\nimport { useLocation, Navigate, useNavigate } from \"react-router-dom\";\nimport * as util from \"../../services/utilService\";\nimport Header from \"components/header\";\nimport Footer from \"components/Footer\";\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\nimport CancelOutlinedIcon from \"@mui/icons-material/CancelOutlined\";\nimport { useTranslation } from \"react-i18next\";\nimport { useStore } from \"configs/zustandStore\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Pagination from \"@mui/material/Pagination\";\nimport Popover from \"@mui/material/Popover\";\nimport { Container } from \"@mui/material\";\nimport Alert from \"@mui/material/Alert\";\nimport Filter from \"components/filter\";\nconst axios = require(\"axios\");\nconst designations = require(\"../../configs/designations.json\");\nconst urlConfig = require(\"../../configs/urlConfig.json\");\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport ToasterCommon from \"../ToasterCommon\";\nimport ForumOutlinedIcon from \"@mui/icons-material/ForumOutlined\";\nimport Grid from \"@mui/material/Grid\";\nimport Chat from \"./chat\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n// Define modal styles\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n  modalContent: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    width: \"100%\",\n    maxWidth: 600, // Adjust as needed\n    borderRadius: 10, // Add rounded corners\n    borderTopLeftRadius: 0, // Ensure modal appears attached to the bottom\n    borderTopRightRadius: 0,\n  },\n}));\n\nconst AddConnections = () => {\n  const [value, setValue] = React.useState(\"1\");\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const [showChat, setShowChat] = useState(false);\n  const [buttonText, setButtonText] = useState(\"Invite\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const [activeTab, setActiveTab] = useState(\"Tab1\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(\"\");\n  const [openModal, setOpenModal] = useState(false);\n  const [userSearchData, setUserSearchData] = useState();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [textValue, setTextValue] = useState(\n    \"Hello ..., I would like to connect with you regarding some queries i had in your course.\"\n  );\n  const [invitationAcceptedUsers, setInvitationAcceptedUsers] = useState();\n  const [invitationNotAcceptedUsers, setInvitationNotAcceptedUsers] =\n    useState();\n  const [loggedInUserId, setLoggedInUserId] = useState();\n  const location = useLocation();\n  const [invitationReceiverByUser, setInvitationReceivedUserByIds] = useState();\n  const [userChat, setUserChat] = useState();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [showChatModal, setShowChatModal] = useState(false);\n  const [selectedUserName, setSelectedUserName] = useState(false);\n  const { t } = useTranslation();\n  const setData = useStore((state) => state.setData);\n  const [totalPages, setTotalPages] = useState(1);\n  const [userQuerySearchData, setUserQuerySearchData] = useState();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [userInfo, setUserInfo] = useState();\n  const [expandedMessageId, setExpandedMessageId] = useState(null);\n  const [designationsList, setDesignationsList] = useState([]);\n  const [selectedValues, setSelectedValues] = useState([]);\n  const [selectedName, setSelectedName] = useState(\"\");\n  const [selectedDesignation, setSelectedDesignation] = useState(\"\");\n  const [userFilter, setUserFilter] = useState(\"\");\n  const [userIds, setUserIds] = useState([]);\n  const [autocompleteOpen, setAutocompleteOpen] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [options, setOptions] = useState([]);\n  const [toasterOpen, setToasterOpen] = useState(false);\n  const [toasterMessage, setToasterMessage] = useState(\"\");\n  const [showTableTwo, setShowTableTwo] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 767);\n  const navigate = useNavigate();\n  const [selectedChatUser, setSelectedChatUser] = useState(null);\n  const [selectedUserId, setSelectedUserId] = useState(null);\n  const [blockedUserList, setBlockedUserList] = useState([]);\n  const [blockUserIds, setBlockUserIds] = useState([]);\n  const showErrorMessage = (msg) => {\n    setToasterMessage(msg);\n    setTimeout(() => {\n      setToasterMessage(\"\");\n    }, 2000);\n    setToasterOpen(true);\n  };\n  useEffect(() => {\n    const handleResize = () => setIsMobile(window.innerWidth <= 767);\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const getChat = async (userId) => {\n    setIsLoading(true);\n    setError(null);\n\n    const params = new URLSearchParams({\n      sender_id: loggedInUserId,\n      receiver_id: userId,\n      is_accepted: true,\n    });\n\n    try {\n      const url = `${\n        urlConfig.URLS.DIRECT_CONNECT.GET_CHATS\n      }?${params.toString()}`;\n      const response = await fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        showErrorMessage(t(\"FAILED_TO_FETCH_CHAT\"));\n        throw new Error(t(\"FAILED_TO_FETCH_CHAT\"));\n      }\n\n      const responseData = await response.json();\n      console.log(\"getChat\", responseData.result);\n      return responseData.result;\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      showErrorMessage(t(\"FAILED_TO_FETCH_CHAT\"));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getChatRequest = async (userId) => {\n    setIsLoading(true);\n    setError(null);\n\n    const params = new URLSearchParams({\n      sender_id: loggedInUserId,\n      receiver_id: userId,\n      is_accepted: false,\n      is_read: false,\n    });\n\n    try {\n      const url = `${\n        urlConfig.URLS.DIRECT_CONNECT.GET_CHATS\n      }?${params.toString()}`;\n      const response = await fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        showErrorMessage(t(\"FAILED_TO_FETCH_CHAT\"));\n        throw new Error(t(\"FAILED_TO_FETCH_CHAT\"));\n      }\n\n      const responseData = await response.json();\n      console.log(\"getChatRequest\", responseData.result);\n      return responseData.result;\n    } catch (error) {\n      showErrorMessage(t(\"FAILED_TO_FETCH_CHAT\"));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handlePopoverClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const openPopover = Boolean(anchorEl);\n  const id = openPopover ? \"simple-popover\" : undefined;\n\n  const handlePageChange = (event, newValue) => {\n    setCurrentPage(newValue);\n  };\n\n  useEffect(() => {\n    setDesignationsList(designations);\n    if (activeTab === \"Tab2\") {\n      handleSearch();\n    }\n  }, [currentPage]);\n\n  useEffect(() => {\n    const _userId = util.userId();\n    setLoggedInUserId(_userId);\n    fetchUserInfo(_userId);\n  }, []);\n\n  const toggleChat = () => {\n    setShowChat(!showChat);\n    setButtonText(showChat ? t(\"INVITE\") : t(\"SEND_INVITATION\"));\n  };\n\n  useEffect(() => {\n    onMyConnection();\n  }, [loggedInUserId]);\n\n  function handleClick(event) {\n    event.preventDefault();\n    console.info(\"You clicked a breadcrumb.\");\n  }\n\n  const handleTabClick = (tab) => {\n    setActiveTab(tab);\n  };\n\n  const handleOpenModal = (user) => {\n    setSelectedUser(user);\n    setOpenModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setOpenModal(false);\n    setIsModalOpen(false);\n  };\n\n  const handleSearch = async (selectedUserId = \"\") => {\n    setIsLoading(true);\n    setUserSearchData([]);\n    setUserFilter([]);\n\n    let filters = {\n      status: \"1\",\n    };\n    if (selectedUserId) {\n      filters.userId = selectedUserId;\n    }\n    const requestBody = {\n      request: {\n        filters: filters,\n        // query: searchQuery,\n        limit: 10,\n        offset: 10 * (currentPage - 1),\n        sort_by: {\n          lastUpdatedOn: \"desc\",\n        },\n      },\n    };\n\n    try {\n      const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.ADMIN.USER_SEARCH}`;\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(requestBody),\n      });\n\n      if (!response.ok) {\n        showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n        throw new Error(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n\n      let responseData = await response.json();\n      setTotalPages(Math.ceil(responseData?.result?.response?.count / 10));\n      console.log(\"responseData\", responseData);\n      console.log(\n        \"user list of all type user\",\n        invitationAcceptedUsers,\n        invitationNotAcceptedUsers,\n        invitationReceiverByUser\n      );\n      const allTypeOfUsers = [\n        ...(invitationAcceptedUsers || []),\n        ...(invitationNotAcceptedUsers || []),\n        ...(invitationReceiverByUser || []),\n      ]\n        .filter((e) => e.userId)\n        .map((e) => e.userId);\n      console.log(\"allTypeOfUsers\", allTypeOfUsers);\n      const responseUserData = responseData?.result?.response?.content?.filter(\n        function (el) {\n          return !allTypeOfUsers.includes(el.userId);\n        }\n      );\n      const userInfoPromises = responseUserData.map((item) =>\n        fetchUserInfo(item.id)\n      );\n      const userInfoList = await Promise.all(userInfoPromises);\n\n      // Add designation and bio to each item\n      responseUserData.forEach((item, index) => {\n        item.designation = userInfoList[index].designation || \"\";\n        item.bio = userInfoList[index].bio || \"\";\n      });\n      console.log(\"responseUserData\", responseUserData);\n      setUserSearchData(responseUserData);\n      setUserFilter(responseUserData);\n      console.log(\"responseSearchData\", responseData);\n    } catch (error) {\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const onUserQuerySearch = async () => {\n    setIsLoading(true);\n    setError(null);\n    setUserQuerySearchData([]);\n    const requestBody = {\n      request: {\n        filters: {\n          status: \"1\",\n        },\n        query: searchQuery,\n        sort_by: {\n          lastUpdatedOn: \"desc\",\n        },\n      },\n    };\n\n    try {\n      const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.ADMIN.USER_SEARCH}`;\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(requestBody),\n      });\n\n      if (!response.ok) {\n        showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n        throw new Error(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n\n      let responseData = await response.json();\n\n      // Fetch user info for all items concurrently\n      const content = responseData?.result?.response?.content || [];\n      const userInfoPromises = content.map((item) => fetchUserInfo(item.id));\n      const userInfoList = await Promise.all(userInfoPromises);\n\n      // Add designation add bio to each item\n      content.forEach((item, index) => {\n        item.designation = userInfoList[index].designation || \"\";\n        item.bio = userInfoList[index].bio || \"\";\n      });\n      setUserQuerySearchData(content);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleUserClick = (selectedUser) => {\n    setSelectedUser(selectedUser);\n  };\n  const handleTextareaChange = (event) => {\n    setTextValue(event.target.value);\n  };\n\n  const handleSendClick = async () => {\n    try {\n      await sendChatRequestToUser(selectedUser.userId);\n      handleClose();\n      setShowModal(true);\n    } catch (error) {\n      console.error(\"Error sending chat request:\", error);\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    }\n  };\n\n  const userClick = (selectedUser) => {\n    setSelectedUser(selectedUser);\n    setShowChatModal(true);\n  };\n  const getConnections = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    const params = new URLSearchParams({\n      sender_id: loggedInUserId,\n      receiver_id: loggedInUserId,\n      is_connection: true,\n    });\n\n    try {\n      const url = `${\n        urlConfig.URLS.DIRECT_CONNECT.GET_CHATS\n      }?${params.toString()}`;\n      const response = await fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        showErrorMessage(t(\"FAILED_TO_FETCH_CHAT\"));\n        throw new Error(t(\"FAILED_TO_FETCH_CHAT\"));\n      }\n      setInvitationReceivedUserByIds([]);\n      setInvitationAcceptedUsers([]);\n      setInvitationNotAcceptedUsers([]);\n      const responseData = await response.json();\n      console.log(\"getConnections\", responseData.result);\n\n      const invitationNotAcceptedUserIds = responseData.result\n        .filter((res) => !res.is_accepted && res.sender_id === loggedInUserId)\n        .map((res) => res.receiver_id);\n\n      const sender = responseData.result\n        .filter((res) => res.is_accepted && res.receiver_id === loggedInUserId)\n        .map((res) => res.sender_id);\n      const receiver = responseData.result\n        .filter((res) => res.is_accepted && res.sender_id === loggedInUserId)\n        .map((res) => res.receiver_id);\n      const invitationAcceptedUserIds = sender.concat(receiver);\n\n      const invitationReceivedUserIds = responseData.result\n        .filter(\n          (res) =>\n            !res.is_accepted &&\n            res.receiver_id == loggedInUserId &&\n            res.sender_id !== loggedInUserId\n        )\n        .map((res) => res.sender_id);\n\n      invitationReceivedUserIds.length > 0 &&\n        getInvitationReceivedUserByIds(invitationReceivedUserIds);\n      invitationNotAcceptedUserIds.length > 0 &&\n        getInvitationNotAcceptedUserByIds(invitationNotAcceptedUserIds);\n      invitationAcceptedUserIds.length > 0 &&\n        getInvitationAcceptedUserByIds(invitationAcceptedUserIds);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n\n      showErrorMessage(t(\"FAILED_TO_FETCH_CHAT\"));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getInvitationNotAcceptedUserByIds = async (userIds) => {\n    setIsLoading(true);\n    setError(null);\n    setInvitationNotAcceptedUsers([]);\n\n    const requestBody = {\n      request: {\n        filters: {\n          status: \"1\",\n          userId: userIds,\n        },\n        // query: searchQuery,\n        // pageNumber: currentPage,\n        // pageSize: pageSize,\n      },\n    };\n\n    try {\n      const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.ADMIN.USER_SEARCH}`;\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(requestBody),\n      });\n\n      if (!response.ok) {\n        showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n        throw new Error(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n\n      const responseData = await response.json();\n      const content = responseData?.result?.response?.content || [];\n      const userInfoPromises = content.map((item) => fetchUserInfo(item.id));\n      const userInfoList = await Promise.all(userInfoPromises);\n\n      // Add designation and bio to each item\n      content.forEach((item, index) => {\n        item.designation = userInfoList[index].designation || \"\";\n        item.bio = userInfoList[index].bio || \"\";\n      });\n      setInvitationNotAcceptedUsers(content);\n      handleOpen();\n      handleClose();\n\n      console.log(\n        \"InvitationNotAcceptedUsers\",\n        responseData.result.response.content\n      );\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    } finally {\n      setIsLoading(false);\n    }\n    console.log(\"invitationNotAcceptedUsers\", invitationNotAcceptedUsers);\n  };\n\n  const getInvitationAcceptedUserByIds = async (userIds) => {\n    setIsLoading(true);\n    setError(null);\n    setInvitationAcceptedUsers([]);\n\n    const requestBody = {\n      request: {\n        filters: {\n          status: \"1\",\n          userId: userIds,\n        },\n      },\n    };\n\n    try {\n      const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.ADMIN.USER_SEARCH}`;\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(requestBody),\n      });\n\n      if (!response.ok) {\n        showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n        throw new Error(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n\n      const responseData = await response.json();\n      const userList = responseData?.result?.response?.content || [];\n\n      const userListWithChat = await Promise.all(\n        userList.map(async (item) => {\n          const userChat = await getChat(item.id);\n\n          if (userChat?.length > 0) {\n            // Find the latest chat message\n            const latestChat = userChat.reduce((latest, current) => {\n              return new Date(current.timestamp) > new Date(latest.timestamp)\n                ? current\n                : latest;\n            });\n\n            const allRead = userChat.every((chat) => {\n              if (loggedInUserId !== chat.sender_id) {\n                return chat.is_read;\n              }\n              return true;\n            });\n            item = {\n              ...item,\n              latestChat: latestChat.message,\n              isRead: allRead,\n            };\n          } else {\n            item = { ...item, latestChat: null, isRead: true };\n          }\n\n          return item;\n        })\n      );\n\n      const userInfoPromises = userListWithChat.map((item) =>\n        fetchUserInfo(item.id)\n      );\n      const userInfoList = await Promise.all(userInfoPromises);\n\n      // Add designation and bio to each item\n      userListWithChat.forEach((item, index) => {\n        item.designation = userInfoList[index].designation || \"\";\n        item.bio = userInfoList[index].bio || \"\";\n      });\n\n      setInvitationAcceptedUsers(userListWithChat || []);\n      console.log(\n        \"InvitationAcceptedUsers\",\n        responseData.result.response.content\n      );\n    } catch (error) {\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getInvitationReceivedUserByIds = async (userIds) => {\n    setIsLoading(true);\n    setError(null);\n    setInvitationReceivedUserByIds([]);\n    const requestBody = {\n      request: {\n        filters: {\n          status: \"1\",\n          userId: userIds,\n        },\n      },\n    };\n\n    try {\n      const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.ADMIN.USER_SEARCH}`;\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(requestBody),\n      });\n\n      if (!response.ok) {\n        showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n        throw new Error(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n\n      const responseData = await response.json();\n      const content = responseData?.result?.response?.content || [];\n\n      const userListWithChat = await Promise.all(\n        content.map(async (item) => {\n          const userChat = await getChatRequest(item.id);\n          if (userChat?.length > 0) {\n            item = { ...item, messageRequest: userChat[0]?.message };\n          }\n          return item;\n        })\n      );\n\n      const userInfoPromises = userListWithChat.map((item) =>\n        fetchUserInfo(item.id)\n      );\n      const userInfoList = await Promise.all(userInfoPromises);\n\n      userListWithChat.forEach((item, index) => {\n        item.designation = userInfoList[index].designation || \"\";\n        item.bio = userInfoList[index].bio || \"\";\n      });\n\n      setInvitationReceivedUserByIds(userListWithChat);\n      handleOpen();\n      handleClose();\n      console.log(\n        \"getInvitationReceivedUserByIds\",\n        responseData.result.response.content\n      );\n    } catch (error) {\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const fetchBlockUserList = async () => {\n    try {\n      const url = `${urlConfig.URLS.DIRECT_CONNECT.GET_BLOCK_USER_LIST}?sender_id=${loggedInUserId}`;\n      const responseData = await axios.get(url, {\n        withCredentials: true,\n      });\n      if (Array.isArray(responseData.data.result)) {\n        const senderIds = responseData.data.result\n          .filter(({ is_blocked }) => is_blocked)\n          .map(({ receiver_id }) => receiver_id);\n\n        console.log(\"Blocked Sender IDs:\", senderIds);\n        setBlockUserIds(senderIds);\n        if (senderIds?.length > 0) {\n          getBlockedUserByIds(senderIds);\n        }\n      } else {\n        console.error(\"responseData.data.result is not an array\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching block user list:\", error);\n    }\n  };\n\n  const getBlockedUserByIds = async (userIds) => {\n    setError(null);\n    setBlockedUserList([]);\n    const requestBody = {\n      request: {\n        filters: {\n          status: \"1\",\n          userId: userIds,\n        },\n      },\n    };\n\n    try {\n      const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.ADMIN.USER_SEARCH}`;\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(requestBody),\n      });\n\n      if (!response.ok) {\n        showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n        throw new Error(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n\n      const responseData = await response.json();\n      const content = responseData?.result?.response?.content || [];\n\n      const userInfoPromises = content.map((item) => fetchUserInfo(item.id));\n      const userInfoList = await Promise.all(userInfoPromises);\n\n      content.forEach((item, index) => {\n        item.designation = userInfoList[index].designation || \"\";\n        item.bio = userInfoList[index].bio || \"\";\n      });\n\n      setBlockedUserList(content);\n      console.log(\"setBlockedUserList\", responseData.result.response.content);\n    } catch (error) {\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const onMyConnection = () => {\n    if (loggedInUserId) {\n      getConnections();\n    }\n  };\n\n  const handleAcceptedChatOpen = (userId, name, designation) => {\n    const dataToSend = {\n      userId: userId,\n      fullName: name,\n      designation: designation,\n    };\n    localStorage.setItem(\"userId\", userId);\n    localStorage.setItem(\"chatName\", name);\n    localStorage.setItem(\"designation\", designation);\n    setData(dataToSend);\n    setSelectedUserName(name);\n    getUserChat(userId);\n    setIsModalOpen(true);\n    setOpen(true);\n    // return <Navigate to={`/message`} />;\n  };\n\n  const handleCloseChatHistoryModal = () => {\n    setOpen(false);\n  };\n\n  const handleNotAcceptedChatOpen = () => {\n    getUserChatNotAccepted();\n  };\n\n  const acceptChat = (userId) => {\n    acceptChatInvitation(userId);\n  };\n\n  const rejectChat = (userId) => {\n    rejectChatInvitation(userId);\n  };\n\n  const acceptChatInvitation = async (userId) => {\n    setIsLoading(true);\n    setError(null);\n\n    const requestBody = {\n      sender_id: userId,\n      receiver_id: loggedInUserId,\n    };\n\n    try {\n      const url = `${urlConfig.URLS.DIRECT_CONNECT.ACCEPT_CHAT}`;\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(requestBody),\n      });\n      if (!response.ok) {\n        showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n        throw new Error(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n\n      const responseData = await response.json();\n      console.log(\"acceptChatInvitation\", responseData.result);\n      onMyConnection();\n    } catch (error) {\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const rejectChatInvitation = async (userId) => {\n    setIsLoading(true);\n    setError(null);\n    const requestBody = {\n      sender_id: userId,\n      receiver_id: loggedInUserId,\n    };\n\n    try {\n      const url = `${urlConfig.URLS.DIRECT_CONNECT.REJECT_CHAT}`;\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(requestBody),\n      });\n      if (!response.ok) {\n        showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n        throw new Error(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n\n      const responseData = await response.json();\n      console.log(\"rejectChatInvitation\", responseData.result);\n      onMyConnection();\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getUserChat = async (userId) => {\n    setIsLoading(true);\n    setError(null);\n\n    const params = new URLSearchParams({\n      sender_id: loggedInUserId,\n      receiver_id: loggedInUserId,\n      is_accepted: true,\n      is_connection: true,\n    });\n\n    try {\n      const url = `${\n        urlConfig.URLS.DIRECT_CONNECT.GET_CHATS\n      }?${params.toString()}`;\n      const response = await fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        showErrorMessage(t(\"FAILED_TO_FETCH_CHAT\"));\n        throw new Error(t(\"FAILED_TO_FETCH_CHAT\"));\n      }\n\n      const responseData = await response.json();\n      console.log(\"getUserChat\", responseData.result);\n      const userChats = responseData.result.filter(\n        (res) =>\n          (res.sender_id === loggedInUserId && res.receiver_id === userId) ||\n          (res.sender_id === userId && res.receiver_id === loggedInUserId)\n      );\n      setUserChat(userChats);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n\n      showErrorMessage(t(\"FAILED_TO_FETCH_CHAT\"));\n\n      // Open the toaster\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const sendChatRequestToUser = async (userId) => {\n    setIsLoading(true);\n    setError(null);\n\n    const requestBody = {\n      sender_id: loggedInUserId,\n      receiver_id: userId,\n      message: textValue,\n      sender_email: \"sender@gmail.com\",\n      receiver_email: \"receiver@gmail.com\",\n    };\n\n    try {\n      const url = `${urlConfig.URLS.DIRECT_CONNECT.SEND_CHATS}`;\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(requestBody),\n      });\n\n      if (!response.ok) {\n        showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n        throw new Error(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n      setSelectedUser(\"\");\n      console.log(\"sentChatRequest\", response);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const onClickSearchedUser = (selectedUserId) => {\n    // handlePopoverClose();\n    const allTypeOfUsers = [\n      ...(invitationAcceptedUsers || []),\n      ...(invitationNotAcceptedUsers || []),\n      ...(invitationReceiverByUser || []),\n    ];\n    if (activeTab === \"Tab1\") {\n      if (\n        allTypeOfUsers &&\n        allTypeOfUsers.find((user) => user.userId === selectedUserId)\n      ) {\n        emptyOtherSectionsFromMyConnection(selectedUserId);\n      } else {\n        handleTabClick(\"Tab2\");\n        setValue(\"2\");\n        handleSearch(selectedUserId);\n      }\n    } else {\n      if (\n        allTypeOfUsers &&\n        allTypeOfUsers.find((user) => user.userId === selectedUserId)\n      ) {\n        emptyOtherSectionsFromMyConnection(selectedUserId);\n        handleTabClick(\"Tab1\");\n        setValue(\"1\");\n      } else {\n        handleSearch(selectedUserId);\n      }\n    }\n  };\n\n  const emptyOtherSectionsFromMyConnection = (selectedUserId) => {\n    if (\n      invitationReceiverByUser &&\n      invitationReceiverByUser.find((user) => user.userId === selectedUserId)\n    ) {\n      setInvitationReceivedUserByIds(\n        invitationReceiverByUser.filter(\n          (user) => user.userId === selectedUserId\n        )\n      );\n      setInvitationAcceptedUsers([]);\n      setInvitationNotAcceptedUsers([]);\n    } else if (\n      invitationAcceptedUsers &&\n      invitationAcceptedUsers.find((user) => user.userId === selectedUserId)\n    ) {\n      setInvitationAcceptedUsers(\n        invitationAcceptedUsers.filter((user) => user.userId === selectedUserId)\n      );\n      setInvitationReceivedUserByIds([]);\n      setInvitationNotAcceptedUsers([]);\n    } else if (\n      invitationNotAcceptedUsers &&\n      invitationNotAcceptedUsers.find((user) => user.userId === selectedUserId)\n    ) {\n      setInvitationNotAcceptedUsers(\n        invitationNotAcceptedUsers.filter(\n          (user) => user.userId === selectedUserId\n        )\n      );\n      setInvitationAcceptedUsers([]);\n      setInvitationReceivedUserByIds([]);\n    }\n  };\n  const fetchUserInfo = async (userId) => {\n    try {\n      const url = `${urlConfig.URLS.POFILE_PAGE.USER_READ}`;\n      const response = await axios.post(\n        url,\n        { user_ids: [userId] },\n        {\n          withCredentials: true,\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      setUserInfo(response.data.result);\n      return response.data.result[0] || {};\n    } catch (error) {\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    if (searchQuery.length >= 3) {\n      onUserQuerySearch(searchQuery);\n    }\n  }, [searchQuery]);\n  const handleShowFullMessage = (itemId) => {\n    setExpandedMessageId(itemId === expandedMessageId ? null : itemId);\n  };\n  const handleDesignationFilter = async (event) => {\n    const userDesignation = await handleFilter(event);\n\n    setUserIds(userDesignation);\n    let filters = {\n      status: \"1\",\n    };\n    if (userDesignation && userDesignation?.length > 0) {\n      filters.userId = userDesignation;\n    }\n    const responseUserData = await handleFilterChange(filters);\n    setUserSearchData(responseUserData);\n  };\n\n  const handleUserNameFilter = async (event) => {\n    let filters = {\n      status: \"1\",\n    };\n    if (event) {\n      filters.firstName = event;\n    }\n    const responseUserData = await handleFilterChange(filters);\n    setUserSearchData(responseUserData);\n  };\n\n  const handleFilter = async (event) => {\n    try {\n      const url = `${urlConfig.URLS.POFILE_PAGE.USER_READ}`;\n      const response = await axios.post(\n        url,\n        { designations: event },\n        {\n          withCredentials: true,\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      setUserInfo(response.data.result);\n      const newIds = response.data.result.map((item) => item.user_id);\n      return newIds;\n    } catch (error) {\n      console.error(error);\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    }\n  };\n\n  const handleFilterChange = async (filters) => {\n    setIsLoading(true);\n    setError(null);\n    setUserSearchData([]);\n\n    const requestBody = {\n      request: {\n        filters: filters,\n        limit: 10,\n        offset: 10 * (currentPage - 1),\n        sort_by: {\n          lastUpdatedOn: \"desc\",\n        },\n      },\n    };\n\n    try {\n      const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.ADMIN.USER_SEARCH}`;\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(requestBody),\n      });\n\n      if (!response.ok) {\n        showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n        throw new Error(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n\n      let responseData = await response.json();\n      setTotalPages(Math.ceil(responseData?.result?.response?.count / 10));\n      const responseUserData = responseData?.result?.response?.content;\n      const userInfoPromises = responseUserData.map((item) =>\n        fetchUserInfo(item.id)\n      );\n      const userInfoList = await Promise.all(userInfoPromises);\n\n      // Add designation and bio to each item\n      responseUserData.forEach((item, index) => {\n        item.designation = userInfoList[index].designation || \"\";\n        item.bio = userInfoList[index].bio || \"\";\n      });\n\n      setUserSearchData(responseUserData);\n      return responseUserData;\n    } catch (error) {\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!autocompleteOpen) {\n      setOptions([]);\n    }\n  }, [autocompleteOpen]);\n\n  const fetchOptions = async (searchQuery) => {\n    const requestBody = {\n      request: {\n        filters: {\n          status: \"1\",\n        },\n        query: searchQuery,\n        sort_by: {\n          lastUpdatedOn: \"desc\",\n        },\n      },\n    };\n\n    try {\n      const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.ADMIN.USER_SEARCH}`;\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(requestBody),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch data\");\n      }\n\n      let responseData = await response.json();\n      return responseData?.result?.response?.content || [];\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      setError(\"Failed to fetch data. Please try again.\");\n      return [];\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleInputChange = async (event, newInputValue) => {\n    setInputValue(newInputValue);\n    if (newInputValue.length >= 3) {\n      const fetchedOptions = await fetchOptions(newInputValue);\n      setOptions(fetchedOptions);\n      setAutocompleteOpen(true);\n    } else {\n      setAutocompleteOpen(false);\n    }\n  };\n\n  const getOptionLabel = (option) =>\n    `${option.firstName}${option.lastName ? ` ${option.lastName}` : \"\"}`;\n\n  const handleOnSelectSearchedUser = (event, user) => {\n    onClickSearchedUser(user?.userId);\n    console.log(\"Selected Option:\", user);\n  };\n  const handleButtonClick = () => {\n    setSelectedChatUser(null);\n    setShowTableTwo(true);\n  };\n  const handleBackClick = () => {\n    setShowTableTwo(false);\n    handleTabClick(\"Tab1\");\n    setCurrentPage(1);\n    onMyConnection();\n    setSelectedChatUser(null);\n  };\n  const showMessages = (creatorId) => {\n    if (isMobile) {\n      navigate(\"/chat\", {\n        state: { senderUserId: loggedInUserId, receiverUserId: creatorId },\n      });\n    } else {\n      setSelectedChatUser({\n        senderUserId: loggedInUserId,\n        receiverUserId: creatorId,\n      });\n      setSelectedUserId(creatorId);\n    }\n  };\n\n  const handleRejectClick = () => {\n    setOpen(true);\n  };\n\n  const handleConfirmReject = (userId) => {\n    rejectChat(userId);\n    setOpen(false);\n  };\n  const handleUnblockedClick = () => {\n    setOpen(true);\n  };\n  const unBlockedUserChat = (userId) => {\n    handleUnblockUser(userId);\n    setOpen(false);\n  };\n  const handleUnblockUser = async (receiverUserId) => {\n    try {\n      const url = `${urlConfig.URLS.DIRECT_CONNECT.UNBLOCK}`;\n      console.log(\"UnBlocking User\");\n\n      const data = await axios.post(\n        url,\n        {\n          sender_id: loggedInUserId,\n          receiver_id: receiverUserId,\n        },\n        {\n          withCredentials: true,\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      console.log(\"User unblocked successfully!\");\n      // Reload the page after unblocking the user\n      if (data) {\n        window.location.reload();\n      }\n    } catch (error) {\n      console.error(\"Error unblocking user:\", error);\n      showErrorMessage(t(\"FAILED_TO_UNBLOCK_USER\"));\n    }\n  };\n  return (\n    <Box>\n      <Header />\n      {toasterMessage && <ToasterCommon response={toasterMessage} />}\n      <Container maxWidth=\"xxl\" role=\"main\" className=\"pt-0 xs-p-0 xs-pb-75\">\n        {error && (\n          <Alert severity=\"error\" className=\"my-10\">\n            {error}\n          </Alert>\n        )}\n\n        <Box textAlign=\"center\" padding=\"10\">\n          <Box>\n            {/* <input\n              label=\"Search for a user...\"\n              type=\"text\"\n              onChange={(e) => {\n                const value = e.target.value.trim();\n                setSearchQuery(value);\n                if (value.length >= 3) {\n                  handlePopoverClick(e);\n                }\n              }}\n              style={{\n                width: \"99%\",\n                margin: \"20px 0\",\n                marginRight: \"0.5rem\",\n                padding: \"10px 0 10px 0\",\n                borderRadius: \"4px\",\n                border: \"1px solid #CACACA\",\n              }}\n            />\n          </Box> */}\n\n            <Grid container spacing={2} className=\"pt-8 xs-p-0\">\n              <Grid\n                item\n                xs={12}\n                md={4}\n                lg={4}\n                className=\"sm-p-25 left-container mt-2 pr-16 xs-shadow-none\"\n              >\n                <Box\n                  className=\"d-flex my-15\"\n                  style={{\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <Box className=\"h4-title\">{t(\"CONNECTION\")}</Box>\n                  {!showTableTwo ? (\n                    <Button\n                      type=\"button\"\n                      className=\"custom-btn-default xs-mr-10\"\n                      onClick={() => {\n                        setCurrentPage(1);\n                        handleSearch();\n                        handleButtonClick();\n                      }}\n                    >\n                      {t(\"ADD_NEW\")}\n                    </Button>\n                  ) : (\n                    <Button\n                      type=\"button\"\n                      className=\"viewAll xs-mr-10\"\n                      onClick={handleBackClick}\n                    >\n                      {t(\"BACK\")}\n                    </Button>\n                  )}\n                </Box>\n                <TabContext value={value} className=\"addConnection\">\n                  {!showTableTwo ? (\n                    <>\n                      <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n                        <TabList\n                          onChange={handleChange}\n                          aria-label=\"lab API tabs example\"\n                        >\n                          <Tab\n                            label=\"My Connections\"\n                            value=\"1\"\n                            style={{ fontSize: \"12px\", color: \"#484848\" }}\n                            onClick={() => {\n                              handleTabClick(\"Tab1\");\n                              setCurrentPage(1);\n                              onMyConnection();\n                            }}\n                          />\n                          <Tab\n                            label={`Connection Requests (${\n                              invitationReceiverByUser?.length || 0\n                            })`}\n                            value=\"2\"\n                            style={{ fontSize: \"12px\", color: \"#484848\" }}\n                            onClick={() => {\n                              handleTabClick(\"Tab2\");\n                            }}\n                          />\n                          <Tab\n                            label=\"Block Users\"\n                            value=\"3\"\n                            style={{ fontSize: \"12px\", color: \"#484848\" }}\n                            onClick={() => {\n                              fetchBlockUserList();\n                            }}\n                          />\n                        </TabList>\n                      </Box>\n\n                      <TabPanel value=\"1\" style={{ padding: \"0\" }}>\n                        <Box className=\"scroll-45\">\n                          {invitationReceiverByUser &&\n                            invitationReceiverByUser.length === 0 &&\n                            invitationAcceptedUsers &&\n                            invitationAcceptedUsers.length === 0 &&\n                            invitationNotAcceptedUsers &&\n                            invitationNotAcceptedUsers.length === 0 && (\n                              <Box>\n                                <p>{t(\"NO_USERS_FOUND\")}</p>\n                              </Box>\n                            )}\n\n                          {invitationAcceptedUsers &&\n                            invitationAcceptedUsers.map((item) => (\n                              <List\n                                sx={{}}\n                                style={{ color: \"green\", cursor: \"pointer\" }}\n                                className=\"connection-tab\"\n                                key={item.userId}\n                              >\n                                <ListItem\n                                  onClick={() => {\n                                    showMessages(item.userId);\n                                  }}\n                                  className=\"bg-blue\"\n                                  style={{\n                                    fontWeight:\n                                      item.userId === selectedUserId\n                                        ? \"bold\"\n                                        : \"normal\",\n                                    color:\n                                      item.userId === selectedUserId\n                                        ? \"black\"\n                                        : \"inherit\",\n                                  }}\n                                >\n                                  <ListItemText\n                                    primary={\n                                      <span\n                                        style={{\n                                          color:\n                                            item.userId === selectedUserId\n                                              ? \"black\"\n                                              : item.isRead === false\n                                              ? \"black\"\n                                              : \"black\",\n                                          fontWeight:\n                                            item.userId === selectedUserId\n                                              ? \"bold\"\n                                              : item.isRead === false\n                                              ? \"bold\"\n                                              : \"normal\",\n                                        }}\n                                      >\n                                        {`${item.firstName} ${\n                                          item.lastName ? item.lastName : \" \"\n                                        } |  ${item.designation}`}\n                                      </span>\n                                    }\n                                    secondary={item.latestChat}\n                                    onClick={() =>\n                                      handleAcceptedChatOpen(\n                                        item.userId,\n                                        `${item.firstName}${\n                                          item.lastName\n                                            ? ` ${item.lastName}`\n                                            : \"\"\n                                        }`,\n                                        item.designation\n                                      )\n                                    }\n                                  />\n                                </ListItem>\n                                <Divider />\n                              </List>\n                            ))}\n\n                          {invitationNotAcceptedUsers &&\n                            invitationNotAcceptedUsers?.map((item) => (\n                              <List\n                                sx={{}}\n                                style={{ fontSize: \"14px\", cursor: \"pointer\" }}\n                                onClick={() => userClick(item)}\n                                className=\"connection-tab\"\n                              >\n                                <ListItem>\n                                  <ListItemText\n                                    primary={`${item.firstName} ${\n                                      item.lastName ? item.lastName : \"\"\n                                    } | ${item.designation}`}\n                                  />\n                                </ListItem>\n                                <Box className=\"left-bx\">\n                                  <custom-chip>{t(\"REQUEST_SENT\")}</custom-chip>\n                                </Box>\n                                <Divider />\n                              </List>\n                            ))}\n                          <div>\n                            {showChatModal && (\n                              <Modal\n                                open={showChatModal}\n                                onClose={handleCloseModal}\n                                aria-labelledby=\"modal-title\"\n                                aria-describedby=\"modal-desc\"\n                                className=\"sx-bottom\"\n                                sx={{\n                                  display: \"flex\",\n                                  justifyContent: \"center\",\n                                  alignItems: \"flex-end\",\n                                  pt: \"10vh\",\n                                  p: \"0\",\n                                }}\n                              >\n                                <ModalContent sx={{ width: 400 }} style={{}}>\n                                  <div style={{ textAlign: \"center\" }}>\n                                    <h2\n                                      style={{\n                                        fontSize: \"14px\",\n                                        textAlign: \"center\",\n                                        padding: \"13px\",\n                                      }}\n                                    >\n                                      {t(\"INVITATION_NOT_ACCEPTED\")}\n                                    </h2>\n                                    <Button\n                                      onClick={(e) => {\n                                        setShowChatModal(false);\n                                      }}\n                                      className=\"custom-btn-primary\"\n                                    >\n                                      {t(\"CLOSE\")}\n                                    </Button>\n                                  </div>\n                                </ModalContent>\n                              </Modal>\n                            )}\n                          </div>\n                        </Box>\n                      </TabPanel>\n                      <TabPanel value=\"2\">\n                        <Box className=\"scroll\">\n                          {invitationReceiverByUser &&\n                            invitationReceiverByUser?.map((item) => (\n                              <List\n                                sx={{}}\n                                style={{ color: \"gray\", cursor: \"pointer\" }}\n                              >\n                                <ListItem\n                                  key={item.userId}\n                                  className=\"connection-tab\"\n                                >\n                                  <ListItemText\n                                    style={{ fontSize: \"14px\", color: \"#000\" }}\n                                    primary={`${item.firstName}${\n                                      item.lastName ? ` ${item.lastName}` : \"\"\n                                    } | ${item.designation}`}\n                                    secondary={\n                                      item.messageRequest.length > 20 ? (\n                                        <div\n                                          style={{\n                                            border: \"1px solid #ddd\",\n                                            padding: \"3px 10px\",\n                                            borderRadius: \"5px\",\n                                            color: \"#00000080\",\n                                            fontSize: \"12px\",\n                                            marginTop: \"10px\",\n                                          }}\n                                        >\n                                          {expandedMessageId === item.userId\n                                            ? item.messageRequest\n                                            : `${item.messageRequest.substring(\n                                                0,\n                                                20\n                                              )}`}\n                                          <span\n                                            style={{\n                                              color: \"#0E7A9C\",\n                                              cursor: \"pointer\",\n                                            }}\n                                            onClick={() =>\n                                              handleShowFullMessage(item.userId)\n                                            }\n                                          >\n                                            {\" \"}\n                                            {expandedMessageId === item.userId\n                                              ? \"read less\"\n                                              : \"read more\"}\n                                          </span>\n                                        </div>\n                                      ) : (\n                                        item.messageRequest\n                                      )\n                                    }\n                                  />\n                                  <div\n                                    style={{\n                                      display: \"flex\",\n                                      justifyContent: \"flex-end\",\n                                      marginTop: \"10px\",\n                                    }}\n                                  >\n                                    <Link\n                                      href=\"#\"\n                                      underline=\"none\"\n                                      color=\"#004367\"\n                                      onClick={() => acceptChat(item.userId)}\n                                      style={{ marginLeft: \"10px\" }}\n                                    >\n                                      <CheckCircleOutlineIcon\n                                        style={{\n                                          fontSize: \"22px\",\n                                          color: \"#484848\",\n                                        }}\n                                      />\n                                    </Link>\n                                    <span style={{ margin: \"0 5px\" }}></span>\n                                    <Link\n                                      href=\"#\"\n                                      underline=\"none\"\n                                      color=\"#7d7a7a\"\n                                      onClick={handleRejectClick}\n                                    >\n                                      <CancelOutlinedIcon\n                                        style={{\n                                          fontSize: \"22px\",\n                                          color: \"#484848\",\n                                        }}\n                                      />\n                                    </Link>\n\n                                    <Dialog open={open} onClose={handleClose}>\n                                      <DialogTitle>\n                                        {\"Are you sure?\"}\n                                      </DialogTitle>\n                                      <DialogContent>\n                                        <DialogContentText>\n                                          {t(\n                                            \"ARE_YOU_SURE_YOU_WANT_TO_REJECT_THIS_REQUEST\"\n                                          )}\n                                        </DialogContentText>\n                                      </DialogContent>\n                                      <DialogActions>\n                                        <Button\n                                          type=\"button\"\n                                          className=\"custom-btn-primary\"\n                                          onClick={handleClose}\n                                        >\n                                          {t(\"CANCEL\")}\n                                        </Button>\n                                        <Button\n                                          onClick={() =>\n                                            handleConfirmReject(item.userId)\n                                          }\n                                          type=\"button\"\n                                          className=\"custom-btn-primary\"\n                                          autoFocus\n                                        >\n                                          {t(\"OK\")}\n                                        </Button>\n                                      </DialogActions>\n                                    </Dialog>\n                                  </div>\n                                </ListItem>\n\n                                <Divider />\n                              </List>\n                            ))}\n                        </Box>\n                      </TabPanel>\n                      <TabPanel value=\"3\">\n                        <Box className=\"scroll\">\n                          {blockedUserList &&\n                            blockedUserList.length > 0 &&\n                            blockedUserList.map((item) => (\n                              <List\n                                sx={{}}\n                                style={{ color: \"green\", cursor: \"pointer\" }}\n                                className=\"connection-tab\"\n                                key={item.userId}\n                              >\n                                <ListItem\n                                  className=\"bg-blue\"\n                                  style={{\n                                    fontWeight: \"normal\",\n                                    color: \"inherit\",\n                                  }}\n                                >\n                                  <ListItemText\n                                    primary={\n                                      <span\n                                        style={{\n                                          color:\n                                            item.userId === selectedUserId\n                                              ? \"black\"\n                                              : item.isRead === false\n                                              ? \"black\"\n                                              : \"black\",\n                                          fontWeight:\n                                            item.userId === selectedUserId\n                                              ? \"bold\"\n                                              : item.isRead === false\n                                              ? \"bold\"\n                                              : \"normal\",\n                                        }}\n                                      >\n                                        {`${item.firstName} ${\n                                          item.lastName ? item.lastName : \" \"\n                                        } |  ${item.designation}`}\n                                      </span>\n                                    }\n                                    secondary={item.latestChat}\n                                    onClick={() =>\n                                      handleAcceptedChatOpen(\n                                        item.userId,\n                                        `${item.firstName}${\n                                          item.lastName\n                                            ? ` ${item.lastName}`\n                                            : \"\"\n                                        }`,\n                                        item.designation\n                                      )\n                                    }\n                                  />\n                                  <Link\n                                    underline=\"none\"\n                                    color=\"primary\"\n                                    // onClick={handleOpen}\n                                    onClick={() => {\n                                      handleUnblockedClick();\n                                    }}\n                                    style={{\n                                      fontSize: \"12px\",\n                                      color: \"#0E7A9C\",\n                                      fontWeight: \"600\",\n                                      cursor: \"pointer\",\n                                    }}\n                                  >\n                                    {t(\"UNBLOCK\")}\n                                  </Link>\n                                  <Dialog open={open} onClose={handleClose}>\n                                    <DialogTitle>{\"Are you sure?\"}</DialogTitle>\n                                    <DialogContent>\n                                      <DialogContentText>\n                                        Are you sure you want to unblock this\n                                        user?\n                                      </DialogContentText>\n                                    </DialogContent>\n                                    <DialogActions>\n                                      <Button\n                                        type=\"button\"\n                                        className=\"custom-btn-primary\"\n                                        onClick={handleClose}\n                                      >\n                                        Cancel\n                                      </Button>\n                                      <Button\n                                        onClick={() =>\n                                          unBlockedUserChat(item.userId)\n                                        }\n                                        type=\"button\"\n                                        className=\"custom-btn-primary\"\n                                        autoFocus\n                                      >\n                                        OK\n                                      </Button>\n                                    </DialogActions>\n                                  </Dialog>\n                                </ListItem>\n                                <Divider />\n                              </List>\n                            ))}\n                        </Box>\n                      </TabPanel>\n                    </>\n                  ) : (\n                    <Box>\n                      <Box\n                        display=\"flex\"\n                        my={3}\n                        justifyContent=\"center\"\n                        style={{ borderBottom: \"solid 1px #ddd\" }}\n                      >\n                        <Box className=\"h5-title xs-text-left\">\n                          {t(\"ADD_NEW_CONNECTION\")}\n                        </Box>\n                      </Box>\n                      <Autocomplete\n                        id=\"autocomplete-input\"\n                        open={autocompleteOpen}\n                        onClose={() => {\n                          setAutocompleteOpen(false);\n                        }}\n                        options={options}\n                        noOptionsText={t(\"NO_USERS_FOUND\")}\n                        getOptionLabel={getOptionLabel} // Adjust this based on your API response structure\n                        getOptionKey={(option) => option.userId}\n                        onChange={handleOnSelectSearchedUser}\n                        inputValue={inputValue}\n                        onInputChange={handleInputChange}\n                        renderInput={(params) => (\n                          <TextField\n                            {...params}\n                            label=\"Search for a User\"\n                            className=\"searchUser\"\n                            variant=\"outlined\"\n                          />\n                        )}\n                      />\n                      <div>\n                        <Popover\n                          id={id}\n                          open={openPopover}\n                          anchorEl={anchorEl}\n                          onClose={handlePopoverClose}\n                          anchorOrigin={{\n                            vertical: \"bottom\",\n                            horizontal: \"left\",\n                          }}\n                        >\n                          <Typography sx={{ p: 2 }}>\n                            {userQuerySearchData &&\n                              userQuerySearchData?.length > 0 &&\n                              userQuerySearchData?.map((item) => (\n                                <List\n                                  sx={{}}\n                                  style={{ color: \"gray\", cursor: \"pointer\" }}\n                                >\n                                  <ListItem>\n                                    <ListItemText\n                                      primary={`${item.firstName}${\n                                        item.lastName ? ` ${item.lastName}` : \"\"\n                                      }`}\n                                      secondary={`${item.designation}`}\n                                      onClick={() =>\n                                        onClickSearchedUser(item.userId)\n                                      }\n                                    />\n                                  </ListItem>\n                                  <Divider />\n                                </List>\n                              ))}\n                            {(!userQuerySearchData ||\n                              userQuerySearchData.length === 0) && (\n                              <Box>\n                                <p>{t(\"NO_USERS_FOUND\")}</p>\n                              </Box>\n                            )}\n                          </Typography>\n                        </Popover>\n                      </div>\n                      <Box\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"space-between\",\n                        }}\n                        className=\"filter-domain my-20 connection-tab\"\n                      >\n                        {/* {userFilter && (\n                          <Filter\n                            options={userFilter.map((user) => user.firstName)}\n                            label=\"Filter by Name\"\n                            onChange={handleUserNameFilter}\n                            className=\"w-30\"\n                          />\n                        )} */}\n\n                        <Filter\n                          options={designationsList}\n                          label=\"Filter by Designation\"\n                          onChange={handleDesignationFilter}\n                          // isMulti={false}\n                          className=\"w-30\"\n                        />\n                      </Box>\n                      <Box className=\"scroll\">\n                        {userSearchData &&\n                          userSearchData?.map((item) => (\n                            <List\n                              key={item.id} // Add key prop to each List element\n                              sx={{ fontSize: \"14px\" }}\n                              onClick={() => handleUserClick(item)}\n                            >\n                              <ListItem>\n                                <ListItemText\n                                  className=\"inviteText\"\n                                  primary={`${item.firstName}${\n                                    item.lastName ? ` ${item.lastName}` : \"\"\n                                  }`}\n                                  secondary={`${item.designation}`}\n                                />\n                                {item.id !== loggedInUserId && ( // Conditionally render the link\n                                  <Link\n                                    className=\"invite-text\"\n                                    color=\"primary\"\n                                    // onClick={handleOpen}\n                                    onClick={() => {\n                                      showMessages(item.userId);\n                                    }}\n                                  >\n                                    {t(\"INVITE\")}\n                                  </Link>\n                                )}\n                              </ListItem>\n                              <Divider />\n                            </List>\n                          ))}\n                      </Box>\n                      <Pagination\n                        count={totalPages}\n                        page={currentPage}\n                        onChange={handlePageChange}\n                      />\n                    </Box>\n                  )}\n                </TabContext>\n              </Grid>\n\n              <Grid\n                item\n                xs={12}\n                md={8}\n                lg={8}\n                className=\"pt-8 pb-20 xs-hide addConnectChat pl-0\"\n              >\n                {!isMobile && (\n                  <Box className=\"text-center\">\n                    {!selectedChatUser ? (\n                      <Box className=\"center-container\">\n                        <ForumOutlinedIcon style={{ fontSize: \"100px\" }} />\n                        <Box className=\"demo-chat\">\n                          {t(\"START_A_CONVERSATION\")}\n                        </Box>\n                        <Box className=\"demo-text\">\n                          {t(\"CLICK_ON_ANY_CONTACT\")}\n                        </Box>\n                      </Box>\n                    ) : (\n                      <Chat\n                        senderUserId={selectedChatUser.senderUserId}\n                        receiverUserId={selectedChatUser.receiverUserId}\n                      />\n                    )}\n                  </Box>\n                )}\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n      <Footer />\n    </Box>\n  );\n};\n\nconst Backdrop = React.forwardRef((props, ref) => {\n  const { open, ...other } = props;\n  return (\n    <Fade in={open}>\n      <div ref={ref} {...other} />\n    </Fade>\n  );\n});\n\nBackdrop.propTypes = {\n  open: PropTypes.bool,\n};\n\nconst blue = {\n  200: \"#99CCFF\",\n  300: \"#66B2FF\",\n  400: \"#3399FF\",\n  500: \"#007FFF\",\n  600: \"#0072E5\",\n  700: \"#0066CC\",\n};\n\nconst grey = {\n  50: \"#F3F6F9\",\n  100: \"#E5EAF2\",\n  200: \"#DAE2ED\",\n  300: \"#C7D0DD\",\n  400: \"#B0B8C4\",\n  500: \"#9DA8B7\",\n  600: \"#6B7A90\",\n  700: \"#434D5B\",\n  800: \"#303740\",\n  900: \"#1C2025\",\n};\n\nconst Modal = styled(BaseModal)`\n  position: fixed;\n  z-index: 1300;\n  inset: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledBackdrop = styled(Backdrop)`\n  z-index: -1;\n  position: fixed;\n  inset: 0;\n  background-color: rgb(0 0 0 / 0.5);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n};\n\nconst ModalContent = styled(\"div\")(\n  ({ theme }) => css`\n    font-weight: 500;\n    text-align: start;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    overflow: hidden;\n    background-color: ${theme.palette.mode === \"dark\" ? grey[900] : \"#fff\"};\n    border-radius: 8px;\n    border: 1px solid ${theme.palette.mode === \"dark\" ? grey[700] : grey[200]};\n    box-shadow: 0 4px 12px\n      ${theme.palette.mode === \"dark\" ? \"rgb(0 0 0 / 0.5)\" : \"rgb(0 0 0 / 0.2)\"};\n    padding: 0px;\n    color: ${theme.palette.mode === \"dark\" ? grey[50] : grey[900]};\n\n    & .modal-title {\n      margin: 0;\n      line-height: 1.5rem;\n      margin-bottom: 8px;\n    }\n\n    & .modal-description {\n      margin: 0;\n      line-height: 1.5rem;\n      font-weight: 400;\n      color: ${theme.palette.mode === \"dark\" ? grey[400] : grey[800]};\n      margin-bottom: 4px;\n    }\n  `\n);\n\nconst TriggerButton = styled(Button)(\n  ({ theme }) => css`\n    font-weight: 600;\n    font-size: 0.875rem;\n    line-height: 1.5;\n    padding: 8px 16px;\n    border-radius: 8px;\n    transition: all 150ms ease;\n    cursor: pointer;\n\n    }\n  `\n);\n\nexport default AddConnections;\n","import axios from \"axios\";\n\nexport async function get(url: string, headers: any = {}) {\n  return await axios.get(url, {\n    headers,\n    withCredentials: true, // Include cookies in requests\n  });\n}\n\nexport async function post(url: string, body: any, headers: any = {}) {\n  return await axios.post(url, body, {\n    headers,\n    withCredentials: true, // Include cookies in requests\n  });\n}\n\nexport async function update(url: string, body: any, headers: any = {}) {\n  return await axios.put(url, body, {\n    headers,\n    withCredentials: true, // Include cookies in requests\n  });\n}\n\nexport async function patch(url: string, body: any, headers: any = {}) {\n  return await axios.patch(url, body, {\n    headers,\n    withCredentials: true,\n  });\n}\n\nexport async function distory(url: string, body: any, headers: any = {}) {\n  return await axios.delete(url, {\n    headers,\n    withCredentials: true, // Include cookies in requests\n    data: body,\n  });\n}\n\n","import _ from \"lodash\"; // Import lodash library if not already imported\nimport { get } from \"./RestClient.ts\";\n\n// Define API functions\nexport const getChannel = async (url, header) => {\n  const result = await get(url, {\n    header,\n  });\n  if (result) {\n    return result;\n  } else {\n    return [];\n  }\n};\n\nexport const getFrameworkCategories = async (url, header) => {\n  const result = await get(url, {\n    header,\n  });\n  if (result) {\n    return result;\n  } else {\n    return [];\n  }\n};\n\nexport const getCourseFramework = async (url, header) => {\n  const result = await get(url, {\n    header,\n  });\n  if (result) {\n    return result;\n  } else {\n    return [];\n  }\n};\n\nexport const getSelectedFrameworkCategories = async (url, header) => {\n  const result = await get(url, {\n    header,\n  });\n  if (result) {\n    return result;\n  } else {\n    return [];\n  }\n};\nexport const getUserData = async (url, header, requestBody) => {\n  const result = await patch(url, {\n    header,\n    requestBody\n  })\n  if (result) {\n    return result\n  } else {\n    return []\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport Box from \"@mui/joy/Box\";\nimport Typography from \"@mui/joy/Typography\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport domainWithImage from \"../assets/domainImgForm.json\";\nimport { Tooltip } from \"@mui/material\";\n\nconst responsive = {\n  superLargeDesktop: {\n    // the naming can be any, depends on you.\n    breakpoint: { max: 4000, min: 3000 },\n    items: 5,\n  },\n  desktop: {\n    breakpoint: { max: 3000, min: 1024 },\n    items: 8,\n  },\n  tablet: {\n    breakpoint: { max: 1024, min: 464 },\n    items: 2,\n  },\n  mobile: {\n    breakpoint: { max: 464, min: 0 },\n    items: 4,\n  },\n};\n\nexport default function DomainCarousel({\n  domains,\n  onSelectDomain,\n  selectedDomainCode,\n}) {\n  const dotsToShow = 4; // Number of dots to display\n  const [isActive, setIsActive] = useState(false);\n  const [itemsArray, setItemsArray] = useState([]);\n  const [data, setData] = React.useState();\n  const [activeStates, setActiveStates] = useState(null);\n  // (\n  //   () => domains?.map(() => false) // Initialize all items as inactive\n  // );\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 767);\n  const [activeDomain, setActiveDomain] = useState(null);\n  const [scrolled, setScrolled] = useState(false);\n\n  const handleResize = () => {\n    setIsMobile(window.innerWidth <= 767);\n  };\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.scrollY > 0) {\n        setScrolled(true);\n      } else {\n        setScrolled(false);\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n  useEffect(() => {\n    domains?.map((term) => {\n      if (domainWithImage) {\n        domainWithImage?.result?.form?.data?.fields?.map((imgItem) => {\n          if ((term && term.code) === (imgItem && imgItem.code)) {\n            term[\"image\"] = imgItem.image ? imgItem.image : \"\";\n            pushData(term);\n            itemsArray?.push(term);\n          }\n        });\n      }\n    });\n    const croppedArray = itemsArray?.slice(0, 10);\n    setData(croppedArray);\n\n    console.log(\"itemsArray---\", itemsArray);\n    console.log(\"data---\", data);\n  }, []);\n\n  useEffect(() => {\n    if (selectedDomainCode) {\n      domains?.map((domain, index) => {\n        if (domain.code === selectedDomainCode) {\n          setActiveStates(index);\n        }\n      });\n    }\n  }, [selectedDomainCode]);\n\n  useEffect(() => {\n    console.log(\"activeStates\", activeStates);\n  }, [activeStates]);\n\n  // Function to push data to the array\n  const pushData = (term) => {\n    setItemsArray((prevData) => [...prevData, term]);\n  };\n  const handleDomainClick = (query, index, name) => {\n    setActiveStates(index === activeStates ? null : index);\n    if (index === activeStates) {\n      onSelectDomain(null, null);\n    } else {\n      onSelectDomain(query, name);\n    }\n\n    // const newActiveStates = [...activeStates]; // Create a copy of activeStates\n    // newActiveStates[index] = !newActiveStates[index]; // Toggle the active state at the clicked index\n    // setActiveStates(newActiveStates);\n\n    // setIsActive(!isActive);\n  };\n\n  const handleMouseEnter = (index) => {\n    setActiveDomain(index);\n  };\n\n  const handleMouseLeave = () => {\n    setActiveDomain(null);\n  };\n\n  return (\n    <Box style={{ position: \"relative\" }} className=\"bg-blue\">\n      {isMobile ? (\n        <>\n          <Carousel\n            swipeable={false}\n            draggable={false}\n            showDots={[\"mobile\"]} // Show dots only if there are more than 4 items\n            responsive={responsive}\n            ssr={true} // means to render carousel on server-side.\n            infinite={true}\n            autoPlaySpeed={1000}\n            keyBoardControl={true}\n            customTransition=\"all .5\"\n            transitionDuration={500}\n            containerClass=\"carousel-container\"\n            dotListClass=\"custom-dot-list-style-none\"\n            itemClass=\"carousel-item-padding-40-px\"\n          >\n            {itemsArray &&\n              itemsArray?.slice(0, 10).map((domain, index) => (\n                <Box\n                  className={`my-class ${\n                    activeStates === index ? \"carousel-active-ui\" : \"\"\n                  }`}\n                  onClick={(e) =>\n                    handleDomainClick(domain.code, index, domain.name)\n                  }\n                  key={index}\n                  orientation=\"horizontal\"\n                  size=\"sm\"\n                  variant=\"outlined\"\n                  style={{ display: \"flex\" }}\n                >\n                  <Box\n                    className=\"imgBorder\"\n                    style={{\n                      background: \"#fff\",\n                      padding: \"10px\",\n                      borderRadius: \"10px\",\n                      height: \"45px\",\n                      width: \"45px\",\n                    }}\n                  >\n                    {/* {(domain.image != undefined) && <img src={require(baseImgUrl+domain.image)}  style={{width:'40px',objectFit:'contain'}} alt={domain.name} />}\n                {(domain.image == undefined)&& <img src={require(\"../assets/swm.png\")}  style={{width:'40px',objectFit:'contain'}} alt={domain.name} />} */}\n                    <img\n                      src={require(`../assets/domainImgs${domain.image}`)}\n                      style={{ width: \"40px\", objectFit: \"contain\" }}\n                      alt={domain.name}\n                    />\n                    {/* <img src={require(\"../assets/swm.png\")}  style={{width:'40px',objectFit:'contain'}} alt={domain.name} /> */}\n                  </Box>\n                  <Box\n                    sx={{ alignSelf: \"center\", padding: \"0 19px 0 5px\" }}\n                    className=\"xs-hide\"\n                  >\n                    <Typography level=\"title-md\" style={{ fontSize: \"12px\" }}>\n                      {domain.name}\n                    </Typography>\n                  </Box>\n                </Box>\n              ))}\n          </Carousel>\n          <Box className=\"leftshade\"></Box>\n          <Box className=\"rightshade\"></Box>\n        </>\n      ) : (\n        <Box\n          sx={{ display: \"flex\" }}\n          className={scrolled ? \"carousel-bx scrolled\" : \"carousel-bx\"}\n        >\n          {itemsArray &&\n            itemsArray?.slice(0, 10).map((domain, index) => (\n              <Box\n                className={`my-class ${\n                  activeStates === index ? \"carousel-active-ui\" : \"\"\n                }`}\n                onClick={(e) =>\n                  handleDomainClick(domain.code, index, domain.name)\n                }\n                key={index}\n                orientation=\"horizontal\"\n                size=\"sm\"\n                variant=\"outlined\"\n                style={{ display: \"flex\", margin: \"0 4px\" }}\n                onMouseEnter={(event) => handleMouseEnter(index)}\n                onMouseLeave={handleMouseLeave}\n              >\n                <Box\n                  className=\"d-flex\"\n                  style={{\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <Box\n                    className=\"imgBorder\"\n                    style={{\n                      background: \"#fff\",\n                      padding: \"10px\",\n                      borderRadius: \"10px\",\n                      height: \"45px\",\n                      width: \"45px\",\n                    }}\n                  >\n                    {/* {(domain.image != undefined) && <img src={require(baseImgUrl+domain.image)}  style={{width:'40px',objectFit:'contain'}} alt={domain.name} />}\n                {(domain.image == undefined)&& <img src={require(\"../assets/swm.png\")}  style={{width:'40px',objectFit:'contain'}} alt={domain.name} />} */}\n                    {/* <Tooltip title={domain.description}> */}\n                    <img\n                      className=\"domainHover\"\n                      src={require(`../assets/domainImgs${domain.image}`)}\n                      style={{ width: \"40px\", objectFit: \"contain\" }}\n                      alt={domain.name}\n                    />\n\n                    {/* </Tooltip> */}\n\n                    {/* <img src={require(\"../assets/swm.png\")}  style={{width:'40px',objectFit:'contain'}} alt={domain.name} /> */}\n                  </Box>\n                  {activeDomain === index && (\n                    <span className=\"pl-5\">{domain.name}</span>\n                    // <Box\n                    //   className=\"domainText\"\n                    //   sx={{ alignSelf: \"center\", padding: \"0 19px 0 5px\" }}\n                    // >\n                    //   <Typography\n                    //     level=\"title-md\"\n                    //     style={{ fontSize: \"12px\", opacity: isActive ? 1 : 0 }}\n                    //   >\n                    //     {domain.name}\n                    //   </Typography>\n                    // </Box>\n                  )}\n                </Box>\n              </Box>\n            ))}\n        </Box>\n      )}\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n// import { Box, Heading, Text, Button } from '@chakra-ui/react';\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { useTranslation } from \"react-i18next\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport { styled } from \"@mui/material/styles\";\nimport Paper from \"@mui/material/Paper\";\nimport Container from \"@mui/material/Container\";\nimport Box from \"@mui/material/Box\";\nimport domainWithImage from \"../../assets/domainImgForm.json\";\nimport SearchBox from \"components/search\";\nimport frameworkHardCodedData from \"../../assets/framework.json\";\nimport Header from \"../../components/header\";\nimport * as frameworkService from \".././../services/frameworkService\";\nimport { generatePath, useNavigate, useLocation, Link } from \"react-router-dom\";\nimport Footer from \"../../components/Footer\";\nimport { object } from \"yup\";\nimport Alert from \"@mui/material/Alert\";\n// import { useTranslation } from \"react-i18next\";\nimport appConfig from \"../../configs/appConfig.json\";\nconst urlConfig = require(\"../../configs/urlConfig.json\");\nimport ToasterCommon from \"../ToasterCommon\";\nimport Carousel from \"react-multi-carousel\";\nimport DomainCarousel from \"components/domainCarousel\";\nimport NoResult from \"pages/content/noResultFound\";\nimport BoxCard from \"../../components/Card\";\nimport SummarizeOutlinedIcon from \"@mui/icons-material/SummarizeOutlined\";\nimport BookmarkAddedOutlinedIcon from \"@mui/icons-material/BookmarkAddedOutlined\";\nimport VerifiedOutlinedIcon from \"@mui/icons-material/VerifiedOutlined\";\nimport TextField from \"@mui/material/TextField\";\nimport IconButton from \"@mui/material/IconButton\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\nconst theme = createTheme();\n\ntheme.typography.h3 = {\n  fontSize: \"0.938rem\",\n  background: \"#fff\",\n  display: \"block\",\n  \"@media (min-width:600px)\": {\n    fontSize: \"1.1rem\",\n  },\n  [theme.breakpoints.up(\"md\")]: {\n    fontSize: \"1.125rem\",\n  },\n};\n\nconst responsive = {\n  superLargeDesktop: {\n    breakpoint: { max: 4000, min: 3000 },\n    items: 5,\n  },\n  desktop: {\n    breakpoint: { max: 3000, min: 1024 },\n    items: 8,\n  },\n  tablet: {\n    breakpoint: { max: 1024, min: 464 },\n    items: 2,\n  },\n  mobile: {\n    breakpoint: { max: 464, min: 0 },\n    items: 1,\n  },\n};\n\nconst DomainList = ({ globalSearchQuery }) => {\n  const { t } = useTranslation();\n  // console.log(data.result.categories.terms.category);\n  // const [search, setSearch] = React.useState(true);\n  // const [searchState, setSearchState] = React.useState(false);\n  const [data, setData] = React.useState();\n  const [channelData, setChannelData] = React.useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const [category, setCategory] = React.useState();\n  const [imgItem, setImgItem] = React.useState(object ? object : {});\n  const [itemsArray, setItemsArray] = useState([]);\n  const [toasterOpen, setToasterOpen] = useState(false);\n  const [toasterMessage, setToasterMessage] = useState(\"\");\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 767);\n  const [domain, setDomain] = useState();\n  const [popularCourses, setPopularCourses] = useState([]);\n  const [recentlyAddedCourses, setRecentlyAddedCourses] = useState([]);\n\n  const [searchQuery, setSearchQuery] = useState(globalSearchQuery || \"\");\n\n  const showErrorMessage = (msg) => {\n    setToasterMessage(msg);\n    setTimeout(() => {\n      setToasterMessage(\"\");\n    }, 2000);\n    setToasterOpen(true);\n  };\n\n  useEffect(() => {\n    fetchDataFramework();\n    getRecentlyAddedCourses();\n    getPopularCourses();\n    // console.log(\"domainWithImage--\",domainWithImage)\n  }, []);\n\n  // Function to push data to the array\n  const pushData = (term) => {\n    setItemsArray((prevData) => [...prevData, term]);\n  };\n\n  const fetchDataFramework = async () => {\n    setIsLoading(true);\n    setError(null);\n    const rootOrgId = sessionStorage.getItem(\"rootOrgId\");\n    const defaultFramework = localStorage.getItem(\"defaultFramework\");\n\n    try {\n      const url = `${urlConfig.URLS.PUBLIC_PREFIX}${urlConfig.URLS.CHANNEL.READ}/${rootOrgId}`;\n      const response = await frameworkService.getChannel(url);\n      // console.log(\"channel---\",response.data.result);\n      setChannelData(response.data.result);\n    } catch (error) {\n      console.log(\"error---\", error);\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    } finally {\n      setIsLoading(false);\n    }\n    try {\n      const url = `${urlConfig.URLS.PUBLIC_PREFIX}${urlConfig.URLS.FRAMEWORK.READ}/\n      ${defaultFramework}?categories=${urlConfig.params.framework}`;\n\n      const response = await frameworkService.getSelectedFrameworkCategories(\n        url\n      );\n\n      response?.data?.result?.framework?.categories[0].terms.map((term) => {\n        setCategory(term);\n        if (domainWithImage) {\n          domainWithImage.result.form.data.fields.map((imgItem) => {\n            if ((term && term.code) === (imgItem && imgItem.code)) {\n              term[\"image\"] = imgItem.image ? imgItem.image : \"\";\n              pushData(term);\n              itemsArray.push(term);\n            }\n          });\n        }\n      });\n      setDomain(response?.data?.result?.framework?.categories[0].terms);\n      setData(itemsArray);\n    } catch (error) {\n      console.log(\"nulp--  error-\", error);\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    } finally {\n      console.log(\"nulp finally---\");\n      setIsLoading(false);\n    }\n  };\n\n  const getRecentlyAddedCourses = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    let requestData = {\n      request: {\n        filters: {\n          se_boards: [null],\n          primaryCategory: [\n            \"Collection\",\n            \"Resource\",\n            \"Content Playlist\",\n            \"Course\",\n            \"Course Assessment\",\n            \"Digital Textbook\",\n            \"eTextbook\",\n            \"Explanation Content\",\n            \"Learning Resource\",\n            \"Lesson Plan Unit\",\n            \"Practice Question Set\",\n            \"Teacher Resource\",\n            \"Textbook Unit\",\n            \"LessonPlan\",\n            \"FocusSpot\",\n            \"Learning Outcome Definition\",\n            \"Curiosity Questions\",\n            \"MarkingSchemeRubric\",\n            \"ExplanationResource\",\n            \"ExperientialResource\",\n            \"Practice Resource\",\n            \"TVLesson\",\n            \"Course Unit\",\n            \"Exam Question\",\n          ],\n          visibility: [\"Default\", \"Parent\"],\n        },\n        limit: 100,\n        sort_by: {\n          lastPublishedOn: \"desc\",\n        },\n        fields: [\n          \"name\",\n          \"appIcon\",\n          \"mimeType\",\n          \"gradeLevel\",\n          \"identifier\",\n          \"medium\",\n          \"pkgVersion\",\n          \"board\",\n          \"subject\",\n          \"resourceType\",\n          \"primaryCategory\",\n          \"contentType\",\n          \"channel\",\n          \"organisation\",\n          \"trackable\",\n          \"primaryCategory\",\n          \"se_boards\",\n          \"se_gradeLevels\",\n          \"se_subjects\",\n          \"se_mediums\",\n          \"primaryCategory\",\n        ],\n        facets: [\n          \"se_boards\",\n          \"se_gradeLevels\",\n          \"se_subjects\",\n          \"se_mediums\",\n          \"primaryCategory\",\n        ],\n\n        offset: 0,\n        query: globalSearchQuery || searchQuery,\n      },\n    };\n\n    let req = JSON.stringify(requestData);\n\n    const headers = {\n      \"Content-Type\": \"application/json\",\n    };\n\n    try {\n      const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.CONTENT.SEARCH}?orgdetails=${appConfig.ContentPlayer.contentApiQueryParams.orgdetails}&licenseDetails=${appConfig.ContentPlayer.contentApiQueryParams.licenseDetails}`;\n\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: headers,\n        body: req,\n      });\n\n      if (!response.ok) {\n        throw new Error(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n\n      const responseData = await response.json();\n      console.log(\"data\", responseData);\n      setRecentlyAddedCourses(responseData?.result?.content || []);\n    } catch (error) {\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const loadContents = async (term) => {\n    // console.log(term);\n    navigate(\"/contentList/1\", { state: { domain: term.code } });\n  };\n\n  const handleSearch = async (domainquery) => {\n    console.log(domainquery);\n    navigate(\"/contentList/1\", { state: { domainquery } });\n  };\n  const handleDomainFilter = (query, domainName) => {\n    setDomain(query);\n    navigate(\"/contentList/1\", {\n      state: { domain: query, domainName: domainName },\n    });\n  };\n  // console.log(frameworkHardCodedData.result.framework.categories[0].terms);\n\n  const handleCardClick = (contentId, courseType) => {\n    if (courseType === \"Course\") {\n      // navigate(\"/joinCourse\", { state: { contentId } });\n      navigate(`/joinCourse/${contentId}`);\n    } else {\n      navigate(\"/player\");\n    }\n  };\n\n  const getPopularCourses = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    let requestData = {\n      request: {\n        filters: {\n          se_boards: [null],\n          primaryCategory: [\"Course\"],\n          visibility: [\"Default\", \"Parent\"],\n        },\n        limit: 100,\n        sort_by: {\n          lastPublishedOn: \"desc\",\n        },\n        fields: [\n          \"name\",\n          \"appIcon\",\n          \"mimeType\",\n          \"gradeLevel\",\n          \"identifier\",\n          \"medium\",\n          \"pkgVersion\",\n          \"board\",\n          \"subject\",\n          \"resourceType\",\n          \"primaryCategory\",\n          \"contentType\",\n          \"channel\",\n          \"organisation\",\n          \"trackable\",\n          \"primaryCategory\",\n          \"se_boards\",\n          \"se_gradeLevels\",\n          \"se_subjects\",\n          \"se_mediums\",\n        ],\n        facets: [\n          \"se_boards\",\n          \"se_gradeLevels\",\n          \"se_subjects\",\n          \"se_mediums\",\n          \"primaryCategory\",\n        ],\n        offset: 0,\n      },\n    };\n\n    let req = JSON.stringify(requestData);\n\n    const headers = {\n      \"Content-Type\": \"application/json\",\n    };\n\n    try {\n      const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.CONTENT.SEARCH}?orgdetails=${appConfig.ContentPlayer.contentApiQueryParams.orgdetails}&licenseDetails=${appConfig.ContentPlayer.contentApiQueryParams.licenseDetails}`;\n\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: headers,\n        body: req,\n      });\n\n      if (!response.ok) {\n        throw new Error(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n\n      const responseData = await response.json();\n      console.log(\"data\", responseData);\n      setPopularCourses(responseData?.result?.content || []);\n    } catch (error) {\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const onMobileSearch = () => {\n    navigate(\"/contentList/1\", {\n      state: { globalSearchQuery: searchQuery },\n    });\n  };\n\n  const handleInputChange = (event) => {\n    setSearchQuery(event.target.value);\n    console.log(\"value\", event.target.value);\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      onMobileSearch();\n    }\n  };\n\n  return (\n    <div>\n      <Header />\n      {toasterMessage && <ToasterCommon response={toasterMessage} />}\n\n      {/* Search Box */}\n      <Box\n        className=\"lg-hide d-flex header-bg w-40 mr-30\"\n        style={{ alignItems: \"center\", paddingLeft: \"23px\" }}\n      >\n        <Box className=\"h1-title px-10 pr-20\">{t(\"EXPLORE\")}</Box>\n        <TextField\n          placeholder={t(\"What do you want to learn today?  \")}\n          variant=\"outlined\"\n          size=\"small\"\n          fullWidth\n          value={searchQuery}\n          onChange={handleInputChange}\n          onKeyPress={handleKeyPress}\n          InputProps={{\n            endAdornment: (\n              <IconButton\n                type=\"submit\"\n                aria-label=\"search\"\n                onClick={onMobileSearch}\n              >\n                <SearchIcon />\n              </IconButton>\n            ),\n          }}\n        />\n      </Box>\n\n      {isMobile ? (\n        <Container maxWidth=\"xl\" role=\"main\" className=\"allContent\">\n          {error && <Alert severity=\"error\">{error}</Alert>}\n          <Box sx={{ paddingTop: \"30px\" }}>\n            <Grid\n              container\n              spacing={2}\n              style={{ margin: \"20px 0\", marginBottom: \"10px\" }}\n            >\n              {data &&\n                data.slice(0, 10).map((term) => (\n                  <Grid\n                    item\n                    xs={6}\n                    md={6}\n                    lg={2}\n                    style={{ marginBottom: \"10px\" }}\n                  >\n                    <Box\n                      onClick={() => loadContents(term)}\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Box\n                        style={{\n                          background: \"#fff\",\n                          padding: \"10px\",\n                          borderRadius: \"10px\",\n                          height: \"48px\",\n                          width: \"48px\",\n                          border: \"solid 1px #E1E1E1\",\n                        }}\n                      >\n                        <img\n                          src={require(`../../assets/domainImgs${term.image}`)}\n                          style={{ width: \"100%\" }}\n                        />\n                      </Box>\n                      <h5\n                        style={{\n                          fontSize: \"14px\",\n                          fontWeight: \"500\",\n                          paddingLeft: \"10px\",\n                          margin: \"0\",\n                        }}\n                      >\n                        {term.name}\n                      </h5>\n                    </Box>\n                  </Grid>\n                ))}\n            </Grid>\n          </Box>\n        </Container>\n      ) : domain ? (\n        <DomainCarousel onSelectDomain={handleDomainFilter} domains={domain} />\n      ) : (\n        <div></div>\n        // <NoResult />\n      )}\n\n      <Container\n        maxWidth=\"xl\"\n        className=\"xs-pb-20 allContent allContentList\"\n        role=\"main\"\n      >\n        {error && <Alert severity=\"error\">{error}</Alert>}\n\n        <Box textAlign=\"center\">\n          <p\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              paddingTop: \"25px\",\n            }}\n          >\n            <Box>\n              <VerifiedOutlinedIcon\n                className=\"text-grey\"\n                style={{ verticalAlign: \"top\" }}\n              />{\" \"}\n              <Box\n                className=\"h3-title\"\n                style={{\n                  display: \"inline-block\",\n                }}\n              >\n                {\"Popular Courses\"}{\" \"}\n              </Box>{\" \"}\n            </Box>\n          </p>\n          {isMobile ? (\n            <Box style={{ paddingTop: \"0\" }}>\n              {isLoading ? (\n                <p>{t(\"LOADING\")}</p>\n              ) : error ? (\n                <Alert severity=\"error\">{error}</Alert>\n              ) : popularCourses.length > 0 ? (\n                <div>\n                  <Grid\n                    container\n                    spacing={2}\n                    style={{ margin: \"20px 0\", marginBottom: \"10px\" }}\n                  >\n                    {popularCourses.slice(0, 10).map((items, index) => (\n                      <Grid\n                        item\n                        xs={6}\n                        sm={isMobile ? 6 : 12} // Show 2 courses per line on mobile view\n                        md={6}\n                        lg={2}\n                        key={items.identifier}\n                        style={{ marginBottom: \"10px\" }}\n                      >\n                        <BoxCard\n                          items={items}\n                          onClick={() =>\n                            handleCardClick(items.identifier, items.contentType)\n                          }\n                        />\n                      </Grid>\n                    ))}\n                  </Grid>\n                </div>\n              ) : (\n                <NoResult />\n              )}\n            </Box>\n          ) : (\n            <Box sx={{ paddingTop: \"0\" }}>\n              {isLoading ? (\n                <p>{t(\"LOADING\")}</p>\n              ) : error ? (\n                <Alert severity=\"error\">{error}</Alert>\n              ) : popularCourses.length > 0 ? (\n                <div>\n                  <Grid container spacing={2}>\n                    {popularCourses.slice(0, 10).map((items) => (\n                      <Grid\n                        item\n                        xs={6}\n                        md={6}\n                        lg={2}\n                        key={items.identifier}\n                        style={{ marginBottom: \"10px\" }}\n                      >\n                        <BoxCard\n                          items={items}\n                          onClick={() =>\n                            handleCardClick(items.identifier, items.contentType)\n                          }\n                        />\n                      </Grid>\n                    ))}\n                  </Grid>\n                </div>\n              ) : (\n                <NoResult />\n              )}\n            </Box>\n          )}\n        </Box>\n      </Container>\n\n      <Container maxWidth=\"xl\" className=\"allContent xs-mb-75 \" role=\"main\">\n        {error && <Alert severity=\"error\">{error}</Alert>}\n\n        <Box textAlign=\"center\">\n          <p\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              paddingTop: \"25px\",\n            }}\n          >\n            <Box>\n              <BookmarkAddedOutlinedIcon\n                className=\"text-grey\"\n                style={{ verticalAlign: \"top\" }}\n              />{\" \"}\n              <Box\n                className=\"h3-title\"\n                style={{\n                  display: \"inline-block\",\n                }}\n              >\n                {\"Recently Added\"}{\" \"}\n              </Box>{\" \"}\n            </Box>\n          </p>\n          {isMobile ? (\n            <Box sx={{ paddingTop: \"0\" }}>\n              {isLoading ? (\n                <p>{t(\"LOADING\")}</p>\n              ) : error ? (\n                <Alert severity=\"error\">{error}</Alert>\n              ) : recentlyAddedCourses.length > 0 ? (\n                <div>\n                  <Grid container spacing={2}>\n                    {recentlyAddedCourses.slice(0, 10).map((items, index) => (\n                      <Grid\n                        item\n                        xs={6}\n                        sm={isMobile ? 6 : 12} // Show 2 courses per line on mobile view\n                        md={6}\n                        lg={2}\n                        key={items.identifier}\n                        style={{ marginBottom: \"10px\" }}\n                      >\n                        <BoxCard\n                          items={items}\n                          onClick={() =>\n                            handleCardClick(items.identifier, items.contentType)\n                          }\n                        />\n                      </Grid>\n                    ))}\n                  </Grid>\n                </div>\n              ) : (\n                <NoResult />\n              )}\n            </Box>\n          ) : (\n            <Box sx={{ paddingTop: \"0\" }}>\n              {isLoading ? (\n                <p>{t(\"LOADING\")}</p>\n              ) : error ? (\n                <Alert severity=\"error\">{error}</Alert>\n              ) : recentlyAddedCourses.length > 0 ? (\n                <div>\n                  <Grid container spacing={2} style={{ marginBottom: \"10px\" }}>\n                    {recentlyAddedCourses.slice(0, 10).map((items) => (\n                      <Grid\n                        item\n                        xs={6}\n                        md={6}\n                        lg={2}\n                        key={items.identifier}\n                        style={{ marginBottom: \"10px\" }}\n                      >\n                        <BoxCard\n                          items={items}\n                          onClick={() =>\n                            handleCardClick(items.identifier, items.contentType)\n                          }\n                        />\n                      </Grid>\n                    ))}\n                  </Grid>\n                </div>\n              ) : (\n                <NoResult />\n              )}\n            </Box>\n          )}\n        </Box>\n      </Container>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default DomainList;\n","import TextField from \"@mui/material/TextField\";\nimport image from \"../../assets/bg.png\";\nimport Link from \"@mui/material/Link\";\nimport { useTranslation } from \"react-i18next\";\nimport { SITE_KEY } from \"./Keys\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useFormik } from \"formik\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport styled from \"styled-components\";\nimport * as Yup from \"yup\";\n\nimport {\n  Box,\n  Button,\n  Container,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Typography,\n} from \"@mui/material\";\n\nconst axios = require(\"axios\");\nimport { Navigate } from \"react-router-dom\";\nimport { useStore } from \"configs/zustandStore\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport { t } from \"i18next\";\nconst urlConfig = require(\"../../configs/urlConfig.json\");\nimport ToasterCommon from \"../ToasterCommon\";\n\nconst DELAY = 1500;\nconst MAX_CHARS = 500;\n\nconst CssTextField = styled(TextField)({\n  \"& label.Mui-focused\": {\n    color: \"#A0AAB4\",\n  },\n  \"& .MuiInput-underline:after\": {\n    borderBottomColor: \"#B2BAC2\",\n  },\n  \"& .MuiOutlinedInput-root\": {\n    \"& fieldset\": {\n      borderColor: \"#E0E3E7\",\n      border: \"1px solid #004367\",\n      borderRadius: \"12px\",\n    },\n    \"&:hover fieldset\": {\n      borderColor: \"#B2BAC2\",\n    },\n\n    \"&.Mui-focused fieldset\": {\n      borderColor: \"#6F7E8C\",\n    },\n  },\n});\n\nconst Registration = () => {\n  const [captchaResponse, setCaptchaResponse] = useState();\n  const [emailExist, setEmailExist] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [load, setLoad] = useState(false);\n  const [goToOtp, setGoToOtp] = useState(false);\n  const [showPassword, setShowPassword] = React.useState(false);\n  const setData = useStore((state) => state.setData);\n  const designations = require(\"../../configs/designations.json\");\n  const [bio, setBio] = useState(\"\");\n  const [toasterOpen, setToasterOpen] = useState(false);\n  const [toasterMessage, setToasterMessage] = useState(\"\");\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().min(3).max(25).required(\"Please enter your name\"),\n      email: Yup.string()\n        .email(\"Invalid email format\")\n        .required(\"Please enter your email\"),\n      password: Yup.string()\n        .min(8, \"Your password must contain a minimum of 8 characters\")\n        .required(\"Password is required\")\n        .matches(/[0-9]/, \"It must include numbers\")\n        .matches(/[A-Z]/, \"It must include capital letter\")\n        .matches(/[a-z]/, \"It must include small letter\")\n        .matches(/[!@#$%^&*(,.{}/?<>)]/, \"It must include special character\"),\n      confirmPassword: Yup.string()\n        .oneOf(\n          [Yup.ref(\"password\")],\n          \"Confirm Password must match the New Password\"\n        )\n        .required(\"Confirm Password is required\"),\n    }),\n    onSubmit: (values) => {\n      console.log(\"on submit\", values);\n      if (!captchaResponse) {\n        setError(\"Please complete the CAPTCHA\");\n        return;\n      }\n      handleSubmit();\n    },\n  });\n  const [designationsList, setDesignationsList] = useState([]);\n\n  const showErrorMessage = (msg) => {\n    setToasterMessage(msg);\n    setTimeout(() => {\n      setToasterMessage(\"\");\n    }, 2000);\n    setToasterOpen(true);\n  };\n  useEffect(() => {\n    setTimeout(() => {\n      setLoad(true);\n    }, DELAY);\n    setDesignationsList(designations);\n  }, []);\n  const handleSubmit = async () => {\n    const isEmailExist = async () => {\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.USER.EMAIL_EXIST}${formik.values.email}?captchaResponse=${captchaResponse}`;\n\n        const response = await fetch(url, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        if (!response.ok) {\n          showErrorMessage(t(\"EMAIL_ALREADY_EXIST\"));\n          throw new Error(t(\"EMAIL_ALREADY_EXIST\"));\n        }\n\n        const data = await response.json();\n        console.log(\"response:\", data.result);\n        if (data.result.exists) {\n          setEmailExist(true);\n        } else {\n          generateOtp(formik.values.email);\n        }\n      } catch (error) {\n        showErrorMessage(t(\"EMAIL_ALREADY_EXIST\"));\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    isEmailExist();\n\n    const generateOtp = async (email) => {\n      setIsLoading(true);\n      setError(null);\n\n      const requestBody = {\n        request: {\n          key: email,\n          type: \"email\",\n          templateId: \"wardLoginOTP\",\n        },\n      };\n\n      try {\n        const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.OTP.ANONYMOUS.GENERATE}?captchaResponse=${captchaResponse}`;\n\n        const response = await axios.post(url, requestBody, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        if (response.status !== 200) {\n          showErrorMessage(t(\"FAILED_TO_GENERATE_OTP\"));\n          throw new Error(t(\"FAILED_TO_GENERATE_OTP\"));\n        }\n\n        const data = response.data;\n        console.log(\"OTP response:\", data.result);\n        // localStorage.setItem(\"registeringUser\", JSON.stringify(formik.values));\n        const tncConfig = await getTermsAndCondition();\n        const dataToSend = {\n          captchaResponse: captchaResponse,\n          userData: formik.values,\n          tncConfig: tncConfig,\n        };\n        setData(dataToSend);\n\n        setGoToOtp(true);\n      } catch (error) {\n        showErrorMessage(t(\"FAILED_TO_GENERATE_OTP\"));\n\n        setIsLoading(false);\n      }\n    };\n  };\n  if (goToOtp) {\n    return <Navigate to={`/otp${window.location.search}`} />;\n  }\n\n  const onChange = (value) => {\n    setCaptchaResponse(value);\n    console.log(\"value\", value);\n  };\n  const getTermsAndCondition = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.SYSTEM_SETTING.TNC_CONFIG}`;\n\n      const response = await fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n        throw new Error(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n      const data = await response.json();\n      console.log(\"response:\", data.result.response.value);\n      return data.result.response.value;\n    } catch (error) {\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleChangeDesignation = (event) => {\n    const { value } = event.target;\n    formik.setFieldValue(\"designation\", value);\n    if (value === \"Other\") {\n      formik.setFieldValue(\"otherDesignation\", \"\");\n    }\n  };\n  const handleChange = (event) => {\n    const { value } = event.target;\n    if (value.length <= MAX_CHARS) {\n      formik.setFieldValue(\"bio\", value);\n    }\n  };\n\n  return (\n    <>\n      {toasterMessage && <ToasterCommon response={toasterMessage} />}\n      <Container\n        maxWidth=\"sm\"\n        className=\"register\"\n        style={{\n          textAlign: \"center\",\n          backgroundPosition: \"2px 426px\",\n          height: \"100vh\",\n          // backgroundImage: `url(${image})`,\n          // backgroundRepeat: \"no-repeat\",\n          // backgroundSize: \"contain\",\n        }}\n      >\n        <Wrapper>\n          <Box my={4}>\n            <img src={require(\"../../assets/logo.png\")} />\n          </Box>\n          <Typography\n            style={{\n              fontWeight: \"600\",\n              fontSize: \"16px\",\n              marginBottom: \"20px\",\n            }}\n          >\n            {t(\"REGISTER\")}\n          </Typography>\n\n          <Box py={1}>\n            <CssTextField\n              id=\"name\"\n              name=\"name\"\n              label={\n                <span>\n                  {t(\"NAME\")} <span className=\"required\">*</span>\n                </span>\n              }\n              variant=\"outlined\"\n              size=\"small\"\n              value={formik.values.name}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n            />\n            {formik.touched.name && formik.errors.name && (\n              <p className=\"form-error\">{formik.errors.name}</p>\n            )}\n          </Box>\n          <Box py={1}>\n            <FormControl fullWidth style={{ marginTop: \"10px\" }}>\n              <InputLabel id=\"demo-simple-select-label\" className=\"year-select\">\n                {\" \"}\n                {t(\"YEAR_OF_BIRTH\")} <span className=\"required\">*</span>\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                name=\"age\"\n                value={formik.values.age}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n              >\n                <option value=\"\">Select Birth Year</option>\n                {[...Array(100)].map((_, index) => {\n                  const year = new Date().getFullYear() - index;\n                  return (\n                    <MenuItem key={year} value={year}>\n                      {year}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n          </Box>\n          <Box py={1}>\n            <FormControl fullWidth style={{ marginTop: \"10px\" }}>\n              <InputLabel id=\"designation-label\">\n                {\" \"}\n                {t(\"DESIGNATION\")} <span className=\"required\">*</span>\n              </InputLabel>\n              <Select\n                labelId=\"designation-label\"\n                id=\"designation\"\n                value={formik.values.designation}\n                onChange={handleChangeDesignation}\n                onBlur={formik.handleBlur}\n              >\n                {designationsList.map((desig, index) => (\n                  <MenuItem key={index} value={desig}>\n                    {desig}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Box>\n          {formik.values.designation === \"Other\" && (\n            <Box py={1}>\n              <CssTextField\n                id=\"otherDesignation\"\n                name=\"otherDesignation\"\n                label={\n                  <span>\n                    {t(\"OTHER_DESIGNATION\")} <span className=\"required\">*</span>\n                  </span>\n                }\n                variant=\"outlined\"\n                size=\"small\"\n                value={formik.values.otherDesignation}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n              />\n              {formik.touched.otherDesignation &&\n                formik.errors.otherDesignation && (\n                  <p className=\"form-error\">{formik.errors.otherDesignation}</p>\n                )}\n            </Box>\n          )}\n          <Box py={2}>\n            <TextField\n              id=\"bio\"\n              name=\"bio\"\n              label={<span>{t(\"BIO\")}</span>}\n              multiline\n              rows={1}\n              className=\"bio\"\n              value={formik.values.bio}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              inputProps={{ maxLength: MAX_CHARS }}\n            />\n            <Typography\n              variant=\"caption\"\n              color={\n                formik.values.bio?.length > MAX_CHARS\n                  ? \"error\"\n                  : \"textSecondary\"\n              }\n            >\n              {formik.values.bio ? formik.values.bio.length : 0}/{MAX_CHARS}\n            </Typography>\n          </Box>\n          <Box py={2}>\n            <CssTextField\n              id=\"email\"\n              name=\"email\"\n              label={\n                <span>\n                  {t(\"EMAILID\")} <span className=\"required\">*</span>\n                </span>\n              }\n              variant=\"outlined\"\n              autoComplete=\"Email Id\"\n              size=\"small\"\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n            />\n            {formik.touched.email && formik.errors.email && (\n              <p className=\"form-error\">{formik.errors.email}</p>\n            )}\n            {emailExist && <p className=\"form-error\">Email already exists</p>}\n          </Box>\n          <Box py={1}>\n            <CssTextField\n              id=\"password\"\n              name=\"password\"\n              style={{ background: \"#fff\" }}\n              label={\n                <span>\n                  {t(\"NEW_PASSWORD\")} <span className=\"required\">*</span>\n                </span>\n              }\n              type={showPassword ? \"text\" : \"password\"}\n              autoComplete=\"current-password\"\n              size=\"small\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={() => setShowPassword(!showPassword)}\n                      onMouseDown={(e) => e.preventDefault()}\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n            {formik.touched.password && formik.errors.password && (\n              <p className=\"form-error\">{formik.errors.password}</p>\n            )}\n          </Box>\n          <Box py={2}>\n            <CssTextField\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              label={\n                <span>\n                  {t(\"CONFIRM_NEW_PASSWORD\")}{\" \"}\n                  <span className=\"required\">*</span>\n                </span>\n              }\n              type=\"password\"\n              autoComplete=\"current-password\"\n              size=\"small\"\n              value={formik.values.confirmPassword}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n            />\n            {formik.touched.confirmPassword &&\n              formik.errors.confirmPassword && (\n                <p className=\"form-error\">{formik.errors.confirmPassword}</p>\n              )}\n          </Box>\n\n          <Box pt={4}>\n            <Button\n              style={{\n                background:\n                  formik.isValid && captchaResponse ? \"#004367\" : \"#a9a9a9\",\n                borderRadius: \"10px\",\n                color: \"#fff\",\n                padding: \"10px 71px\",\n                fontWeight: \"600\",\n                fontSize: \"14px\",\n              }}\n              onClick={formik.handleSubmit}\n              disabled={!formik.isValid || !captchaResponse}\n            >\n              {isLoading ? \"Loading...\" : \"Continue\"}\n            </Button>\n          </Box>\n          <Box py={1}>\n            <Typography\n              variant=\"h1\"\n              style={{\n                fontWeight: \"400\",\n                fontSize: \"12px\",\n                marginTop: \"10px\",\n              }}\n            >\n              {t(\"ALREADY_HAVE_AN_ACCOUNT\")} <Link href=\"/all\">Log in</Link>\n            </Typography>\n          </Box>\n          <Box py={1}>{error && <p className=\"form-error\">{error}</p>}</Box>\n          <Box py={1}>\n            <ReCAPTCHA\n              style={{ display: \"inline-block\" }}\n              theme=\"dark\"\n              sitekey={SITE_KEY}\n              onChange={onChange}\n            />\n          </Box>\n        </Wrapper>\n      </Container>\n    </>\n  );\n};\nconst Wrapper = styled.section`\n  .container {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #efedee;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n  }\n\n  .modal-right {\n    flex: 1;\n    display: flex;\n    justify-content: flex-end; /* Align to the right */\n    align-items: center;\n    padding: 20px;\n  }\n\n  .modal-left {\n    padding: 60px 30px 20px;\n    background: #fff;\n    flex: 1.5;\n    opacity: 1;\n  }\n\n  .error {\n    border-color: #b22b27 !important;\n  }\n\n  .invalid {\n    border: 1px solid #ff0000 !important;\n  }\n\n  .modal {\n    width: 100%;\n    background: rgba(51, 51, 51, 0.5);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    transition: 0.4s;\n  }\n\n  .modal-container {\n    display: flex;\n    max-width: 60vw;\n    width: 100%;\n    border-radius: 10px;\n    overflow: hidden;\n    position: absolute;\n    background: #fff;\n  }\n\n  .modal-title {\n    margin: 0;\n    font-weight: 400;\n    color: #1e1e1d;\n    text-align: center;\n  }\n\n  .required {\n    color: red;\n    margin-left: 2px;\n  }\n  .form-error {\n    color: red;\n  }\n  .input-block {\n    display: flex;\n    flex-direction: column;\n    padding: 10px;\n    border: 1px solid #8692ed;\n    border-radius: 12px;\n    margin-bottom: 20px;\n    transition: 0.3s;\n    width: 100%;\n    position: relative;\n  }\n\n  .input-block input,\n  .input-block select {\n    outline: 0;\n    border: 0;\n    padding: 4px 0 0;\n    font-size: 14px;\n  }\n\n  .toggle-password {\n    position: absolute;\n    top: 50%;\n    right: 10px;\n    transform: translateY(-50%);\n    cursor: pointer;\n  }\n\n  .toggle-password svg {\n    width: 20px;\n    height: 20px;\n    color: #ccc;\n  }\n\n  .input-button {\n    padding: 1.2rem 6.2rem;\n    outline: none;\n    text-transform: uppercase;\n    border: 0;\n    color: #fff;\n    border-radius: 12px;\n    background: #8692ed;\n    transition: 0.3s;\n    cursor: pointer;\n    font-family: \"Nunito\", sans-serif;\n  }\n\n  .input-button:hover {\n    background: #55311c;\n  }\n\n  .sign-up {\n    margin: 30px 0 0;\n    font-size: 14px;\n    text-align: center;\n  }\n\n  .sign-up a {\n    color: #8692ed;\n  }\n\n  @media (max-width: 768px) {\n    .modal-container {\n      max-width: 90vw;\n    }\n  }\n\n  .disabled-opacity {\n    opacity: 0.2 !important;\n  }\n`;\n\nexport default Registration;\n","export const SITE_KEY = \"6Ldk3O8UAAAAAC2tm0qkPGbJC7YJVpVzMeIuhumb\";\n","import axios from 'axios'\n// import {  } from '@shiksha/common-lib'\nimport { post, get, update as coreUpdate } from './RestClient.ts'\n//  Get all content\nexport const getAllContents = async (url, filters = {}, header = {}) => {\n  const result = await post(url, filters, header)\n  if (result) {\n    return result\n  } else {\n    return []\n  }\n}\n// Get  one content\n\nexport const getOne = async (url, header = {}) => {\n  const result = await get(url, {\n    header\n  })\n  if (result) {\n    return result\n  } else {\n    return []\n  }\n}\n\n// Update content\nexport const update = async (data = {}, headers = {}) => {\n  const result = await coreUpdate(url, data, {\n    headers\n  })\n  if (result) {\n    return result\n  } else {\n    return {}\n  }\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport SwipeableDrawer from \"@mui/material/SwipeableDrawer\";\nimport Button from \"@mui/material/Button\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport TextField from \"@mui/material/TextField\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport IconButton from \"@mui/material/IconButton\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport SearchOutlinedIcon from \"@mui/icons-material/SearchOutlined\";\n\nconst DrawerFilter = () => {\n  const [state, setState] = React.useState({\n    left: false,\n  });\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 767);\n  // const handleResize = () => {\n  //   setIsMobile(window.innerWidth <= 767);\n  // };\n  // useEffect(() => {\n  //   const handleScroll = () => {\n  //     if (window.scrollY > 0) {\n  //       setScrolled(true);\n  //     } else {\n  //       setScrolled(false);\n  //     }\n  //   };\n\n  //   window.addEventListener('scroll', handleScroll);\n  //   return () => {\n  //     window.removeEventListener('scroll', handleScroll);\n  //   };\n  // }, []);\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event &&\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n  const list = (anchor) => (\n    <Box\n      className=\"header-bg-blue p-10 filter-bx\"\n      sx={{ width: anchor === \"top\" || anchor === \"bottom\" ? \"auto\" : 250 }}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <Box className=\"d-flex jc-bw\">\n        <Box className=\"filter-title\">Filter By:</Box>\n        <Button type=\"button\" className=\"viewAll\">\n          Clear all\n        </Button>\n      </Box>\n      <Box className=\"filter-text mt-15\">Content Type</Box>\n      <List>\n        <ListItem className=\"filter-ul-text\">\n          <FormControlLabel control={<Checkbox />} label=\"Courses\" />\n        </ListItem>\n        <ListItem className=\"filter-ul-text\">\n          <FormControlLabel control={<Checkbox />} label=\"Manual and SOPs\" />\n        </ListItem>\n        <ListItem className=\"filter-ul-text\">\n          <FormControlLabel control={<Checkbox />} label=\"Courses\" />\n        </ListItem>\n        <ListItem className=\"filter-ul-text\">\n          <FormControlLabel control={<Checkbox />} label=\"Manual and SOPs\" />\n        </ListItem>\n      </List>\n      <Box className=\"filter-text mt-15\">Sub-domains</Box>\n      <FormControl sx={{ m: 1, width: \"25ch\" }} variant=\"outlined\">\n        <InputLabel htmlFor=\"outlined-adornment-password\">\n          Search Sub-domain\n        </InputLabel>\n        <OutlinedInput\n          id=\"outlined-adornment-password\"\n          type=\"text\"\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton aria-label=\"toggle password visibility\">\n                {<SearchOutlinedIcon />}\n              </IconButton>\n            </InputAdornment>\n          }\n          label=\"Search Sub-domain\"\n        />\n      </FormControl>\n      {/* <Autocomplete\n      multiple\n      disablePortal\n      id=\"combo-box-demo\"\n      sx={{ width: \"100%\", background: \"#fff\" }}\n      renderInput={(params) => <TextField  label=\"search\" />}\n    />             */}\n      <List>\n        <ListItem className=\"filter-ul-text\">\n          <FormControlLabel\n            control={<Checkbox />}\n            label=\"Energy & green building\"\n          />\n        </ListItem>\n        <ListItem className=\"filter-ul-text\">\n          <FormControlLabel\n            control={<Checkbox />}\n            label=\"Disaster Mangement and Resilience\"\n          />\n        </ListItem>\n        <ListItem className=\"filter-ul-text\">\n          <FormControlLabel\n            control={<Checkbox />}\n            label=\"Energy & green building\"\n          />\n        </ListItem>\n        <ListItem className=\"filter-ul-text\">\n          <FormControlLabel\n            control={<Checkbox />}\n            label=\"Disaster Mangement and Resilience\"\n          />\n        </ListItem>\n        <ListItem className=\"filter-ul-text\">\n          <FormControlLabel\n            control={<Checkbox />}\n            label=\"Energy & green building\"\n          />\n        </ListItem>\n        <ListItem className=\"filter-ul-text\">\n          <FormControlLabel\n            control={<Checkbox />}\n            label=\"Disaster Mangement and Resilience\"\n          />\n        </ListItem>\n        <ListItem className=\"filter-ul-text\">\n          <FormControlLabel\n            control={<Checkbox />}\n            label=\"Energy & green building\"\n          />\n        </ListItem>\n        <ListItem className=\"filter-ul-text\">\n          <FormControlLabel\n            control={<Checkbox />}\n            label=\"Disaster Mangement and Resilience\"\n          />\n        </ListItem>\n        <ListItem className=\"filter-ul-text\">\n          <FormControlLabel\n            control={<Checkbox />}\n            label=\"Energy & green building\"\n          />\n        </ListItem>\n        <ListItem className=\"filter-ul-text\">\n          <FormControlLabel\n            control={<Checkbox />}\n            label=\"Disaster Mangement and Resilience\"\n          />\n        </ListItem>\n        <ListItem className=\"filter-ul-text\">\n          <FormControlLabel\n            control={<Checkbox />}\n            label=\"Energy & green building\"\n          />\n        </ListItem>\n        <ListItem className=\"filter-ul-text\">\n          <FormControlLabel\n            control={<Checkbox />}\n            label=\"Disaster Mangement and Resilience\"\n          />\n        </ListItem>\n        <ListItem className=\"filter-ul-text\">\n          <FormControlLabel\n            control={<Checkbox />}\n            label=\"Energy & green building\"\n          />\n        </ListItem>\n        <ListItem className=\"filter-ul-text\">\n          <FormControlLabel\n            control={<Checkbox />}\n            label=\"Disaster Mangement and Resilience\"\n          />\n        </ListItem>\n        <ListItem className=\"filter-ul-text\">\n          <FormControlLabel\n            control={<Checkbox />}\n            label=\"Energy & green building\"\n          />\n        </ListItem>\n        <ListItem className=\"filter-ul-text\">\n          <FormControlLabel\n            control={<Checkbox />}\n            label=\"Disaster Mangement and Resilience\"\n          />\n        </ListItem>\n        <ListItem className=\"filter-ul-text\">\n          <FormControlLabel\n            control={<Checkbox />}\n            label=\"Energy & green building\"\n          />\n        </ListItem>\n        <ListItem className=\"filter-ul-text\">\n          <FormControlLabel\n            control={<Checkbox />}\n            label=\"Disaster Mangement and Resilience\"\n          />\n        </ListItem>\n        <ListItem className=\"filter-ul-text\">\n          <FormControlLabel\n            control={<Checkbox />}\n            label=\"Energy & green building\"\n          />\n        </ListItem>\n        <ListItem className=\"filter-ul-text\">\n          <FormControlLabel\n            control={<Checkbox />}\n            label=\"Disaster Mangement and Resilience\"\n          />\n        </ListItem>\n      </List>\n    </Box>\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Box>\n          <div>\n            {[\"left\"].map((anchor) => (\n              <React.Fragment key={anchor}>\n                <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\n                <SwipeableDrawer\n                  anchor={anchor}\n                  open={state[anchor]}\n                  onClose={toggleDrawer(anchor, false)}\n                  onOpen={toggleDrawer(anchor, true)}\n                >\n                  {list(anchor)}\n                </SwipeableDrawer>\n              </React.Fragment>\n            ))}\n          </div>\n        </Box>\n      ) : (\n        <Box className=\"header-bg-blue p-10 pl-18 filter-bx\">\n          <Box className=\"d-flex jc-bw\" style={{ paddingTop: \"10px\" }}>\n            <Box className=\"filter-title\">Filter By:</Box>\n            <Button type=\"button\" className=\"viewAll\">\n              Clear all\n            </Button>\n          </Box>\n          <Box className=\"filter-text mt-15 mb-15\">Content Type</Box>\n          <List>\n            <ListItem className=\"filter-ul-text\">\n              <FormControlLabel control={<Checkbox />} label=\"Courses\" />\n            </ListItem>\n            <ListItem className=\"filter-ul-text\">\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Manual and SOPs\"\n              />\n            </ListItem>\n            <ListItem className=\"filter-ul-text\">\n              <FormControlLabel control={<Checkbox />} label=\"Courses\" />\n            </ListItem>\n            <ListItem className=\"filter-ul-text\">\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Manual and SOPs\"\n              />\n            </ListItem>\n          </List>\n          <Box className=\"filter-text mt-15 mb-20\">Sub-domains</Box>\n          <FormControl>\n            <InputLabel htmlFor=\"outlined-adornment-password\">\n              Search Sub-domain\n            </InputLabel>\n            <OutlinedInput\n              id=\"outlined-adornment-password\"\n              type=\"text\"\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton aria-label=\"toggle password visibility\">\n                    {<SearchOutlinedIcon />}\n                  </IconButton>\n                </InputAdornment>\n              }\n              label=\"Search Sub-domain\"\n            />\n          </FormControl>\n          {/* <Autocomplete\n      multiple\n      disablePortal\n      id=\"combo-box-demo\"\n      sx={{ width: \"100%\", background: \"#fff\" }}\n      renderInput={(params) => <TextField  label=\"search\" />}\n    />             */}\n          <List>\n            <ListItem className=\"filter-ul-text\">\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Energy & green building\"\n              />\n            </ListItem>\n            <ListItem className=\"filter-ul-text\">\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Disaster Mangement and Resilience\"\n              />\n            </ListItem>\n            <ListItem className=\"filter-ul-text\">\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Environment and Climate\"\n              />\n            </ListItem>\n            <ListItem className=\"filter-ul-text\">\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Water Management\"\n              />\n            </ListItem>\n            <ListItem className=\"filter-ul-text\">\n              <FormControlLabel control={<Checkbox />} label=\"Skills\" />\n            </ListItem>\n            <ListItem className=\"filter-ul-text\">\n              <FormControlLabel control={<Checkbox />} label=\"Accessibility\" />\n            </ListItem>\n            <ListItem className=\"filter-ul-text\">\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"General Administration\"\n              />\n            </ListItem>\n            <ListItem className=\"filter-ul-text\">\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Safety and Security\"\n              />\n            </ListItem>\n          </List>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default DrawerFilter;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport BoxCard from \"components/Card\";\nimport Box from \"@mui/material/Box\";\nimport Search from \"components/search\";\nimport SearchBox from \"components/search\";\nimport Filter from \"components/filter\";\nimport contentData from \"../../assets/contentSerach.json\";\nimport RandomImage from \"../../assets/cardRandomImgs.json\";\nimport Grid from \"@mui/material/Grid\";\nimport Footer from \"components/Footer\";\nimport Header from \"components/header\";\nimport Container from \"@mui/material/Container\";\nimport * as contentService from \"../../services/contentService\";\nimport queryString from \"query-string\";\nimport Pagination from \"@mui/material/Pagination\";\nimport ArrowBackOutlinedIcon from \"@mui/icons-material/ArrowBackOutlined\";\nimport NoResult from \"pages/content/noResultFound\";\nimport { t } from \"i18next\";\nimport Alert from \"@mui/material/Alert\";\nimport { useTranslation } from \"react-i18next\";\nimport appConfig from \"../../configs/appConfig.json\";\nconst urlConfig = require(\"../../configs/urlConfig.json\");\nimport ToasterCommon from \"../ToasterCommon\";\nimport Carousel from \"react-multi-carousel\";\nimport DomainCarousel from \"components/domainCarousel\";\nimport domainWithImage from \"../../assets/domainImgForm.json\";\nimport DrawerFilter from \"components/drawerFilter\";\nimport TextField from \"@mui/material/TextField\";\nimport IconButton from \"@mui/material/IconButton\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nconst responsive = {\n  superLargeDesktop: {\n    // the naming can be any, depends on you.\n    breakpoint: { max: 4000, min: 3000 },\n    items: 5,\n  },\n  desktop: {\n    breakpoint: { max: 3000, min: 1024 },\n    items: 8,\n  },\n  tablet: {\n    breakpoint: { max: 1024, min: 464 },\n    items: 2,\n  },\n  mobile: {\n    breakpoint: { max: 464, min: 0 },\n    items: 1,\n  },\n};\n\nconst ContentList = (props) => {\n  const [search, setSearch] = useState(true);\n  const location = useLocation();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [data, setData] = useState([]);\n  const [filters, setFilters] = useState({});\n  const [domainfilter, setDomainfilter] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [gradeLevels, setGradeLevels] = useState([]);\n  const [category, setCategory] = useState([]);\n  const navigate = useNavigate();\n  // const { domain } = location.state || {};\n  const [domain, setDomain] = useState(location.state?.domain || undefined);\n  const [domainName, setDomainName] = useState(\n    location.state?.domainName || undefined\n  );\n  const [domainList, setDomainList] = useState([]);\n  const { domainquery } = location.state || {};\n  const [totalPages, setTotalPages] = useState(1);\n  const [currentPage, setCurrentPage] = useState(1);\n  const { t } = useTranslation();\n  const [toasterOpen, setToasterOpen] = useState(false);\n  const [toasterMessage, setToasterMessage] = useState(\"\");\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 767);\n  const [channelData, setChannelData] = React.useState(true);\n  const [globalSearchQuery, setGlobalSearchQuery] = useState(\n    location.state?.globalSearchQuery || undefined\n  );\n  const [searchQuery, setSearchQuery] = useState(globalSearchQuery || \"\");\n\n  const showErrorMessage = (msg) => {\n    setToasterMessage(msg);\n    setTimeout(() => {\n      setToasterMessage(\"\");\n    }, 2000);\n    setToasterOpen(true);\n  };\n\n  useEffect(() => {\n    fetchData();\n    fetchGradeLevels();\n    Fetchdomain();\n    const random = getRandomValue();\n  }, [filters, search, currentPage, domainfilter]);\n\n  useEffect(() => {\n    fetchData();\n  }, [domain]);\n\n  useEffect(() => {\n    fetchData();\n  }, [globalSearchQuery]);\n\n  useEffect(() => {\n    if (\n      (location.state?.globalSearchQuery &&\n        location.state?.globalSearchQuery !== globalSearchQuery) ||\n      location.state?.globalSearchQuery === \"\"\n    ) {\n      setGlobalSearchQuery(location.state?.globalSearchQuery);\n    }\n  }, [location.state?.globalSearchQuery, globalSearchQuery]);\n\n  const handleFilterChange = (selectedOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    setFilters({ ...filters, se_gradeleverl: selectedValues });\n  };\n\n  const handlefilter = (selectedOption) => {\n    const selectedValue = selectedOption.map((option) => option.value);\n    setDomainfilter({ ...domainfilter, se_board: selectedValue });\n  };\n\n  const fetchData = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    let requestData = {\n      request: {\n        filters: {\n          status: [\"Live\"],\n          contentType: [\n            \"Collection\",\n            \"TextBook\",\n            \"Course\",\n            \"LessonPlan\",\n            \"Resource\",\n            \"SelfAssess\",\n            \"PracticeResource\",\n            \"LearningOutcomeDefinition\",\n            \"ExplanationResource\",\n            \"ExperientialResource\",\n            \"eTextBook\",\n            \"TVLesson\",\n          ],\n          se_boards: domainfilter.se_board || [domain],\n          se_gradeLevels: filters.se_gradeleverl,\n        },\n        limit: 20,\n        query: search.query || globalSearchQuery,\n        offset: 20 * (currentPage - 1),\n        sort_by: {\n          lastUpdatedOn: \"desc\",\n        },\n      },\n    };\n\n    let req = JSON.stringify(requestData);\n\n    const headers = {\n      \"Content-Type\": \"application/json\",\n    };\n\n    try {\n      const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.CONTENT.SEARCH}?orgdetails=${appConfig.ContentPlayer.contentApiQueryParams.orgdetails}&licenseDetails=${appConfig.ContentPlayer.contentApiQueryParams.licenseDetails}`;\n\n      const response = await contentService.getAllContents(url, req, headers);\n\n      if (response.data.result.content && response.data.result.count <= 20) {\n        setTotalPages(1);\n      } else if (response.data.result.count > 20) {\n        setTotalPages(Math.floor(response.data.result.count / 20));\n      }\n\n      setData(response.data.result);\n    } catch (error) {\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getRandomValue = () => {\n    const randomIndex = RandomImage;\n    return randomIndex;\n  };\n\n  const handleChange = (event, value) => {\n    if (value !== pageNumber) {\n      setPageNumber(value);\n      setCurrentPage(value);\n      setData({});\n      navigate(`/contentList/${value}`, { state: { domain: domain } });\n      // fetchData();\n    }\n  };\n\n  const handleGoBack = () => {\n    navigate(-1); // Navigate back in history\n  };\n\n  const fetchGradeLevels = async () => {\n    const defaultFramework = localStorage.getItem(\"defaultFramework\");\n    try {\n      const url = `${urlConfig.URLS.PUBLIC_PREFIX}${urlConfig.URLS.FRAMEWORK.READ}/${defaultFramework}?categories=${urlConfig.params.framework}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      if (\n        data.result &&\n        data.result.framework &&\n        data.result.framework.categories\n      ) {\n        const gradeLevelCategory = data.result.framework.categories.find(\n          (category) => category.identifier === \"nulp_gradelevel\"\n        );\n        if (gradeLevelCategory && gradeLevelCategory.terms) {\n          const gradeLevelsOptions = gradeLevelCategory.terms.map((term) => ({\n            value: term.code,\n            label: term.name,\n          }));\n          setGradeLevels(gradeLevelsOptions);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error fetching grade levels:\", error);\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    }\n  };\n\n  const Fetchdomain = async () => {\n    const defaultFramework = localStorage.getItem(\"defaultFramework\");\n    try {\n      const url = `${urlConfig.URLS.PUBLIC_PREFIX}${urlConfig.URLS.FRAMEWORK.READ}/${defaultFramework}?orgdetails=${urlConfig.params.framework}`;\n\n      const response = await fetch(url);\n\n      if (response.ok) {\n        const responseData = await response.json();\n        if (\n          responseData.result &&\n          responseData.result.framework &&\n          responseData.result.framework.categories &&\n          responseData.result.framework.categories.length > 0 &&\n          responseData.result.framework.categories[0].terms\n        ) {\n          const domainOptions =\n            responseData.result.framework.categories[0].terms.map((term) => ({\n              value: term.code,\n              label: term.name,\n            }));\n          setCategory(domainOptions);\n          responseData.result.framework.categories[0].terms?.map((term) => {\n            setCategory(term);\n            if (domainWithImage) {\n              domainWithImage.result.form.data.fields.map((imgItem) => {\n                if ((term && term.code) === (imgItem && imgItem.code)) {\n                  term[\"image\"] = imgItem.image ? imgItem.image : \"\";\n                }\n              });\n            }\n          });\n          const domainList =\n            responseData?.result?.framework?.categories[0].terms;\n          setDomainList(domainList);\n        }\n      } else {\n        showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n        throw new Error(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n    } catch (error) {\n      console.log(\"Error fetching domain data:\", error);\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleCardClick = (contentId, courseType) => {\n    if (courseType === \"Course\") {\n      // navigate(\"/joinCourse\", { state: { contentId } });\n      navigate(`/joinCourse/${contentId}`);\n    } else {\n      navigate(\"/player\");\n    }\n  };\n\n  const handleDomainFilter = (query, domainName) => {\n    setDomain(query);\n    setPageNumber(1);\n    setCurrentPage(1);\n    setData({});\n    setDomainName(domainName);\n    navigate(`/contentList/1`, { state: { domain: query } });\n  };\n  const handleSearch = () => {\n    navigate(\"/contentList/1\", {\n      state: { globalSearchQuery: searchQuery },\n    });\n  };\n\n  const handleInputChange = (event) => {\n    setSearchQuery(event.target.value);\n    console.log(\"value\", event.target.value);\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      fetchData();\n    }\n  };\n\n  return (\n    <div>\n      <Header globalSearchQuery={globalSearchQuery} />\n      {toasterMessage && <ToasterCommon response={toasterMessage} />}\n\n      <Box\n        className=\"lg-hide header-bg w-40 mr-30\"\n        style={{ alignItems: \"center\", paddingLeft: \"23px\" }}\n      >\n        <Box className=\"h1-title px-10 pr-20\">{t(\"EXPLORE\")}</Box>\n        <TextField\n          placeholder={t(\"What do you want to learn today?  \")}\n          variant=\"outlined\"\n          size=\"small\"\n          fullWidth\n          value={searchQuery}\n          onChange={handleInputChange}\n          onKeyPress={handleKeyPress}\n          InputProps={{\n            endAdornment: (\n              <IconButton\n                type=\"submit\"\n                aria-label=\"search\"\n                onClick={handleSearch}\n              >\n                <SearchIcon />\n              </IconButton>\n            ),\n          }}\n        />\n      </Box>\n      <Box>\n        {domainList && domainList.length > 0 ? (\n          <DomainCarousel\n            // className={`my-class ${\n            //   activeStates[index] ? \"carousel-active-ui\" : \"\"\n            // }`}\n            onSelectDomain={handleDomainFilter}\n            selectedDomainCode={domain}\n            domains={domainList}\n          />\n        ) : (\n          <NoResult />\n        )}\n      </Box>\n\n      <Container maxWidth=\"xl\" role=\"main\" className=\"allContent xs-pb-20\">\n        {/* <Box style={{ margin: \"20px 0\" }}> */}\n        {/* <domainCarousel></domainCarousel> */}\n        {/* <Box\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\n            className=\"filter-domain\"\n          >\n            <Filter\n              options={gradeLevels}\n              label=\"Filter by Sub-Domain\"\n              onChange={handleFilterChange}\n            />\n            {!domain && (\n              <Filter\n                options={category}\n                label=\"Filter by Domain\"\n                onChange={handlefilter}\n              />\n            )}\n          </Box> */}\n        {/* </Box> */}\n        <Box\n          className=\"d-flex jc-bw mr-20 my-20\"\n          style={{ alignItems: \"center\" }}\n        >\n          <Box\n            sx={{ marginTop: \"10px\", alignItems: \"center\" }}\n            className=\"d-flex h3-title ml-neg-20\"\n          >\n            {t(\"YOU_ARE_VIEWING_CONTENTS_FOR\")}\n            {domainName && (\n              <Box\n                sx={{ fontSize: \"16px\", fontWeight: \"600\", paddingLeft: \"5px\" }}\n                className=\"text-blueShade2\"\n              >\n                {domainName}\n              </Box>\n            )}\n          </Box>\n          <Link onClick={handleGoBack} className=\"viewAll xs-hide\">\n            {t(\"BACK\")}\n          </Link>\n        </Box>\n        <Grid container spacing={2} className=\"pt-8 mt-15\">\n          <Grid\n            item\n            xs={12}\n            md={4}\n            lg={3}\n            className=\"sm-p-25 left-container mt-2 xs-hide left-filter\"\n            style={{ padding: \"0\" }}\n          >\n            <DrawerFilter />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            md={4}\n            lg={9}\n            className=\"sm-p-25\"\n            style={{ paddingTop: \"0\" }}\n          >\n            <Box textAlign=\"center\" padding=\"10\">\n              <Box>\n                {isLoading ? (\n                  <p>{t(\"LOADING\")}</p>\n                ) : error ? (\n                  <Alert severity=\"error\">{error}</Alert>\n                ) : data && data.content && data.content.length > 0 ? (\n                  <div>\n                    <Grid\n                      container\n                      spacing={2}\n                      style={{ margin: \"20px 0\", marginBottom: \"10px\" }}\n                    >\n                      {data?.content?.map((items, index) => (\n                        <Grid\n                          item\n                          xs={6}\n                          md={6}\n                          lg={3}\n                          style={{ marginBottom: \"10px\" }}\n                          key={items.identifier}\n                        >\n                          <BoxCard\n                            items={items}\n                            index={index}\n                            onClick={() =>\n                              handleCardClick(\n                                items.identifier,\n                                items.contentType\n                              )\n                            }\n                          ></BoxCard>\n                        </Grid>\n                      ))}\n                    </Grid>\n                    <Pagination\n                      count={totalPages}\n                      page={pageNumber}\n                      onChange={handleChange}\n                    />\n                  </div>\n                ) : (\n                  <NoResult /> // Render NoResult component when there are no search results\n                )}\n              </Box>\n            </Box>\n          </Grid>\n        </Grid>\n      </Container>\n      <Footer />\n    </div>\n  );\n};\n\nexport default ContentList;\n","import React, { useState, useEffect } from \"react\";\nimport { Grid } from \"@mui/material\";\nimport BoxCard from \"components/Card\";\nimport { getAllContents } from \"services/contentService\";\nimport Header from \"components/header\";\nimport Footer from \"components/Footer\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport FloatingChatIcon from \"../../components/FloatingChatIcon\";\nimport Box from \"@mui/material/Box\";\nimport data from \"../../assets/contentSerach.json\";\nimport SearchBox from \"components/search\";\nimport * as frameworkService from \"../../services/frameworkService\";\nimport Container from \"@mui/material/Container\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport DomainCarousel from \"components/domainCarousel\";\nimport SummarizeOutlinedIcon from \"@mui/icons-material/SummarizeOutlined\";\nimport domainWithImage from \"../../assets/domainImgForm.json\";\nimport { useTranslation } from \"react-i18next\";\nimport Alert from \"@mui/material/Alert\";\nimport appConfig from \"../../configs/appConfig.json\";\nconst urlConfig = require(\"../../configs/urlConfig.json\");\nimport ToasterCommon from \"../ToasterCommon\";\n\nconst responsiveCard = {\n  superLargeDesktop: {\n    breakpoint: { max: 4000, min: 3000 },\n    items: 5,\n  },\n  desktop: {\n    breakpoint: { max: 3000, min: 1024 },\n    items: 8,\n  },\n  tablet: {\n    breakpoint: { max: 1024, min: 464 },\n    items: 2,\n  },\n  mobile: {\n    breakpoint: { max: 464, min: 0 },\n    items: 2,\n  },\n};\n\nconst AllContent = () => {\n  const { t } = useTranslation();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [domain, setDomain] = useState();\n  const [selectedDomain, setSelectedDomain] = useState();\n\n  const [channelData, setChannelData] = React.useState(true);\n  const [expandedCategory, setExpandedCategory] = useState(null);\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 767);\n  const [itemsArray, setItemsArray] = useState([]);\n  const navigate = useNavigate();\n  const [toasterOpen, setToasterOpen] = useState(false);\n  const [toasterMessage, setToasterMessage] = useState(\"\");\n  const [domainName, setDomainName] = useState();\n\n  const handleResize = () => {\n    setIsMobile(window.innerWidth <= 767);\n  };\n  const handleSearch = (query) => {\n    // Implement your search logic here\n\n    console.log(\"Search query:\", query);\n  };\n  const handleDomainFilter = (query, domainName) => {\n    // Implement your search logic here\n    setSelectedDomain(query);\n    setDomainName(domainName);\n    console.log(\"Search query:\", selectedDomain);\n    // fetchData();\n  };\n  useEffect(() => {\n    fetchData();\n    fetchDomains();\n  }, []);\n\n  useEffect(() => {\n    fetchData();\n  }, [selectedDomain]);\n\n  const showErrorMessage = (msg) => {\n    setToasterMessage(msg);\n    setTimeout(() => {\n      setToasterMessage(\"\");\n    }, 2000);\n    setToasterOpen(true);\n  };\n\n  const fetchData = async () => {\n    setError(null);\n    let data = JSON.stringify({\n      request: {\n        filters: {\n          se_boards: [selectedDomain],\n          primaryCategory: [\n            \"Collection\",\n            \"Resource\",\n            \"Content Playlist\",\n            \"Course\",\n            \"Course Assessment\",\n            \"Digital Textbook\",\n            \"eTextbook\",\n            \"Explanation Content\",\n            \"Learning Resource\",\n            \"Lesson Plan Unit\",\n            \"Practice Question Set\",\n            \"Teacher Resource\",\n            \"Textbook Unit\",\n            \"LessonPlan\",\n            \"FocusSpot\",\n            \"Learning Outcome Definition\",\n            \"Curiosity Questions\",\n            \"MarkingSchemeRubric\",\n            \"ExplanationResource\",\n            \"ExperientialResource\",\n            \"Practice Resource\",\n            \"TVLesson\",\n            \"Course Unit\",\n            \"Exam Question\",\n          ],\n          visibility: [\"Default\", \"Parent\"],\n        },\n        limit: 100,\n        sort_by: { lastPublishedOn: \"desc\" },\n        fields: [\n          \"name\",\n          \"appIcon\",\n          \"medium\",\n          \"subject\",\n          \"resourceType\",\n          \"contentType\",\n          \"organisation\",\n          \"topic\",\n          \"mimeType\",\n          \"trackable\",\n          \"gradeLevel\",\n          \"se_boards\",\n          \"se_subjects\",\n          \"se_mediums\",\n          \"se_gradeLevels\",\n          \"primaryCategory\",\n        ],\n        facets: [\"channel\", \"gradeLevel\", \"subject\", \"medium\"],\n        offset: 0,\n      },\n    });\n\n    const headers = {\n      \"Content-Type\": \"application/json\",\n    };\n    // console.log(data.result.content)\n\n    try {\n      const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.CONTENT.SEARCH}?orgdetails=${appConfig.ContentPlayer.contentApiQueryParams.orgdetails}&licenseDetails=${appConfig.ContentPlayer.contentApiQueryParams.licenseDetails}`;\n\n      const response = await getAllContents(url, data, headers);\n      const sortedData = response?.data?.result?.content?.sort((a, b) => {\n        // Sort \"Course\" items first, then by primaryCategory\n        if (a.primaryCategory === \"Course\" && b.primaryCategory !== \"Course\") {\n          return -1; // \"Course\" comes before other categories\n        } else if (\n          a.primaryCategory !== \"Course\" &&\n          b.primaryCategory === \"Course\"\n        ) {\n          return 1; // Other categories come after \"Course\"\n        } else {\n          return a.primaryCategory.localeCompare(b.primaryCategory);\n        }\n      });\n      setData(sortedData);\n    } catch (error) {\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    }\n  };\n  const getCookieValue = (name) => {\n    const cookies = document.cookie.split(\"; \");\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i];\n      const [cookieName, cookieValue] = cookie.split(\"=\");\n      if (cookieName === name) {\n        return cookieValue;\n      }\n    }\n    return \"\";\n  };\n\n  const fetchDomains = async () => {\n    setError(null);\n    const rootOrgId = sessionStorage.getItem(\"rootOrgId\");\n    const defaultFramework = localStorage.getItem(\"defaultFramework\");\n    // Headers\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Cookie: `connect.sid=${getCookieValue(\"connect.sid\")}`,\n    };\n    try {\n      const url = `${urlConfig.URLS.PUBLIC_PREFIX}${urlConfig.URLS.CHANNEL.READ}/${rootOrgId}`;\n      const response = await frameworkService.getChannel(url, headers);\n      // console.log(\"channel---\",response.data.result);\n      setChannelData(response.data.result);\n    } catch (error) {\n      console.log(\"error---\", error);\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    } finally {\n    }\n    try {\n      const url = `${urlConfig.URLS.PUBLIC_PREFIX}${urlConfig.URLS.FRAMEWORK.READ}/${defaultFramework}?categories=${urlConfig.params.framework}`;\n\n      const response = await frameworkService.getSelectedFrameworkCategories(\n        url,\n        headers\n      );\n\n      response.data.result.framework.categories[0].terms?.map((term) => {\n        if (domainWithImage) {\n          domainWithImage.result.form.data.fields.map((imgItem) => {\n            if ((term && term.code) === (imgItem && imgItem.code)) {\n              term[\"image\"] = imgItem.image ? imgItem.image : \"\";\n              pushData(term);\n              itemsArray.push(term);\n            }\n          });\n        }\n      });\n      setDomain(response.data.result.framework.categories[0].terms);\n    } catch (error) {\n      console.log(\"nulp--  error-\", error);\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    } finally {\n      console.log(\"nulp finally---\");\n    }\n  };\n  // Function to push data to the array\n  const pushData = (term) => {\n    setItemsArray((prevData) => [...prevData, term]);\n  };\n\n  const renderItems = (items, category) => {\n    return items.map((item) => (\n      <Grid\n        item\n        xs={isMobile ? 12 : 12}\n        md={isMobile ? 12 : 6}\n        lg={isMobile ? 12 : 2}\n        key={item.id}\n        style={{ marginBottom: \"10px\" }}\n      >\n        <BoxCard\n          items={item}\n          onClick={() => handleCardClick(item, item.primaryCategory)}\n        ></BoxCard>\n      </Grid>\n    ));\n  };\n  const handleCardClick = (item, courseType) => {\n    if (courseType === \"Course\") {\n      // navigate(\"/joinCourse\", { state: { contentId: item.identifier } });\n      navigate(`/joinCourse/${item.identifier}`);\n    } else {\n      navigate(\"/player\", { state: { content: item } });\n      // navigate(\"/player\");\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      {toasterMessage && <ToasterCommon response={toasterMessage} />}\n\n      {domain && (\n        <DomainCarousel onSelectDomain={handleDomainFilter} domains={domain} />\n      )}\n\n      <Container\n        maxWidth=\"xl\"\n        role=\"main\"\n        className=\"pb-30 allContent xs-pb-20\"\n      >\n        {domainName && (\n          <Box\n            className=\"d-flex jc-bw mr-20 my-20\"\n            style={{ alignItems: \"center\" }}\n          >\n            <Box\n              sx={{ marginTop: \"10px\", alignItems: \"center\" }}\n              className=\"d-flex h3-title ml-neg-20\"\n            >\n              {t(\"YOU_ARE_VIEWING_CONTENTS_FOR\")}\n              <Box\n                sx={{ fontSize: \"16px\", fontWeight: \"600\", paddingLeft: \"5px\" }}\n                className=\"text-blueShade2\"\n              >\n                {domainName}\n              </Box>\n            </Box>\n          </Box>\n        )}\n        {/* <Box className=\"text-heading lg-d-flex my-20\">\n          You are viewing content for :\n          <Box className=\"text-primary\">Mobility and accessibliy</Box>\n        </Box> */}\n        {error && (\n          <Alert severity=\"error\" className=\"my-10\">\n            {error}\n          </Alert>\n        )}\n        {data &&\n          Object?.entries(\n            data?.reduce((acc, item) => {\n              if (!acc[item.primaryCategory]) {\n                acc[item.primaryCategory] = [];\n              }\n              acc[item.primaryCategory].push(item);\n              return acc;\n            }, {})\n          ).map(([category, items]) => (\n            // console.log(data,\"hi\"),\n\n            <React.Fragment key={category}>\n              <Box\n                className=\"d-flex mr-20 mt-20\"\n                style={{\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Box\n                  style={{\n                    display: \"inline-block\",\n                    margin: \"25px 0px 20px\",\n                  }}\n                  className=\"h4-title \"\n                >\n                  <SummarizeOutlinedIcon style={{ verticalAlign: \"top\" }} />{\" \"}\n                  <Box\n                    style={{\n                      display: \"inline-block\",\n                    }}\n                    className=\"h3-title\"\n                  >\n                    {category}{\" \"}\n                  </Box>{\" \"}\n                </Box>\n                <Box>\n                  {items?.length > 4 && (\n                    <Link to={`/view-all/${category}`} className=\"viewAll\">\n                      {t(\"VIEW_ALL\")}\n                    </Link>\n                  )}\n                </Box>\n              </Box>\n              {isMobile ? (\n                <Carousel\n                  swipeable={false}\n                  draggable={false}\n                  showDots={true}\n                  responsive={responsiveCard}\n                  ssr={true}\n                  infinite={true}\n                  autoPlaySpeed={1000}\n                  keyBoardControl={true}\n                  customTransition=\"all .5\"\n                  transitionDuration={500}\n                  containerClass=\"carousel-container\"\n                  removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\n                  dotListClass=\"custom-dot-list\"\n                  itemClass=\"carousel-item-padding-40-px allContentList xs-pb-20\"\n                >\n                  {expandedCategory === category\n                    ? items.map((item) => (\n                        <Grid item xs={12} md={6} lg={2} key={item.id}>\n                          <BoxCard\n                            items={item}\n                            onClick={() =>\n                              handleCardClick(item, item.primaryCategory)\n                            }\n                          ></BoxCard>\n                        </Grid>\n                      ))\n                    : items.slice(0, 4).map((item) => (\n                        <Grid item xs={6} md={6} lg={2} key={item.id}>\n                          <BoxCard\n                            items={item}\n                            onClick={() =>\n                              handleCardClick(item, item.primaryCategory)\n                            }\n                          ></BoxCard>\n                        </Grid>\n                      ))}\n                </Carousel>\n              ) : (\n                <Grid container spacing={2}>\n                  {expandedCategory === category\n                    ? renderItems(items, category)\n                    : renderItems(items.slice(0, 5), category)}\n                </Grid>\n              )}\n            </React.Fragment>\n          ))}\n      </Container>\n      <FloatingChatIcon />\n      <Footer />\n    </>\n  );\n};\n\nexport default AllContent;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport BoxCard from \"components/Card\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport { getAllContents } from \"services/contentService\";\nimport Header from \"components/header\";\nimport Footer from \"components/Footer\";\nimport ArrowBackOutlinedIcon from \"@mui/icons-material/ArrowBackOutlined\";\nimport Container from \"@mui/material/Container\";\nimport Pagination from \"@mui/material/Pagination\";\nimport Alert from \"@mui/material/Alert\";\n\nimport domainWithImage from \"../../assets/domainImgForm.json\";\nimport DomainCarousel from \"components/domainCarousel\";\nimport * as frameworkService from \"../../services/frameworkService\";\n\nimport SearchBox from \"components/search\";\nimport { t } from \"i18next\";\nimport appConfig from \"../../configs/appConfig.json\";\nconst urlConfig = require(\"../../configs/urlConfig.json\");\nimport ToasterCommon from \"../ToasterCommon\";\n\nconst CategoryPage = () => {\n  // const history = useHistory();\n  const { category } = useParams();\n  const [domain, setDomain] = useState();\n  const [channelData, setChannelData] = React.useState(true);\n  const [selectedDomain, setSelectedDomain] = useState();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const { pageNumber } = useParams(1);\n  const navigate = useNavigate();\n  const [currentPage, setCurrentPage] = useState(location.search || 1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  const [itemsArray, setItemsArray] = useState([]);\n  const [toasterOpen, setToasterOpen] = useState(false);\n  const [toasterMessage, setToasterMessage] = useState(\"\");\n  const [domainName, setDomainName] = useState();\n\n  const showErrorMessage = (msg) => {\n    setToasterMessage(msg);\n    setTimeout(() => {\n      setToasterMessage(\"\");\n    }, 2000);\n    setToasterOpen(true);\n  };\n\n  const handleSearch = (query) => {\n    // Implement your search logic here\n    console.log(\"Search query:\", query);\n  };\n  const handleDomainFilter = (query, domainName) => {\n    // Implement your search logic here\n    setSelectedDomain(query);\n    setDomainName(domainName);\n    console.log(\"Search query:\", selectedDomain);\n    fetchMoreItems(category);\n  };\n\n  useEffect(() => {\n    if (selectedDomain) {\n      fetchMoreItems();\n    }\n  }, []);\n\n  const handleGoBack = () => {\n    navigate(-1); // Navigate back in history\n  };\n\n  const fetchMoreItems = async (category) => {\n    setError(null);\n    // Filters for API\n    let data = JSON.stringify({\n      request: {\n        filters: {\n          primaryCategory: [category],\n          visibility: [],\n          se_boards: [selectedDomain],\n        },\n        limit: 20,\n        sort_by: {\n          lastPublishedOn: \"desc\",\n        },\n        fields: [\n          \"name\",\n          \"appIcon\",\n          \"medium\",\n          \"subject\",\n          \"resourceType\",\n          \"contentType\",\n          \"organisation\",\n          \"topic\",\n          \"mimeType\",\n          \"trackable\",\n          \"gradeLevel\",\n          \"se_boards\",\n          \"se_subjects\",\n          \"se_mediums\",\n          \"se_gradeLevels\",\n          \"primaryCategory\",\n        ],\n        facets: [\"channel\", \"gradeLevel\", \"subject\", \"medium\"],\n        offset: 0,\n      },\n    });\n\n    // Headers\n    const headers = {\n      \"Content-Type\": \"application/json\",\n    };\n\n    try {\n      const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.CONTENT.SEARCH}?orgdetails=${appConfig.ContentPlayer.contentApiQueryParams.orgdetails}&licenseDetails=${appConfig.ContentPlayer.contentApiQueryParams.licenseDetails}`;\n      const response = await getAllContents(url, data, headers);\n      setData(response.data.result.content);\n    } catch (error) {\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    }\n  };\n  // Function to push data to the array\n  const pushData = (term) => {\n    setItemsArray((prevData) => [...prevData, term]);\n  };\n\n  const fetchDomains = async () => {\n    setError(null);\n    const rootOrgId = sessionStorage.getItem(\"rootOrgId\");\n    const defaultFramework = localStorage.getItem(\"defaultFramework\");\n    // Headers\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Cookie: `connect.sid=${getCookieValue(\"connect.sid\")}`,\n    };\n    try {\n      const url = `${urlConfig.URLS.PUBLIC_PREFIX}${urlConfig.URLS.CHANNEL.READ}/${rootOrgId}`;\n      const response = await frameworkService.getChannel(url, headers);\n      // console.log(\"channel---\",response.data.result);\n      setChannelData(response.data.result);\n    } catch (error) {\n      console.log(\"error---\", error);\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    } finally {\n    }\n    try {\n      const url = `${urlConfig.URLS.PUBLIC_PREFIX}${urlConfig.URLS.FRAMEWORK.READ}/${defaultFramework}?orgdetails=${appConfig.ContentPlayer.contentApiQueryParams.orgdetails}`;\n\n      const response = await frameworkService.getSelectedFrameworkCategories(\n        url,\n        headers\n      );\n\n      response.data.result.framework.categories[0].terms.map((term) => {\n        if (domainWithImage) {\n          domainWithImage.result.form.data.fields.map((imgItem) => {\n            if ((term && term.code) === (imgItem && imgItem.code)) {\n              term[\"image\"] = imgItem.image ? imgItem.image : \"\";\n              pushData(term);\n              itemsArray.push(term);\n            }\n          });\n        }\n      });\n      console.log(\"kkkkk----\", itemsArray);\n\n      setDomain(response.data.result.framework.categories[0].terms);\n    } catch (error) {\n      console.log(\"nulp--  error-\", error);\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    } finally {\n      console.log(\"nulp finally---\");\n    }\n  };\n  const getCookieValue = (name) => {\n    const cookies = document.cookie.split(\"; \");\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i];\n      const [cookieName, cookieValue] = cookie.split(\"=\");\n      if (cookieName === name) {\n        return cookieValue;\n      }\n    }\n    return \"\";\n  };\n  useEffect(() => {\n    if (category) {\n      fetchMoreItems(category);\n    }\n    fetchDomains();\n  }, [category]);\n\n  const handleCardClick = (contentId, courseType) => {\n    if (courseType === \"Course\") {\n      navigate(`/joinCourse/${contentId}`);\n    } else {\n      navigate(\"/player\");\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      {toasterMessage && <ToasterCommon response={toasterMessage} />}\n      {domain && (\n        <DomainCarousel onSelectDomain={handleDomainFilter} domains={domain} />\n      )}\n\n      <Container maxWidth=\"xl\" role=\"main\" className=\"allContent xs-pb-20 \">\n        {domainName && (\n          <Box\n            className=\"d-flex jc-bw mr-20 my-20\"\n            style={{ alignItems: \"center\" }}\n          >\n            <Box\n              sx={{ marginTop: \"10px\", alignItems: \"center\" }}\n              className=\"d-flex h3-title ml-neg-20\"\n            >\n              {t(\"YOU_ARE_VIEWING_CONTENTS_FOR\")}\n              <Box\n                sx={{ fontSize: \"16px\", fontWeight: \"600\", paddingLeft: \"5px\" }}\n                className=\"text-blueShade2\"\n              >\n                {domainName}\n              </Box>\n            </Box>\n          </Box>\n        )}\n        {error && (\n          <Alert className=\"my-4\" severity=\"error\">\n            {error}\n          </Alert>\n        )}\n        <Box\n          className=\"d-flex jc-bw mr-20 my-20\"\n          style={{ alignItems: \"center\" }}\n        >\n          <p className=\"h3-title\">{category}</p>\n          <Link onClick={handleGoBack} className=\"viewAll mr-20\">\n            {t(\"BACK\")}\n          </Link>\n        </Box>\n\n        <Box textAlign=\"center\">\n          <Box>\n            <Grid container spacing={2}>\n              {data &&\n                data.map((item) => (\n                  <Grid\n                    item\n                    xs={6}\n                    md={6}\n                    lg={2}\n                    key={item.id}\n                    style={{ marginBottom: \"10px\" }}\n                  >\n                    <BoxCard\n                      items={item}\n                      index={item.count}\n                      onClick={() =>\n                        handleCardClick(item.identifier, item.contentType)\n                      }\n                    ></BoxCard>\n                  </Grid>\n                ))}\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n      {/* <Pagination\n          count={totalPages}\n          page={pageNumber}\n          onChange={handleChange}\n        /> */}\n      <Footer />\n    </>\n  );\n};\n\nexport default CategoryPage;\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Footer from \"components/Footer\";\nimport Header from \"components/header\";\nimport Container from \"@mui/material/Container\";\nimport FloatingChatIcon from \"../../components/FloatingChatIcon\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Box from \"@mui/material/Box\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n} from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport Link from \"@mui/material/Link\";\nimport ShareOutlinedIcon from \"@mui/icons-material/ShareOutlined\";\nimport Grid from \"@mui/material/Grid\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport SummarizeOutlinedIcon from \"@mui/icons-material/SummarizeOutlined\";\nimport ArrowBackOutlinedIcon from \"@mui/icons-material/ArrowBackOutlined\";\nimport * as util from \"../../services/utilService\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\n\nimport data from \"../../assets/courseHierarchy.json\";\nimport Alert from \"@mui/material/Alert\";\nimport Modal from \"@mui/material/Modal\";\n\nimport appConfig from \"../../configs/appConfig.json\";\nconst urlConfig = require(\"../../configs/urlConfig.json\");\nimport ToasterCommon from \"../ToasterCommon\";\nimport { TextField } from \"@mui/material\";\nimport Chat from \"pages/connections/chat\";\nimport {\n  FacebookShareButton,\n  WhatsappShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  FacebookIcon,\n  WhatsappIcon,\n  LinkedinIcon,\n  TwitterIcon,\n} from \"react-share\";\nimport AddConnections from \"pages/connections/AddConnections\";\nconst JoinCourse = () => {\n  const { t } = useTranslation();\n  const [courseData, setCourseData] = useState();\n  const [batchData, setBatchData] = useState();\n  const [batchDetails, setBatchDetails] = useState();\n  const [userCourseData, setUserCourseData] = useState({});\n  const [showEnrollmentSnackbar, setShowEnrollmentSnackbar] = useState(false);\n  const [showConsentForm, setShowConsentForm] = useState(false);\n  const [enrolled, setEnrolled] = useState(false);\n  const [progress, setCourseProgress] = useState();\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [userInfo, setUserInfo] = useState();\n  const [consentChecked, setConsentChecked] = useState(false);\n  const [shareEnabled, setShareEnabled] = useState(false);\n  const [openModal, setOpenModal] = useState(false);\n  const [userData, setUserData] = useState();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [toasterOpen, setToasterOpen] = useState(false);\n  const [toasterMessage, setToasterMessage] = useState(\"\");\n  const [creatorId, setCreatorId] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [chat, setChat] = useState([]);\n  const [formData, setFormData] = useState({\n    message: \"\",\n  });\n  const [showChat, setShowChat] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 767);\n\n  // const { contentId } = location.state || {};\n  const { contentId } = useParams();\n  const _userId = util.userId(); // Assuming util.userId() is defined\n  const shareUrl = window.location.href; // Current page URL\n  const style = {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    width: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    bgcolor: \"background.paper\",\n    boxShadow: 24,\n    p: 4,\n  };\n  const showErrorMessage = (msg) => {\n    setToasterMessage(msg);\n    setTimeout(() => {\n      setToasterMessage(\"\");\n    }, 2000);\n    setToasterOpen(true);\n  };\n  useEffect(() => {\n    const handleResize = () => setIsMobile(window.innerWidth <= 767);\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const url = `${urlConfig.URLS.PUBLIC_PREFIX}${urlConfig.URLS.COURSE.HIERARCHY}/${contentId}?orgdetails=${appConfig.ContentPlayer.contentApiQueryParams.orgdetails}&licenseDetails=${appConfig.ContentPlayer.contentApiQueryParams.licenseDetails}`;\n        const response = await fetch(url, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        if (!response.ok) {\n          showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n          throw new Error(t(\"FAILED_TO_FETCH_DATA\"));\n        }\n        const data = await response.json();\n\n        setCreatorId(data?.result?.content?.createdBy);\n        setUserData(data);\n      } catch (error) {\n        console.error(\"Error fetching course data:\", error);\n        showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n    };\n\n    const fetchBatchData = async () => {\n      try {\n        const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.BATCH.GET_BATCHS}`;\n        const response = await axios.post(url, {\n          request: {\n            filters: {\n              status: \"1\",\n              courseId: contentId,\n              enrollmentType: \"open\",\n            },\n            sort_by: {\n              createdDate: \"desc\",\n            },\n          },\n        });\n\n        const responseData = response.data;\n\n        if (responseData.result.response) {\n          const { count, content } = responseData.result.response;\n\n          if (count === 0) {\n            // console.warn(\"This course has no active batches.\");\n            showErrorMessage(t(\"This course has no active Batches\")); // Assuming `showErrorMessage` is used to display messages to the user\n          } else if (content && content.length > 0) {\n            const batchDetails = content[0];\n            setBatchData({\n              startDate: batchDetails.startDate,\n              endDate: batchDetails.endDate,\n              enrollmentEndDate: batchDetails.enrollmentEndDate,\n              batchId: batchDetails.batchId,\n            });\n            setBatchDetails(batchDetails);\n          } else {\n            console.error(\"Batch data not found in response\");\n          }\n        } else {\n          console.error(\"Batch data not found in response\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching batch data:\", error);\n        showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n    };\n\n    const checkEnrolledCourse = async () => {\n      try {\n        const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.COURSE.GET_ENROLLED_COURSES}/${_userId}?orgdetails=${appConfig.Course.contentApiQueryParams.orgdetails}&licenseDetails=${appConfig.Course.contentApiQueryParams.licenseDetails}&fields=${urlConfig.params.enrolledCourses.fields}&batchDetails=${urlConfig.params.enrolledCourses.batchDetails}`;\n        const response = await fetch(url);\n        if (!response.ok) {\n          showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n          throw new Error(t(\"FAILED_TO_FETCH_DATA\"));\n        }\n        const data = await response.json();\n        setUserCourseData(data.result);\n      } catch (error) {\n        console.error(\"Error while fetching courses:\", error);\n        showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n    };\n\n    fetchData();\n    fetchBatchData();\n    checkEnrolledCourse();\n    getUserData();\n  }, []);\n\n  useEffect(() => {\n    const fetchChats = async () => {\n      try {\n        const url = `${\n          urlConfig.URLS.DIRECT_CONNECT.GET_CHATS\n        }?sender_id=${_userId}&receiver_id=${creatorId}&is_connection=${true}`;\n\n        const response = await axios.get(url, {\n          withCredentials: true,\n        });\n        console.log(\"chatResponse\", response.data.result || []);\n        setChat(response.data.result || []);\n      } catch (error) {\n        console.error(\"Error fetching chats:\", error);\n      }\n    };\n    const getCourseProgress = async () => {\n      if (batchDetails) {\n        const request = {\n          request: {\n            userId: _userId,\n            courseId: contentId,\n            contentIds: [\n              \"do_1140201666434088961676\",\n              \"do_1140158031054356481608\",\n              \"do_1140159308293570561628\",\n              \"do_1140158135726735361613\",\n            ],\n            batchId: batchDetails.batchId,\n            fields: [\"progress\", \"score\"],\n          },\n        };\n        try {\n          const url = `${urlConfig.URLS.CONTENT_PREFIX}${urlConfig.URLS.COURSE.USER_CONTENT_STATE_READ}`;\n          const response = await axios.post(url, request);\n          const data = response.data;\n          setCourseProgress(data);\n        } catch (error) {\n          console.error(\"Error while fetching courses:\", error);\n          showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n        }\n      }\n    };\n    fetchChats();\n    getCourseProgress();\n  }, [batchDetails, creatorId]);\n\n  const handleDirectConnect = () => {\n    if (chat.length === 0) {\n      setOpen(true);\n    } else if (!isMobile && chat[0]?.is_accepted == true) {\n      setOpen(true);\n    } else {\n      navigate(\"/chat\", {\n        state: { senderUserId: _userId, receiverUserId: creatorId },\n      });\n    }\n  };\n\n  const handleGoBack = () => {\n    navigate(-1); // Navigate back in history\n  };\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"en-GB\", {\n      day: \"2-digit\",\n      month: \"long\",\n      year: \"numeric\",\n    });\n  };\n\n  const handleLinkClick = () => {\n    navigate(\"/player\", { state: { content: courseData.result.content } });\n  };\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setShowEnrollmentSnackbar(false);\n  };\n\n  const isEnrolled = () => {\n    return (\n      userCourseData &&\n      userCourseData.courses &&\n      userCourseData.courses.some((course) => course.contentId === contentId)\n    );\n  };\n\n  const isIncomplete = () => {\n    return (\n      progress &&\n      progress.result &&\n      progress.result.contentList &&\n      (progress.result.contentList.length === 0 ||\n        progress.result.contentList.some((content) => content.status !== 2))\n    );\n  };\n\n  const handleLeaveCourseClick = () => {\n    setShowConfirmation(true);\n  };\n\n  const handleConfirmationClose = () => {\n    setShowConfirmation(false);\n  };\n\n  const handleLeaveConfirmed = async () => {\n    try {\n      const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.COURSE.UNENROLL_USER_COURSE}`;\n      const requestBody = {\n        request: {\n          courseId: contentId,\n          userId: _userId,\n          batchId: batchData?.batchId,\n        },\n      };\n      const response = await axios.post(url, requestBody);\n      if (response.status === 200) {\n        setEnrolled(true);\n        setShowEnrollmentSnackbar(true);\n      }\n    } catch (error) {\n      console.error(\"Error enrolling in the course:\", error);\n      showErrorMessage(t(\"FAILED_TO_ENROLL_INTO_COURSE\"));\n    }\n    window.location.reload();\n  };\n\n  const renderActionButton = () => {\n    if (isEnrolled() || enrolled) {\n      if (isIncomplete()) {\n        return (\n          <Box>\n            <Button\n              onClick={handleLinkClick}\n              className=\"custom-btn-primary my-20 mr-5\"\n            >\n              {t(\"START_LEARNING\")}\n            </Button>\n            <Button\n              onClick={handleLeaveCourseClick} // Open confirmation dialog\n              className=\"custom-btn-danger\"\n            >\n              {t(\"LEAVE_COURSE\")}\n            </Button>\n            {showConfirmation && (\n              <Dialog open={showConfirmation} onClose={handleConfirmationClose}>\n                <DialogTitle>\n                  {t(\"LEAVE_COURSE_CONFIRMATION_TITLE\")}\n                </DialogTitle>\n                <DialogContent>\n                  <DialogContentText>\n                    {t(\"LEAVE_COURSE_CONFIRMATION_MESSAGE\")}\n                  </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                  <Button\n                    onClick={handleConfirmationClose}\n                    className=\"custom-btn-default\"\n                  >\n                    {t(\"CANCEL\")}\n                  </Button>\n                  <Button\n                    onClick={handleLeaveConfirmed}\n                    className=\"custom-btn-primary\"\n                    autoFocus\n                  >\n                    {t(\"LEAVE_COURSE\")}\n                  </Button>\n                </DialogActions>\n              </Dialog>\n            )}\n          </Box>\n        );\n      } else {\n        return (\n          <Button onClick={handleLinkClick} className=\"custom-btn-primary\">\n            {t(\"START_LEARNING\")}\n          </Button>\n        );\n      }\n    } else {\n      if (\n        (batchData?.enrollmentEndDate &&\n          new Date(batchData.enrollmentEndDate) < new Date()) ||\n        (!batchData?.enrollmentEndDate &&\n          batchData?.endDate &&\n          new Date(batchData.endDate) < new Date())\n      ) {\n        return (\n          <Typography\n            variant=\"h7\"\n            style={{\n              margin: \"12px 0\",\n              display: \"block\",\n              fontSize: \"14px\",\n              color: \"red\",\n            }}\n          >\n            {t(\"BATCH_EXPIRED_MESSAGE\")}\n          </Typography>\n        );\n      } else {\n        const today = new Date();\n        let lastDayOfEnrollment = null;\n\n        if (batchData?.enrollmentEndDate) {\n          const enrollmentEndDate = new Date(batchData.enrollmentEndDate);\n          if (!isNaN(enrollmentEndDate.getTime())) {\n            lastDayOfEnrollment = enrollmentEndDate;\n          }\n        }\n\n        const isLastDayOfEnrollment =\n          lastDayOfEnrollment &&\n          lastDayOfEnrollment.toDateString() === today.toDateString();\n\n        const isExpired =\n          lastDayOfEnrollment &&\n          lastDayOfEnrollment < formatDate(today) &&\n          !isLastDayOfEnrollment;\n\n        if (isExpired) {\n          return (\n            <Typography\n              variant=\"h7\"\n              style={{\n                margin: \"12px 0\",\n                display: \"block\",\n                fontSize: \"14px\",\n                color: \"red\",\n              }}\n            >\n              {t(\"BATCH_EXPIRED_MESSAGE\")}\n            </Typography>\n          );\n        }\n\n        return (\n          <Button\n            onClick={handleJoinAndOpenModal}\n            // onClick={handleOpenModal}\n            disabled={isExpired} // Only disable if expired (not on last day)\n            className=\"custom-btn-primary my-20\"\n            style={{\n              background: isExpired ? \"#ccc\" : \"#004367\",\n            }}\n          >\n            {t(\"JOIN_COURSE\")}\n          </Button>\n        );\n      }\n    }\n  };\n\n  const handleJoinAndOpenModal = async () => {\n    try {\n      await handleJoinCourse(); // Wait for the user to join the course\n      setShowConsentForm(true); // Open the consent form after joining the course\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  const handleJoinCourse = async () => {\n    try {\n      const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.COURSE.ENROLL_USER_COURSE}`;\n      const requestBody = {\n        request: {\n          courseId: contentId,\n          userId: _userId,\n          batchId: batchData?.batchId,\n        },\n      };\n      const response = await axios.post(url, requestBody);\n      if (response.status === 200) {\n        setEnrolled(true);\n        setShowEnrollmentSnackbar(true);\n      }\n    } catch (error) {\n      console.error(\"Error enrolling in the course:\", error);\n      showErrorMessage(t(\"FAILED_TO_ENROLL_INTO_COURSE\"));\n    }\n  };\n\n  const consentUpdate = async (status) => {\n    try {\n      const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.USER.CONSENT_READ}`;\n      const requestBody = {\n        request: {\n          consent: {\n            status: status,\n            userId: _userId,\n            consumerId: userInfo?.rootOrgId,\n            objectId: contentId,\n            objectType: \"Collection\",\n          },\n        },\n      };\n      const response = await axios.post(url, requestBody);\n      if (response.status === 200) {\n        setShowConsentForm(false);\n      }\n    } catch (error) {\n      console.error(\"Error updating consent:\", error);\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    }\n  };\n\n  const handleCheckboxChange = (event) => {\n    setConsentChecked(event.target.checked);\n    setShareEnabled(event.target.checked);\n  };\n\n  const getUserData = async () => {\n    try {\n      const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.USER.GET_PROFILE}${_userId}?fields=${urlConfig.params.userReadParam.fields}`;\n\n      const response = await fetch(url);\n      const data = await response.json();\n      setUserInfo(data.result.response);\n    } catch (error) {\n      console.error(\"Error while getting user data:\", error);\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    }\n  };\n\n  const handleShareClick = () => {\n    consentUpdate(\"ACTIVE\");\n    setShowConsentForm(false);\n  };\n\n  const handleDontShareClick = () => {\n    consentUpdate(\"REVOKED\");\n    setShowConsentForm(false);\n  };\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = async () => {\n    const requestBody = {\n      sender_id: _userId,\n      receiver_id: creatorId,\n      message: formData.message,\n    };\n\n    try {\n      const url = `${urlConfig.URLS.DIRECT_CONNECT.SEND_CHATS}`;\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(requestBody),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to send chat\");\n      }\n      setOpen(false);\n      console.log(\"sentChatRequest\", response);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    window.location.reload();\n  };\n  return (\n    <div>\n      <Header />\n      {toasterMessage && <ToasterCommon response={toasterMessage} />}\n      <Snackbar\n        open={showEnrollmentSnackbar}\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      >\n        <MuiAlert\n          elevation={6}\n          variant=\"filled\"\n          onClose={handleSnackbarClose}\n          severity=\"success\"\n          sx={{ mt: 2 }}\n        >\n          {t(\"ENROLLMENT_SUCCESS_MESSAGE\")}\n        </MuiAlert>\n      </Snackbar>\n\n      <Modal\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n        open={showConsentForm}\n        onClose={(event, reason) => {\n          if (reason === \"backdropClick\" || reason === \"escapeKeyDown\") {\n            setOpenModal(true);\n          } else {\n            handleCloseModal();\n          }\n        }}\n      >\n        <Box sx={style} className=\"joinCourse\">\n          <Typography\n            id=\"modal-modal-title\"\n            variant=\"h5\"\n            component=\"h2\"\n            style={{ marginBottom: \"20px\" }}\n          >\n            {t(\"CONSENT_FORM_TITLE\")}\n          </Typography>\n          <div>\n            <label>{t(\"USERNAME\")}:</label>\n            <span>{userInfo?.firstName}</span>\n          </div>\n          <div>\n            <label>{t(\"STATE\")}:</label>\n            <span>{}</span>\n          </div>\n          <div>\n            <label>{t(\"USER_ID\")}:</label>\n            <span>{userInfo?.organisations[0]?.userId}</span>\n          </div>\n          <div>\n            <label>{t(\"EXTERNAL_ID\")}:</label>\n            <span>{}</span>\n          </div>\n          <div>\n            <label>{t(\"DISTRICT\")}:</label>\n            <span>{}</span>\n          </div>\n          <div>\n            <label>{t(\"BLOCK\")}:</label>\n            <span>{}</span>\n          </div>\n          <div>\n            <label>{t(\"SCHOOL_ID\")}:</label>\n            <span>{}</span>\n          </div>\n          <div>\n            <label>{t(\"SCHOOL_OR_ORG_NAME\")}:</label>\n            <span>{}</span>\n          </div>\n          <div>\n            <label>{t(\"MOBILENUMBER\")}:</label>\n            <span>{userInfo?.phone}</span>\n          </div>\n          <div>\n            <label>{t(\"EMAIL_ADDRESS\")}:</label>\n            <span>{userInfo?.email}</span>\n          </div>\n\n          <div>\n            <input\n              type=\"checkbox\"\n              checked={consentChecked}\n              onChange={handleCheckboxChange}\n            />\n            <label>{t(\"CONSENT_TEXT\")}</label>\n          </div>\n          <Box className=\"d-flex jc-en\">\n            <Button\n              onClick={handleDontShareClick}\n              className=\"custom-btn-primary pr-18\"\n            >\n              {t(\"DONT_SHARE\")}\n            </Button>\n            <Button\n              onClick={handleShareClick}\n              className=\"custom-btn-default\"\n              disabled={!shareEnabled}\n            >\n              {t(\"SHARE\")}\n            </Button>\n          </Box>\n        </Box>\n      </Modal>\n\n      <Container maxWidth=\"xxl\" role=\"main\" className=\"xs-pr-0 xs-pb-20\">\n        <Grid container spacing={2}>\n          <Grid\n            item\n            xs={12}\n            md={4}\n            lg={4}\n            className=\"sm-p-25 left-container mt-9 xs-px-0\"\n          >\n            {/* <Breadcrumbs\n            aria-label=\"breadcrumb\"\n            style={{\n              padding: \"25px 0\",\n              fontSize: \"16px\",\n              fontWeight: \"600\",\n            }}\n          >\n            <Link underline=\"hover\" color=\"#004367\" href=\"/profile\">\n              {t(\"ALL_CONTENT\")}\n            </Link>\n            <Typography color=\"#484848\" aria-current=\"page\">\n              {t(\"LEARNING_HISTORY\")}\n            </Typography>\n          </Breadcrumbs>  */}\n            <Grid container spacing={2}>\n              <Breadcrumbs\n                aria-label=\"breadcrumb\"\n                className=\"h6-title mt-15 pl-18\"\n              >\n                <Link\n                  underline=\"hover\"\n                  style={{ maxHeight: \"inherit\" }}\n                  onClick={handleGoBack}\n                  color=\"#004367\"\n                  href=\"/all\"\n                >\n                  {t(\"ALL_CONTENT\")}\n                </Link>\n                <Link\n                  underline=\"hover\"\n                  href=\"\"\n                  aria-current=\"page\"\n                  className=\"h6-title oneLineEllipsis\"\n                >\n                  {userData?.result?.content?.name}\n                </Link>\n              </Breadcrumbs>\n\n              <Grid item xs={4}>\n                <Link\n                  href=\"#\"\n                  style={{\n                    textAlign: \"right\",\n                    marginTop: \"20px\",\n                    display: \"block\",\n                  }}\n                ></Link>\n              </Grid>\n            </Grid>\n            <Box className=\"h3-title my-10\">\n              {\" \"}\n              {userData?.result?.content?.name}\n            </Box>\n\n            {(courseData?.result?.content?.children[0]?.children[0]?.board ||\n              courseData?.result?.content?.children[0]?.children[0]\n                .gradeLevel?.[0]) && (\n              <Box>\n                <Typography\n                  variant=\"h7\"\n                  style={{\n                    margin: \"12px 0 12px 0\",\n                    display: \"block\",\n                    fontSize: \"13px\",\n                  }}\n                >\n                  {t(\"CONTENT_TAGS\")}:\n                  <Button\n                    size=\"small\"\n                    style={{\n                      color: \"#424242\",\n                      fontSize: \"12px\",\n                      margin: \"0 10px\",\n                    }}\n                    className=\"bg-blueShade3\"\n                  >\n                    {\n                      courseData?.result?.content?.children[0]?.children[0]\n                        ?.board\n                    }\n                  </Button>\n                  <Button\n                    size=\"small\"\n                    style={{\n                      color: \"#424242\",\n                      fontSize: \"10px\",\n                    }}\n                    className=\"bg-blueShade3\"\n                  >\n                    {\" \"}\n                    {\n                      courseData?.result?.content?.children[0]?.children[0]\n                        .gradeLevel?.[0]\n                    }\n                  </Button>\n                </Typography>\n              </Box>\n            )}\n            <Box\n              style={{\n                background: \"#F9FAFC\",\n                padding: \"10px\",\n                borderRadius: \"10px\",\n                color: \"#484848\",\n                boxShadow: \"0px 4px 4px 0px #00000040\",\n              }}\n              className=\"xs-hide\"\n            >\n              <Typography\n                variant=\"h7\"\n                style={{\n                  margin: \"0 0 9px 0\",\n                  display: \"block\",\n                  fontSize: \"16px\",\n                }}\n              >\n                {t(\"BATCH_DETAILS\")}:\n              </Typography>\n              <Box\n                style={{\n                  background: \"#fff\",\n                  padding: \"10px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                <Typography\n                  variant=\"h7\"\n                  style={{\n                    fontWeight: \"500\",\n                    margin: \"9px 0\",\n                    display: \"block\",\n                    fontSize: \"14px\",\n                  }}\n                >\n                  {t(\"BATCH_START_DATE\")}: {formatDate(batchData?.startDate)}\n                </Typography>\n                <Typography\n                  variant=\"h7\"\n                  style={{\n                    fontWeight: \"500\",\n                    margin: \"9px 0\",\n                    display: \"block\",\n                    fontSize: \"14px\",\n                  }}\n                >\n                  {t(\"BATCH_END_DATE\")}: {formatDate(batchData?.endDate)}\n                </Typography>\n                <Typography\n                  variant=\"h7\"\n                  style={{\n                    fontWeight: \"500\",\n                    margin: \"9px 0\",\n                    display: \"block\",\n                    fontSize: \"14px\",\n                  }}\n                >\n                  {t(\"LAST_DATE_FOR_ENROLLMENT\")}:{\" \"}\n                  {formatDate(batchData?.enrollmentEndDate)}\n                </Typography>\n              </Box>\n            </Box>\n            <Accordion\n              className=\"xs-hide\"\n              style={{\n                background: \"#F9FAFC\",\n                borderRadius: \"10px\",\n                marginTop: \"10px\",\n              }}\n            >\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1-content\"\n                id=\"panel1-header\"\n                className=\"h4-title accordionBoxShadow\"\n              >\n                {t(\"CERTIFICATION_CRITERIA\")}\n              </AccordionSummary>\n              <AccordionDetails style={{ background: \"#fff\" }}>\n                <ul>\n                  <li className=\"pl-18 h6-title\">\n                    {t(\"COMPLETION_CERTIFICATE_ISSUED\")} 100%\n                    {t(\"COMPLETION\")}\n                  </li>\n                  <li className=\"pl-18 h6-title\">\n                    {t(\"CERT_ISSUED_SCORE\")} 60% {t(\"OR_GREATER\")}{\" \"}\n                    {t(\"ASSESSMENT\")}\n                  </li>\n                </ul>\n              </AccordionDetails>\n            </Accordion>\n            <Accordion\n              className=\"xs-hide accordionBoxShadow\"\n              style={{\n                background: \"#F9FAFC\",\n                borderRadius: \"10px\",\n                marginTop: \"10px\",\n              }}\n            >\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1-content\"\n                id=\"panel1-header\"\n                className=\"h4-title\"\n              >\n                {t(\"OTHER_DETAILS\")}\n              </AccordionSummary>\n              <AccordionDetails style={{ background: \"#fff\" }}>\n                <Typography className=\"h6-title\">\n                  {t(\"CREATED_ON\")}:{\" \"}\n                  {userData &&\n                    userData.result &&\n                    formatDate(userData.result.content.children[0].createdOn)}\n                </Typography>\n                <Typography className=\"h6-title\">\n                  {t(\"UPDATED_ON\")}:{\" \"}\n                  {userData &&\n                    userData.result &&\n                    formatDate(\n                      userData.result.content.children[0].lastUpdatedOn\n                    )}\n                </Typography>\n                <Typography className=\"h6-title\">{t(\"CREDITS\")}:</Typography>\n                <Typography className=\"h6-title\">\n                  {t(\"LICENSE_TERMS\")}:{\" \"}\n                  {userData?.result?.content?.licenseDetails?.name}\n                  {t(\"FOR_DETAILS\")}:{\" \"}\n                  <a\n                    href={userData?.result?.content?.licenseDetails?.url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {userData?.result?.content?.licenseDetails?.url}\n                  </a>\n                </Typography>\n              </AccordionDetails>\n            </Accordion>\n            <div className=\"xs-hide\">\n              <React.Fragment>\n                {chat.length === 0 && (\n                  <Button\n                    onClick={handleDirectConnect}\n                    variant=\"contained\"\n                    className=\"custom-btn-primary my-20\"\n                    style={{\n                      background: \"#004367\",\n                    }}\n                  >\n                    {t(\"CONNECT_WITH_CREATOR\")}\n                  </Button>\n                )}\n                {chat.length > 0 && chat[0]?.is_accepted === false && (\n                  <React.Fragment>\n                    <Alert severity=\"warning\" style={{ margin: \"10px 0\" }}>\n                      {t(\"YOUR_CHAT_REQUEST_IS_PENDING\")}\n                    </Alert>\n                    <Button\n                      variant=\"contained\"\n                      className=\"custom-btn-primary my-20\"\n                      style={{\n                        background:\n                          chat.length > 0 && chat[0]?.is_accepted === false\n                            ? \"#a9b3f5\"\n                            : \"#004367\",\n                      }}\n                      disabled\n                    >\n                      {t(\"CHAT_WITH_CREATOR\")}\n                    </Button>\n                  </React.Fragment>\n                )}\n                {chat.length > 0 && chat[0].is_accepted === true && (\n                  <Button\n                    onClick={handleDirectConnect}\n                    variant=\"contained\"\n                    className=\"custom-btn-primary my-20\"\n                    style={{\n                      background: \"#004367\",\n                    }}\n                  >\n                    {t(\"CHAT_WITH_CREATOR\")}\n                  </Button>\n                )}\n              </React.Fragment>\n              {_userId && creatorId && (\n                <Modal open={open} onClose={handleClose}>\n                  <div className=\"contentCreator\">\n                    <Chat\n                      senderUserId={_userId}\n                      receiverUserId={creatorId}\n                      onChatSent={handleClose}\n                    />{\" \"}\n                  </div>\n                </Modal>\n              )}\n            </div>\n            <Box className=\"mb-30 xs-hide\">\n              <FacebookShareButton url={shareUrl} className=\"pr-5\">\n                <FacebookIcon size={32} round={true} />\n              </FacebookShareButton>\n              <WhatsappShareButton url={shareUrl} className=\"pr-5\">\n                <WhatsappIcon size={32} round={true} />\n              </WhatsappShareButton>\n              <LinkedinShareButton url={shareUrl} className=\"pr-5\">\n                <LinkedinIcon size={32} round={true} />\n              </LinkedinShareButton>\n              <TwitterShareButton url={shareUrl} className=\"pr-5\">\n                <img\n                  src={require(\"../../assets/twitter.png\")}\n                  alt=\"Twitter\"\n                  style={{ width: 32, height: 32 }}\n                />\n              </TwitterShareButton>\n            </Box>\n          </Grid>\n          <Grid item xs={12} md={8} lg={8} className=\"mb-20 xs-pr-16\">\n            <Box style={{ textAlign: \"right\" }}> {renderActionButton()}</Box>\n\n            {/* <Box\n              sx={{\n                background: \"#EEEEEE\",\n                textAlign: \"center\",\n                color: \"#464665\",\n                fontSize: \"18px\",\n                height: \"600px\",\n              }}\n            >\n              <Box sx={{ transform: \"translate(0%, 550%)\" }}>\n                {t(\"START_LEARNING\")}\n                <Box style={{ fontSize: \"14px\" }}>\n                  {t(\"JOIN_COURSE_MESSAGE\")}\n                </Box>\n              </Box>\n            </Box> */}\n            <Box>\n              <Typography className=\"h5-title\" style={{ fontWeight: \"600\" }}>\n                {t(\"DESCRIPTION\")}:\n              </Typography>\n              <Typography\n                className=\"twoLineEllipsis h5-title mb-15\"\n                style={{ fontWeight: \"600\" }}\n              >\n                {courseData?.result?.content?.description}\n              </Typography>\n            </Box>\n\n            <Accordion\n              defaultExpanded\n              style={{\n                background: \"#F9FAFC\",\n                borderRadius: \"10px\",\n                marginTop: \"10px\",\n              }}\n            >\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1-content\"\n                id=\"panel1-header\"\n                className=\"h4-title\"\n                style={{ fontWeight: \"500\" }}\n              >\n                {t(\"COURSES_MODULE\")}\n              </AccordionSummary>\n              <AccordionDetails>\n                {userData?.result?.content?.children.map((faqIndex) => (\n                  <Accordion\n                    key={faqIndex.id}\n                    style={{ borderRadius: \"10px\", margin: \"10px 0\" }}\n                  >\n                    <AccordionSummary\n                      expandIcon={<ExpandMoreIcon />}\n                      aria-controls={`panel${faqIndex.id}-content`}\n                      id={`panel${faqIndex.id}-header`}\n                      className=\"h5-title\"\n                    >\n                      {faqIndex.name}\n                    </AccordionSummary>\n                    {faqIndex.children.map((faqIndexname) => (\n                      <AccordionDetails\n                        className=\"border-bottom\"\n                        style={{ paddingLeft: \"35px\" }}\n                      >\n                        <SummarizeOutlinedIcon\n                          style={{ fontSize: \"17px\", paddingRight: \"10px\" }}\n                        />\n\n                        <Link\n                          href=\"#\"\n                          underline=\"none\"\n                          key={faqIndexname.id}\n                          style={{ verticalAlign: \"super\" }}\n                          onClick={handleLinkClick}\n                          className=\"h6-title\"\n                        >\n                          {faqIndexname.name}\n                        </Link>\n                      </AccordionDetails>\n                    ))}\n                  </Accordion>\n                ))}\n              </AccordionDetails>\n            </Accordion>\n            <Box\n              style={{\n                background: \"#F9FAFC\",\n                padding: \"10px\",\n                borderRadius: \"10px\",\n                color: \"#484848\",\n              }}\n              className=\"lg-hide accordionBoxShadow\"\n            >\n              <Typography\n                variant=\"h7\"\n                style={{\n                  margin: \"0 0 9px 0\",\n                  display: \"block\",\n                  fontSize: \"16px\",\n                }}\n              >\n                {t(\"BATCH_DETAILS\")}:\n              </Typography>\n              <Box\n                style={{\n                  background: \"#fff\",\n                  padding: \"10px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                <Typography\n                  variant=\"h7\"\n                  style={{\n                    fontWeight: \"500\",\n                    margin: \"9px 0\",\n                    display: \"block\",\n                    fontSize: \"14px\",\n                  }}\n                >\n                  {t(\"BATCH_START_DATE\")}: {formatDate(batchData?.startDate)}\n                </Typography>\n                <Typography\n                  variant=\"h7\"\n                  style={{\n                    fontWeight: \"500\",\n                    margin: \"9px 0\",\n                    display: \"block\",\n                    fontSize: \"14px\",\n                  }}\n                >\n                  {t(\"BATCH_END_DATE\")}: {formatDate(batchData?.endDate)}\n                </Typography>\n                <Typography\n                  variant=\"h7\"\n                  style={{\n                    fontWeight: \"500\",\n                    margin: \"9px 0\",\n                    display: \"block\",\n                    fontSize: \"14px\",\n                  }}\n                >\n                  {t(\"LAST_DATE_FOR_ENROLLMENT\")}:{\" \"}\n                  {formatDate(batchData?.enrollmentEndDate)}\n                </Typography>\n              </Box>\n            </Box>\n            <Accordion\n              className=\"lg-hide accordionBoxShadow\"\n              style={{\n                background: \"#F9FAFC\",\n                borderRadius: \"10px\",\n                marginTop: \"10px\",\n              }}\n            >\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1-content\"\n                id=\"panel1-header\"\n                className=\"h4-title\"\n              >\n                {t(\"CERTIFICATION_CRITERIA\")}\n              </AccordionSummary>\n              <AccordionDetails style={{ background: \"#fff\" }}>\n                <ul>\n                  <li className=\"pl-18 h6-title\">\n                    {t(\"COMPLETION_CERTIFICATE_ISSUED\")} 100%\n                    {t(\"COMPLETION\")}\n                  </li>\n                  <li className=\"pl-18 h6-title\">\n                    {t(\"CERT_ISSUED_SCORE\")} 60% {t(\"OR_GREATER\")}{\" \"}\n                    {t(\"ASSESSMENT\")}\n                  </li>\n                </ul>\n              </AccordionDetails>\n            </Accordion>\n            <Accordion\n              className=\"lg-hide accordionBoxShadow\"\n              style={{\n                background: \"#F9FAFC\",\n                borderRadius: \"10px\",\n                marginTop: \"10px\",\n              }}\n            >\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1-content\"\n                id=\"panel1-header\"\n                className=\"h4-title\"\n              >\n                {t(\"OTHER_DETAILS\")}\n              </AccordionSummary>\n              <AccordionDetails style={{ background: \"#fff\" }}>\n                <Typography className=\"h6-title\">\n                  {t(\"CREATED_ON\")}:{\" \"}\n                  {courseData &&\n                    courseData.result &&\n                    formatDate(courseData.result.content.children[0].createdOn)}\n                </Typography>\n                <Typography className=\"h6-title\">\n                  {t(\"UPDATED_ON\")}:{\" \"}\n                  {courseData &&\n                    courseData.result &&\n                    formatDate(\n                      courseData.result.content.children[0].lastUpdatedOn\n                    )}\n                </Typography>\n                <Typography className=\"h6-title\">{t(\"CREDITS\")}:</Typography>\n                <Typography className=\"h6-title\">\n                  {t(\"LICENSE_TERMS\")}:{\" \"}\n                  {courseData?.result?.content?.licenseDetails?.name}\n                  {t(\"FOR_DETAILS\")}:{\" \"}\n                  <a\n                    href={courseData?.result?.content?.licenseDetails?.url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {courseData?.result?.content?.licenseDetails?.url}\n                  </a>\n                </Typography>\n              </AccordionDetails>\n            </Accordion>\n            <div className=\"lg-hide\">\n              <React.Fragment>\n                {chat.length === 0 && (\n                  <Button\n                    onClick={handleDirectConnect}\n                    variant=\"contained\"\n                    className=\"custom-btn-primary my-20\"\n                    style={{\n                      background: \"#004367\",\n                    }}\n                  >\n                    {t(\"CONNECT_WITH_CREATOR\")}\n                  </Button>\n                )}\n                {chat.length > 0 && chat[0]?.is_accepted === false && (\n                  <React.Fragment>\n                    <Alert severity=\"warning\" style={{ margin: \"10px 0\" }}>\n                      {t(\"YOUR_CHAT_REQUEST_IS_PENDING\")}\n                    </Alert>\n                    <Button\n                      variant=\"contained\"\n                      className=\"custom-btn-primary my-20\"\n                      style={{\n                        background:\n                          chat.length > 0 && chat[0]?.is_accepted === false\n                            ? \"#a9b3f5\"\n                            : \"#004367\",\n                      }}\n                      disabled\n                    >\n                      {t(\"CHAT_WITH_CREATOR\")}\n                    </Button>\n                  </React.Fragment>\n                )}\n                {chat.length > 0 && chat[0].is_accepted === true && (\n                  <Button\n                    onClick={handleDirectConnect}\n                    variant=\"contained\"\n                    className=\"custom-btn-primary my-20\"\n                    style={{\n                      background: \"#004367\",\n                    }}\n                  >\n                    {t(\"CHAT_WITH_CREATOR\")}\n                  </Button>\n                )}\n              </React.Fragment>\n              {_userId && creatorId && (\n                <Modal open={open} onClose={handleClose}>\n                  <div\n                    style={{\n                      position: \"absolute\",\n                      top: \"0\",\n                      left: \"35%\",\n                      padding: \"20px\",\n                      boxShadow: \"0 3px 5px rgba(0, 0, 0, 0.3)\",\n                      outline: \"none\",\n                      borderRadius: 8,\n                      width: \"90%\", // Relative width\n                      maxWidth: \"500px\", // Maximum width\n                      height: \"80%\", // Relative height\n                      maxHeight: \"90vh\", // Maximum height\n                      overflowY: \"auto\", // Scroll if content overflows\n                    }}\n                    className=\"contentCreator\"\n                  >\n                    <Chat\n                      senderUserId={_userId}\n                      receiverUserId={creatorId}\n                      onChatSent={handleClose}\n                    />{\" \"}\n                  </div>\n                </Modal>\n              )}\n            </div>\n            <Box className=\"my-20 lg-hide social-icons\">\n              <FacebookShareButton url={shareUrl} className=\"pr-5\">\n                <FacebookIcon size={32} round={true} />\n              </FacebookShareButton>\n              <WhatsappShareButton url={shareUrl} className=\"pr-5\">\n                <WhatsappIcon size={32} round={true} />\n              </WhatsappShareButton>\n              <LinkedinShareButton url={shareUrl} className=\"pr-5\">\n                <LinkedinIcon size={32} round={true} />\n              </LinkedinShareButton>\n              <TwitterShareButton url={shareUrl} className=\"pr-5\">\n                <img\n                  src={require(\"../../assets/twitter.png\")}\n                  alt=\"Twitter\"\n                  style={{ width: 32, height: 32 }}\n                />\n              </TwitterShareButton>\n            </Box>\n          </Grid>\n        </Grid>\n      </Container>\n      <FloatingChatIcon />\n      <Footer />\n    </div>\n  );\n};\n\nexport default JoinCourse;\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Footer from \"components/Footer\";\nimport Header from \"components/header\";\nimport Container from \"@mui/material/Container\";\nimport FloatingChatIcon from \"../../components/FloatingChatIcon\";\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport Link from \"@mui/material/Link\";\nimport ShareOutlinedIcon from \"@mui/icons-material/ShareOutlined\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\n\n// const [width, height] = useWindowSize();\n\nimport {\n  subjectListRegistryService,\n  courseRegistryService,\n  SunbirdPlayer,\n  useWindowSize,\n} from \"@shiksha/common-lib\";\n\nconst Player = () => {\n  // const { contentId } = useParams();\n  const location = useLocation();\n  const { t } = useTranslation();\n  const [lessonId, setLessonId] = React.useState();\n  const [trackData, setTrackData] = React.useState();\n  const { content } = location.state || {};\n  const [contentData, setContentData] = useState();\n\n  const [lesson, setLesson] = React.useState();\n\n  const handleExitButton = () => {\n    setLesson();\n    setLessonId();\n    if (\n      [\"assessment\", \"SelfAssess\", \"QuestionSet\", \"QuestionSetImage\"].includes(\n        type\n      )\n    ) {\n      navigate(-1);\n    }\n  };\n  const handleTrackData = async (\n    { score, trackData, attempts, ...props },\n    playerType = \"quml\"\n  ) => {\n    // let data = {};\n    // const programData = await subjectListRegistryService.getProgramId();\n    // if (playerType === \"quml\") {\n    //   const newFormatData = trackData.reduce((oldData, newObj) => {\n    //     const dataExist = oldData.findIndex(\n    //       (e) => e.sectionId === newObj[\"item\"][\"sectionId\"]\n    //     );\n    //     if (dataExist >= 0) {\n    //       oldData[dataExist][\"data\"].push(newObj);\n    //     } else {\n    //       oldData = [\n    //         ...oldData,\n    //         {\n    //           sectionId: newObj[\"item\"][\"sectionId\"],\n    //           sectionName: newObj[\"sectionName\"] ? newObj[\"sectionName\"] : \"\",\n    //           data: [newObj],\n    //         },\n    //       ];\n    //     }\n    //     return oldData;\n    //   }, []);\n    //   data = {\n    //     courseId: id,\n    //     moduleId: id,\n    //     lessonId: id,\n    //     status: \"completed\",\n    //     score: score,\n    //     scoreDetails: JSON.stringify(newFormatData),\n    //     program: programData?.programId,\n    //     subject: lesson?.subject?.join(\",\"),\n    //   };\n    // } else {\n    //   data = {\n    //     courseId: id,\n    //     moduleId: lessonId?.parent,\n    //     lessonId: lessonId?.identifier,\n    //     status: \"completed\",\n    //     score: score ? score : 0,\n    //     scoreDetails: JSON.stringify(props),\n    //     program: programData?.programId,\n    //     subject: lessons?.subject?.join(\",\"),\n    //   };\n    // }\n    // courseRegistryService.lessontracking(data);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\n          `/api/content/v1/read/${content.identifier}?fields=transcripts,ageGroup,appIcon,artifactUrl,attributions,attributions,audience,author,badgeAssertions,board,body,channel,code,concepts,contentCredits,contentType,contributors,copyright,copyrightYear,createdBy,createdOn,creator,creators,description,displayScore,domain,editorState,flagReasons,flaggedBy,flags,framework,gradeLevel,identifier,itemSetPreviewUrl,keywords,language,languageCode,lastUpdatedOn,license,mediaType,medium,mimeType,name,originData,osId,owner,pkgVersion,publisher,questions,resourceType,scoreDisplayConfig,status,streamingUrl,subject,template,templateId,totalQuestions,totalScore,versionKey,visibility,year,primaryCategory,additionalCategories,interceptionPoints,interceptionType&orgdetails=orgName,email&licenseDetails=name,description,url`,\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch course data\");\n        }\n        const data = await response.json();\n        console.log(\"data-----\", data.result.content);\n        setLesson(data.result.content);\n        // setCourseData(data);\n      } catch (error) {\n        console.error(\"Error fetching course data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Now contentId contains the value from the URL parameter\n  return (\n    <div>\n      <Header />\n      <Container maxWidth=\"md\" role=\"main\" className=\"container-pb\">\n        <Grid container spacing={2}>\n          <Grid item xs={8}>\n            <Breadcrumbs\n              aria-label=\"breadcrumb\"\n              style={{\n                padding: \"25px 0\",\n                fontSize: \"16px\",\n                fontWeight: \"600\",\n              }}\n            >\n              <Link underline=\"hover\" color=\"#004367\" href=\"/\">\n                {t(\"COURSES\")}\n              </Link>\n              <Link\n                underline=\"hover\"\n                href=\"\"\n                aria-current=\"page\"\n                color=\"#484848\"\n              >\n                Case of Urban Sanitation in India\n                {/* {userData?.result?.content?.name} */}\n              </Link>\n            </Breadcrumbs>\n          </Grid>\n          <Grid item xs={4}>\n            <Link\n              href=\"#\"\n              style={{\n                textAlign: \"right\",\n                marginTop: \"20px\",\n                display: \"block\",\n              }}\n            >\n              <ShareOutlinedIcon />\n            </Link>\n          </Grid>\n        </Grid>\n        <Box>\n          <Typography\n            variant=\"h7\"\n            style={{\n              margin: \"0 0 9px 0\",\n              display: \"block\",\n              fontSize: \"11px\",\n            }}\n          >\n            {t(\"RELEVANT_FOR\")}:\n            <Button\n              size=\"small\"\n              style={{\n                background: \"#ffefc2\",\n                color: \"#484848\",\n                fontSize: \"10px\",\n                margin: \"0 10px\",\n              }}\n            >\n              SWM\n              {/* {userData?.result?.content?.board} */}\n            </Button>\n            <Button\n              size=\"small\"\n              style={{\n                background: \"#ffefc2\",\n                color: \"#484848\",\n                fontSize: \"10px\",\n              }}\n            >\n              {\" \"}\n              Sanitation\n              {/* {userData?.result?.content?.gradeLevel} */}\n            </Button>\n          </Typography>\n        </Box>\n\n        {lesson && (\n          <SunbirdPlayer\n            // {...{ width, height: height - 64 }}\n            // handleExitButton={handleExitButton}\n            {...lesson}\n            userData={{\n              firstName: \"Shivani\",\n              lastName: \"\",\n            }}\n            setTrackData={(data) => {\n              if (\n                [\n                  \"assessment\",\n                  \"SelfAssess\",\n                  \"QuestionSet\",\n                  \"QuestionSetImage\",\n                ].includes(type)\n              ) {\n                handleTrackData(data);\n              } else if (\n                [\"application/vnd.sunbird.questionset\"].includes(\n                  lesson?.mimeType\n                )\n              ) {\n                handleTrackData(data, \"application/vnd.sunbird.questionset\");\n              } else if (\n                [\n                  \"application/pdf\",\n                  \"video/mp4\",\n                  \"video/webm\",\n                  \"video/x-youtube\",\n                  \"application/vnd.ekstep.h5p-archive\",\n                ].includes(lesson?.mimeType)\n              ) {\n                handleTrackData(data, \"pdf-video\");\n              } else {\n                if (\n                  [\"application/vnd.ekstep.ecml-archive\"].includes(\n                    lesson?.mimeType\n                  )\n                ) {\n                  if (Array.isArray(data)) {\n                    const score = data.reduce(\n                      (old, newData) => old + newData?.score,\n                      0\n                    );\n                    handleTrackData({ ...data, score: `${score}` }, \"ecml\");\n                    setTrackData(data);\n                  } else {\n                    handleTrackData({ ...data, score: `0` }, \"ecml\");\n                  }\n                }\n              }\n            }}\n            public_url=\"http://127.0.0.1:8080\"\n            // public_url=\"https://nulp.niua.org\"\n          />\n        )}\n      </Container>\n      <FloatingChatIcon />\n      <Footer />\n    </div>\n  );\n};\n\nexport default Player;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Container,\n  Typography,\n  Box,\n  TextField,\n  Button,\n  Link,\n} from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate, Navigate } from \"react-router-dom\";\nimport image from \"../../assets/bg.png\";\nimport { useStore } from \"configs/zustandStore\";\nconst axios = require(\"axios\");\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport { Dialog, DialogContent, DialogActions } from \"@material-ui/core\";\nimport Alert from \"@mui/material/Alert\";\nconst urlConfig = require(\"../../configs/urlConfig.json\");\nimport ToasterCommon from \"../ToasterCommon\";\n\nconst Otp = () => {\n  const { t } = useTranslation();\n  const [otp, setOtp] = useState(\"\"); // State to store OTP value\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [resendDisabled, setResendDisabled] = useState(true); // State to manage resend button disabled state\n  const [remainingTime, setRemainingTime] = useState(60); // State to hold the remaining time\n  const navigate = useNavigate();\n  const [userData, setUserData] = useState({});\n  const [goToOtp, setGoToOtp] = useState(false);\n  const dataStore = useStore((state) => state.data);\n  const captchaResponse = dataStore.captchaResponse;\n  const [open, setOpen] = useState(false);\n  const [tncConfig, setTncConfig] = useState();\n  const [tncConfigVersion, setTncConfigVersion] = useState();\n  const [birthYear, setBirthYear] = useState(2000);\n  const [isChecked, setIsChecked] = useState(false);\n  const [toasterOpen, setToasterOpen] = useState(false);\n  const [toasterMessage, setToasterMessage] = useState(\"\");\n\n  const showErrorMessage = (msg) => {\n    setToasterMessage(msg);\n    setTimeout(() => {\n      setToasterMessage(\"\");\n    }, 2000);\n    setToasterOpen(true);\n  };\n\n  useEffect(() => {\n    const storedUserData = dataStore.userData;\n    if (storedUserData) {\n      setUserData(storedUserData);\n      setBirthYear(storedUserData.age);\n      const latestVersion = JSON.parse(dataStore.tncConfig).latestVersion;\n      setTncConfigVersion(latestVersion);\n      const url = JSON.parse(dataStore.tncConfig)[latestVersion]?.url || \"\";\n      setTncConfig(url);\n    }\n  }, [dataStore.userData, dataStore.tncConfig]);\n  useEffect(() => {\n    let timer;\n    if (!resendDisabled) {\n      timer = setInterval(() => {\n        setRemainingTime((prevTime) => {\n          if (prevTime === 1) {\n            setResendDisabled(true); // Disable resend button when timer expires\n            clearInterval(timer); // Clear the timer\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n    }\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, [resendDisabled]);\n\n  useEffect(() => {\n    setResendDisabled(false); // Enable resend button\n  }, []);\n\n  useEffect(() => {\n    if (remainingTime === 0) {\n      setResendDisabled(true);\n      setRemainingTime(60);\n    }\n  }, [remainingTime]);\n\n  const handleLogin = () => {\n    if (otp.length >= 5 && isChecked) {\n      verifyUser();\n    }\n  };\n\n  const handleOtpChange = (value) => {\n    if (/^\\d{0,6}$/.test(value)) {\n      setOtp(value);\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleLinkClick = () => {\n    setOpen(true);\n  };\n\n  const verifyUser = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    const requestBody = {\n      request: {\n        key: userData && userData.email,\n        type: \"email\",\n        otp: otp,\n      },\n    };\n    try {\n      const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.OTP.VERIFY}`;\n\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(requestBody),\n      });\n\n      if (!response.ok) {\n        showErrorMessage(t(\"FAILED_TO_VERIFY_OTP\"));\n        throw new Error(t(\"FAILED_TO_VERIFY_OTP\"));\n      }\n\n      const data = await response.json();\n      await signupUser(data.reqData);\n      acceptTermsAndConditions();\n    } catch (error) {\n      showErrorMessage(t(\"FAILED_TO_VERIFY_OTP\"));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const signupUser = async (reqData) => {\n    setIsLoading(true);\n    setError(null);\n\n    const requestBody = {\n      params: {\n        source: \"portal\",\n        signupType: \"self\",\n      },\n      request: {\n        firstName: userData.name,\n        password: userData.password,\n        birthYear: userData.birthYear,\n        email: userData.email,\n        emailVerified: true,\n        reqData: reqData,\n      },\n    };\n    try {\n      const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.USER.SIGN_UP_V1}`;\n\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(requestBody),\n      });\n\n      if (!response.ok) {\n        showErrorMessage(t(\"FAILED_TO_SIGNUP\"));\n        throw new Error(t(\"FAILED_TO_SIGNUP\"));\n      }\n\n      const data = await response.json();\n      await saveUserInfoInCustomDB(data.result.userId);\n      setGoToOtp(true);\n    } catch (error) {\n      showErrorMessage(t(\"FAILED_TO_SIGNUP\"));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const saveUserInfoInCustomDB = async (userId) => {\n    const requestBody = {\n      user_id: userId,\n      designation:\n        userData.designation === \"Other\"\n          ? userData.otherDesignation\n          : userData.designation,\n      bio: userData.bio,\n      created_by: userId,\n    };\n    try {\n      const url = `${urlConfig.URLS.USER.USER_SIGNUP}`;\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(requestBody),\n      });\n\n      if (!response.ok) {\n        showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n        throw new Error(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n\n      const data = await response.json();\n    } catch (error) {\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  if (goToOtp) {\n    return <Navigate to=\"/all\" />;\n  }\n\n  const acceptTermsAndConditions = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const url = `${urlConfig.URLS.USER.TNC_ACCEPT_LOGIN}`;\n\n      const response = await axios.post(url, {\n        request: {\n          version: tncConfigVersion,\n          identifier: userData.email,\n        },\n      });\n\n      if (!response.ok) {\n        showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n        throw new Error(t(\"FAILED_TO_FETCH_DATA\"));\n      }\n\n      const data = response.data;\n      console.log(\"acceptTermsAndConditionsresponse:\", data.result);\n    } catch (error) {\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const generateOtp = async (email) => {\n    const requestBody = {\n      request: {\n        key: email,\n        type: \"email\",\n        templateId: \"wardLoginOTP\",\n      },\n    };\n    try {\n      const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.OTP.ANONYMOUS.GENERATE}?captchaResponse=${captchaResponse}`;\n\n      const response = await axios.post(url, requestBody, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response.status !== 200) {\n        showErrorMessage(t(\"FAILED_TO_VERIFY_OTP\"));\n        throw new Error(t(\"FAILED_TO_VERIFY_OTP\"));\n      }\n\n      const data = response.data;\n    } catch (error) {\n      console.log(error);\n      showErrorMessage(t(\"FAILED_TO_VERIFY_OTP\"));\n      setIsLoading(false);\n    }\n  };\n\n  const resendOtp = () => {\n    generateOtp(userData.email);\n    setResendDisabled(false); // Enable resend button\n  };\n  const age = new Date().getFullYear() - birthYear;\n  const tncText =\n    age < 18 ? (\n      <span>\n        As a parent/guardian I understand & accept the NULP Terms of Use agree\n        my child to register on NULP with the given information.\n      </span>\n    ) : (\n      <span>\n        I am 18+ years old and understand and accept the NULP Terms of Use\n      </span>\n    );\n  const handleCheckboxChange = (event) => {\n    setIsChecked(event.target.checked);\n  };\n\n  return (\n    <>\n      {toasterMessage && <ToasterCommon response={toasterMessage} />}\n      <Container\n        maxWidth=\"sm\"\n        style={{\n          textAlign: \"center\",\n          backgroundPosition: \"2px 426px\",\n          height: \"100vh\",\n          // backgroundImage: `url(${image})`,\n          // backgroundRepeat: \"no-repeat\",\n          // backgroundSize: \"contain\",\n        }}\n      >\n        {error && (\n          <Alert severity=\"error\" className=\"my-10\">\n            {error}\n          </Alert>\n        )}\n\n        <Box my={4}>\n          <img src={require(\"../../assets/logo.png\")} alt=\"Logo\" />\n        </Box>\n        <Typography\n          style={{ fontWeight: \"600\", fontSize: \"16px\", marginBottom: \"40px\" }}\n        >\n          {t(\"REGISTER\")}\n        </Typography>\n\n        <Alert severity=\"info\" style={{ textAlign: \"left\" }}>\n          {t(\"PLEASE_ENTER_THE_VERFICATION_CODE_RECEIVED\")}\n        </Alert>\n        <Typography\n          style={{\n            fontWeight: \"400\",\n            fontSize: \"12px\",\n            textAlign: \"left\",\n            margin: \"35px 0 10px 0\",\n          }}\n        >\n          {t(\"VERIFICATION_CODE\")}\n        </Typography>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          id=\"otp\"\n          label=\"OTP\"\n          name=\"otp\"\n          value={otp}\n          onChange={(e) => handleOtpChange(e.target.value)}\n          autoFocus\n          inputProps={{ maxLength: 6 }}\n        />\n\n        <Button\n          onClick={resendOtp}\n          disabled={!resendDisabled}\n          style={{\n            textAlign: \"right\",\n            fontSize: \"10px\",\n            display: \"block\",\n            marginTop: \"10px\",\n          }}\n        >\n          {resendDisabled ? t(\"RESEND_OTP\") : `Resend OTP in ${remainingTime}s`}\n        </Button>\n        <FormGroup\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            flexFlow: \"row\",\n          }}\n        >\n          <FormControlLabel\n            style={{ marginRight: \"0\" }}\n            control={\n              <Checkbox checked={isChecked} onChange={handleCheckboxChange} />\n            }\n          />{\" \"}\n          <Link href=\"#\" onClick={handleLinkClick}>\n            {\" \"}\n            <span style={{ color: \"#FF0000\", marginLeft: \"2px\" }}>*</span>\n            {tncText}\n          </Link>\n        </FormGroup>\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          maxWidth=\"xxl\"\n          className=\"sm-w-700\"\n        >\n          <DialogContent>\n            <h1 style={{ fontSize: \"22px\" }}>Terms and Conditions </h1>\n            <iframe\n              title=\"Terms and Conditions\"\n              src={tncConfig}\n              style={{ width: \"100%\", height: \"80vh\", border: \"none\" }}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              {t(\"Close\")}\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Box pt={4}>\n          <Button\n            onClick={handleLogin}\n            disabled={!isChecked || otp.length < 5}\n            style={{\n              background:\n                !isChecked || otp.length < 5\n                  ? \"rgba(0, 67, 103, 0.5)\"\n                  : \"#004367\",\n              borderRadius: \"10px\",\n              color: \"#fff\",\n              padding: \"10px 71px\",\n              fontWeight: \"600\",\n              fontSize: \"14px\",\n              margin: \"20px 0 20px 0\",\n            }}\n          >\n            {t(\"SUBMIT\")}\n          </Button>\n        </Box>\n        <Box style={{ display: \"flex\", alignItems: \"center\" }}></Box>\n        <Box py={1}>\n          <Typography\n            variant=\"h1\"\n            style={{\n              fontWeight: \"400\",\n              fontSize: \"12px\",\n            }}\n          >\n            {t(\"ALREADY_HAVE_AN_ACCOUNT\")}{\" \"}\n            <Link href={`/all${window.location.search}`}>{t(\"LOGIN\")}</Link>\n          </Typography>\n        </Box>\n      </Container>\n    </>\n  );\n};\n\nexport default Otp;\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Footer from \"components/Footer\";\nimport Header from \"components/header\";\nimport Container from \"@mui/material/Container\";\nimport FloatingChatIcon from \"../../components/FloatingChatIcon\";\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport Link from \"@mui/material/Link\";\nimport ShareOutlinedIcon from \"@mui/icons-material/ShareOutlined\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\n\nconst PDFContent = () => {\n  //   const { contentId } = useParams();\n  const { t } = useTranslation();\n\n  // Now contentId contains the value from the URL parameter\n  return (\n    <div>\n      <Header />\n\n      <Container maxWidth=\"md\" role=\"main\" className=\"container-pb\">\n        <Grid container spacing={2}>\n          <Grid item xs={8}>\n            <Breadcrumbs\n              aria-label=\"breadcrumb\"\n              style={{\n                padding: \"25px 0\",\n                fontSize: \"16px\",\n                fontWeight: \"600\",\n              }}\n            >\n              <Link underline=\"hover\" color=\"#004367\" href=\"/\">\n                {t(\"COURSES\")}\n              </Link>\n              <Link\n                underline=\"hover\"\n                href=\"\"\n                aria-current=\"page\"\n                color=\"#484848\"\n              >\n                Case of Urban Sanitation in India\n                {/* {userData?.result?.content?.name} */}\n              </Link>\n            </Breadcrumbs>\n          </Grid>\n          <Grid item xs={4}>\n            <Link\n              href=\"#\"\n              style={{\n                textAlign: \"right\",\n                marginTop: \"20px\",\n                display: \"block\",\n              }}\n            >\n              <ShareOutlinedIcon />\n            </Link>\n          </Grid>\n        </Grid>\n        <Box>\n          <Typography\n            variant=\"h7\"\n            style={{\n              margin: \"0 0 9px 0\",\n              display: \"block\",\n              fontSize: \"11px\",\n            }}\n          >\n            {t(\"RELEVANT_FOR\")}:\n            <Button\n              size=\"small\"\n              style={{\n                background: \"#ffefc2\",\n                color: \"#484848\",\n                fontSize: \"10px\",\n                margin: \"0 10px\",\n              }}\n            >\n              SWM\n              {/* {userData?.result?.content?.board} */}\n            </Button>\n            <Button\n              size=\"small\"\n              style={{\n                background: \"#ffefc2\",\n                color: \"#484848\",\n                fontSize: \"10px\",\n              }}\n            >\n              {\" \"}\n              Sanitation\n              {/* {userData?.result?.content?.gradeLevel} */}\n            </Button>\n          </Typography>\n        </Box>\n        PDF will be intergrated Here\n      </Container>\n      <FloatingChatIcon />\n      <Footer />\n    </div>\n  );\n};\n\nexport default PDFContent;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport {\n  TextField,\n  Button,\n  Alert,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextareaAutosize,\n} from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport * as util from \"../../services/utilService\";\nconst axios = require(\"axios\");\nimport { useNavigate } from \"react-router-dom\";\nimport { useStore } from \"configs/zustandStore\";\nimport { IconButton, Menu, MenuItem } from \"@mui/material\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport BlockIcon from \"@mui/icons-material/Block\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport { useTranslation } from \"react-i18next\";\nimport DoneAllIcon from \"@mui/icons-material/DoneAll\";\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\nimport Typography from \"@mui/material/Typography\";\nconst urlConfig = require(\"../../configs/urlConfig.json\");\nimport ToasterCommon from \"../ToasterCommon\";\nimport Modal from \"@mui/material/Modal\";\n\nconst moment = require(\"moment\");\nconst timezone = require(\"moment-timezone\");\nconst useStyles = makeStyles((theme) => ({\n  chatContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100vh\",\n    overflow: \"hidden\",\n    background: \"#FFF5E9\",\n  },\n  chatHeader: {\n    padding: \"8px 16px\",\n    backgroundColor: \"#FFE6C8 !important\",\n    color: \"#484848\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    textAlign: \"center\",\n  },\n  chat: {\n    flex: 1,\n    overflowY: \"auto\",\n    padding: \"16px\",\n    borderBottom: \"1px solid #DDDDDD\",\n    background:\"#FFE6C8 !important\"\n  },\n  messageInput: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"8px\",\n    backgroundColor: \"#f9fafc\",\n    marginTop: \"10px\",\n  },\n  senderMessage: {\n    borderRadius: \"5px\",\n    padding: \"8px\",\n    margin: \"25px 0\",\n    textAlign: \"right\",\n    background: \"#F1FAFF  !important\",\n    color: \"#484848\",\n    fontSize: \"16px\",\n    fontWeight: \"400\",\n    marginLeft: \"auto\",\n    width: \"16%\",\n  },\n  receiverMessage: {\n    margin: \"13px 0\",\n    padding: \"8px 12px\",\n    clear: \"both\",\n    alignSelf: \"flex-end\",\n    display: \"table\",\n    borderRadius: \"5px\",\n    color: \"#212121\",\n    backgroundColor: \"#fff !important\",\n    fontSize: \"16px\",\n    fontWeight: \"400\",\n  },\n}));\n\nconst Message = (props) => {\n  const classes = useStyles();\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [loggedInUserId, setLoggedInUserId] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const dataStore = useStore((state) => state.data);\n  const receiverUserId = dataStore.userId || localStorage.getItem(\"userId\");\n  const [anchorEl, setAnchorEl] = useState(null);\n  const navigate = useNavigate();\n  const [reason, setReason] = useState(\"\");\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [isBlocked, setIsBlocked] = useState(false); // State to track if user is blocked\n  const [showUnblockOption, setShowUnblockOption] = useState(false); // State to show/hide unblock option\n  const [toasterOpen, setToasterOpen] = useState(false);\n  const [toasterMessage, setToasterMessage] = useState(\"\");\n  // const [openModal, setDialogOpen] = useState(false);\n\n  const { t } = useTranslation();\n  useEffect(() => {\n    const _userId = util.userId();\n    setLoggedInUserId(_userId);\n  }, []);\n  useEffect(() => {\n    if (loggedInUserId) {\n      // Fetch block user status when component mounts\n      fetchBlockUserStatus();\n      fetchChats();\n      updateMessage();\n    }\n  }, [loggedInUserId]);\n\n  const showErrorMessage = (msg) => {\n    setToasterMessage(msg);\n    setTimeout(() => {\n      setToasterMessage(\"\");\n    }, 2000);\n    setToasterOpen(true);\n  };\n\n  useEffect(() => {\n    if (loggedInUserId && !isBlocked) {\n      const intervalId = setInterval(fetchChats, 5000);\n      return () => clearInterval(intervalId);\n    }\n  }, [loggedInUserId, isBlocked]);\n\n  const fetchBlockUserStatus = async () => {\n    try {\n      const url = `${urlConfig.URLS.DIRECT_CONNECT.GET_BLOCK_USER}?sender_id=${loggedInUserId}&receiver_id=${receiverUserId}`;\n      const response = await axios.get(url, {\n        withCredentials: true,\n      });\n      const blockedUserId =\n        response.data.result.length > 0\n          ? response.data.result[0].sender_id\n          : null;\n\n      setIsBlocked(response.data.result.length > 0); // Update isBlocked state based on API response\n      setShowUnblockOption(blockedUserId === loggedInUserId);\n    } catch (error) {\n      console.error(\"Error fetching block user status:\", error);\n      showErrorMessage(t(\"FAILED_TO_BLOCK_USER\"));\n    }\n  };\n\n  const fetchChats = async () => {\n    try {\n      const url = `${\n        urlConfig.URLS.DIRECT_CONNECT.GET_CHATS\n      }?sender_id=${loggedInUserId}&receiver_id=${receiverUserId}&is_accepted=${true}`;\n\n      // Check if the user is not blocked before fetching chats\n      if (!isBlocked) {\n        const response = await axios.get(url, {\n          withCredentials: true,\n        });\n        setMessages(response.data.result || []);\n      }\n    } catch (error) {\n      console.error(\"Error fetching chats:\", error);\n      showErrorMessage(t(\"FAILED_TO_FETCH_CHAT\"));\n    }\n  };\n\n  const sendMessage = async () => {\n    if (message.trim() !== \"\") {\n      try {\n        const url = `${urlConfig.URLS.DIRECT_CONNECT.SEND_CHAT}`;\n        console.log(\"Sending message:\", message);\n\n        await axios.post(\n          url,\n          {\n            sender_id: loggedInUserId,\n            receiver_id: receiverUserId,\n            message: message,\n            sender_email: \"sender@gmail.com\",\n            receiver_email: \"receiver@gmail.com\",\n          },\n          {\n            withCredentials: true,\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        setMessage(\"\");\n        fetchChats(); // Fetch messages after sending a message\n      } catch (error) {\n        console.error(\"Error saving message:\", error);\n        showErrorMessage(t(\"FAILED_TO_SEND_CHAT\"));\n      }\n    }\n  };\n\n  const updateMessage = async () => {\n    try {\n      const url = `${urlConfig.URLS.DIRECT_CONNECT.UPDATE_CHAT}`;\n      console.log(\"updating message:\", message);\n\n      const data = await axios.put(\n        url,\n        {\n          sender_id: loggedInUserId,\n          receiver_id: receiverUserId,\n          is_read: true,\n        },\n        {\n          withCredentials: true,\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n    } catch (error) {\n      console.error(\"Error updating message:\", error);\n      showErrorMessage(t(\"FAILED_TO_FETCH_DATA\"));\n    }\n  };\n\n  const getTimeAgo = (timestamp) => {\n    const timeZone = \"Asia/Kolkata\";\n    const date = moment(timestamp).tz(timeZone);\n    const now = moment().tz(timeZone);\n\n    if (date.isSame(now, \"day\")) {\n      return \"Today\";\n    } else if (date.isSame(now.clone().subtract(1, \"day\"), \"day\")) {\n      return \"Yesterday\";\n    } else {\n      return date.format(\"D MMMM YYYY\");\n    }\n  };\n  const getTime = (timestamp) => {\n    const date = new Date(timestamp);\n    const istTime = date.toLocaleString(\"en-US\", {\n      timeZone: \"Asia/Kolkata\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n      hour12: true,\n    });\n    return istTime;\n  };\n\n  const handleMenuClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n  const handleGoBack = () => {\n    navigate(-1); // Navigate back in history\n  };\n\n  const handleDialogOpen = () => {\n    setDialogOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n  const handleBlockUser = () => {\n    handleDialogOpen();\n  };\n\n  const handleUnblockUser = async () => {\n    try {\n      const url = `${urlConfig.URLS.DIRECT_CONNECT.UNBLOCK}`;\n      console.log(\"UnBlocking User\");\n\n      const data = await axios.post(\n        url,\n        {\n          sender_id: loggedInUserId,\n          receiver_id: receiverUserId,\n        },\n        {\n          withCredentials: true,\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      console.log(\"User unblocked successfully!\");\n      // Reload the page after unblocking the user\n      if (data) {\n        window.location.reload();\n      }\n    } catch (error) {\n      console.error(\"Error unblocking user:\", error);\n      showErrorMessage(t(\"FAILED_TO_UNBLOCK_USER\"));\n    }\n  };\n\n  const handleBlockUserConfirmed = async () => {\n    try {\n      const url = `${urlConfig.URLS.DIRECT_CONNECT.BLOCK}`;\n      console.log(\"Blocking User\");\n\n      await axios.post(\n        url,\n        {\n          sender_id: loggedInUserId,\n          receiver_id: receiverUserId,\n          reason: reason,\n        },\n        {\n          withCredentials: true,\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      setReason(\"\");\n      setDialogOpen(false);\n      console.log(\"User blocked successfully!\");\n      // Reload the page after blocking the user\n      window.location.reload();\n    } catch (error) {\n      console.error(\"Error blocking user:\", error);\n      showErrorMessage(t(\"FAILED_TO_BLOCK_USER\"));\n    }\n    handleMenuClose(); // Close the menu after the action is completed\n  };\n\n  return (\n    <div className={classes.chatContainer}>\n      {toasterMessage && <ToasterCommon response={toasterMessage} />}\n      <div className={classes.chatHeader}>\n        <Box style={{ display: \"flex\", alignItems: \"center\" }}>\n          <IconButton onClick={handleGoBack}>\n            <ArrowBackIcon />\n          </IconButton>\n          <Box\n            sx={{\n              fontSize: \"20px\",\n              fontWeight: \"500\",\n              paddingLeft: \"10px\",\n              color: \"#484848\",\n            }}\n          >\n            <div>\n              {dataStore.fullName || localStorage.getItem(\"chatName\")}\n              <Typography\n                variant=\"body2\"\n                sx={{ fontSize: \"12px\", textAlign: \"left\" }}\n              >\n                {dataStore.designation || localStorage.getItem(\"designation\")}\n              </Typography>\n            </div>\n          </Box>\n        </Box>\n        <Box\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            fontSize: \"18px\",\n            cursor: \"pointer\",\n          }}\n        >\n          {!isBlocked && (\n            <IconButton onClick={handleBlockUser} className=\"block-btn\">\n              <BlockIcon style={{ fontSize: \"16px\", paddingRight: \"8px\" }} />\n              {t(\"BLOCK\")}\n            </IconButton>\n          )}\n          {showUnblockOption && (\n            <IconButton onClick={handleUnblockUser} className=\"unblock-btn\">\n              <BlockIcon style={{ fontSize: \"16px\", paddingRight: \"8px\" }} />\n              {t(\"UNBLOCK\")}\n            </IconButton>\n          )}\n        </Box>\n      </div>\n      <Dialog\n        // open={open}\n        // onClose={handleClose}\n\n        open={dialogOpen}\n        onClose={handleDialogClose}\n      >\n        <DialogTitle>\n          {\" \"}\n          <Box className=\"h5-title\">{t(\"BLOCK_USER\")}</Box>\n        </DialogTitle>\n        <DialogContent>\n          <Box className=\"h5-title\">\n            Are you sure you want to block this user?\n          </Box>\n          <Box py={2}>\n            <TextField\n              id=\"reason\"\n              name=\"reason\"\n              label={\n                <span>\n                  {t(\"REASON\")}\n                  <span style={{ color: \"red\", marginLeft: \"2px\" }}>*</span>\n                </span>\n              }\n              multiline\n              rows={3}\n              variant=\"outlined\"\n              fullWidth\n              value={reason}\n              onChange={(e) => setReason(e.target.value)}\n            />\n          </Box>{\" \"}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDialogClose} className=\"custom-btn-default\">\n            {\"CANCEL\"}\n          </Button>\n          <Button\n            onClick={handleBlockUserConfirmed}\n            className=\"custom-btn-primary\"\n            disabled={!reason}\n            style={{\n              background: !reason ? \"rgba(0, 67, 103, 0.5)\" : \"#004367\",\n            }}\n          >\n            {\"BLOCK\"}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Alert severity=\"info\" style={{ margin: \"10px 0\" }}>\n        {t(\"YOUR_CHAT_WILL_DISAPPEAR\")}\n      </Alert>\n      <div className={classes.chat}>\n        {messages.map((msg, index) => (\n          <div key={index}>\n            {index === 0 ||\n            getTimeAgo(msg.timestamp) !==\n              getTimeAgo(messages[index - 1].timestamp) ? (\n              <div style={{ margin: \"0 auto\", textAlign: \"center\" }}>\n                <Box className=\"dayDisplay\">{getTimeAgo(msg.timestamp)}</Box>\n              </div>\n            ) : null}\n            <div\n              className={\n                msg.sender_id === loggedInUserId\n                  ? `${classes.senderMessage} ${classes.message}`\n                  : `${classes.receiverMessage} ${classes.message}`\n              }\n            >\n              <div>{msg.message}</div>\n              <Box\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"flex-end\",\n                }}\n              >\n                <div\n                  style={{\n                    fontSize: \"10px\",\n                    color: \"#484848\",\n                    fontWeight: \"400\",\n                  }}\n                >\n                  {getTime(msg.timestamp)}\n                </div>\n                {msg.sender_id === loggedInUserId ? (\n                  <div\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      fontSize: \"13px\",\n                      justifyContent: \"flex-end\",\n                    }}\n                  >\n                    {msg.is_read ? (\n                      <DoneAllIcon\n                        style={{\n                          color: \"#00ebff\",\n                          fontSize: \"15px\",\n                          paddingLeft: \"6px\",\n                        }}\n                      />\n                    ) : (\n                      <DoneAllIcon\n                        style={{\n                          color: \"#bdbaba\",\n                          fontSize: \"18px\",\n                          paddingRight: \"10px\",\n                        }}\n                      />\n                    )}\n                    {/* {msg.is_read ? \"Read\" : \"Delivered\"} */}\n                  </div>\n                ) : null}\n              </Box>\n            </div>\n            {msg.is_accepted ? (\n              <div style={{ textAlign: \"center\" }}>\n                <Alert\n                  className=\"my-10\"\n                  iconMapping={{\n                    success: <CheckCircleOutlineIcon fontSize=\"inherit\" />,\n                  }}\n                >\n                  {t(\"YOU_CHAT_ACCEPTED\")}\n                </Alert>\n              </div>\n            ) : null}\n          </div>\n        ))}\n      </div>\n\n      {isBlocked ? (\n        <Alert severity=\"warning\" style={{ marginBottom: \"10px\" }}>\n          {t(\"USER_BLOCKED_YOU_CANNOT\")}\n        </Alert>\n      ) : (\n        <>\n          <div className={classes.messageInput}>\n            <TextField\n              variant=\"outlined\"\n              placeholder=\"Type your message...\"\n              fullWidth\n              className=\"border-none\"\n              style={{\n                background: \"#fff\",\n                border: \"none\",\n                borderRadius: \"5px\",\n              }}\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n              disabled={isBlocked} // Disable input field if user is blocked\n            />\n            <Button\n              onClick={sendMessage}\n              style={{ color: \"#484848\" }}\n              className=\"btn-chat\"\n              disabled={isBlocked} // Disable send button if user is blocked\n            >\n              <SendIcon />\n            </Button>\n          </div>\n        </>\n      )}\n    </div>\n    //      <div className={classes.chatContainer}>\n    //      <div className={classes.chatHeader} style={{ display: \"flex\",alignItems:\"center\" ,justifyContent:\"space-between\"}}>\n    //        <Box  className=\"d-flex\" style={{alignItems:\"center\"}}>\n    //          <IconButton onClick={handleGoBack}>\n    //            <ArrowBackIcon />\n    //          </IconButton>\n    //          <Box\n    //            sx={{ fontSize: \"20px\", fontWeight: \"500\", paddingLeft: \"10px\" ,color:\"#484848\",textAlign:\"left\"}}\n    //          >\n    //            <div>\n    //              <Typography\n    //               className=\"h2-title\"\n    //              >\n    //               Anya Gupta\n    //            </Typography>\n    //            <Box  className=\"h5-title\">Content creator, commisioner</Box>\n    //            </div>\n    //          </Box>\n    //          </Box>\n    //          <Box\n    //           style={{\n    //             display: \"flex\",\n    //             alignItems: \"center\",\n    //             fontSize: \"18px\",\n    //             cursor: \"pointer\",\n    //           }}\n    //         >\n    //           {!isBlocked && (\n    //             <IconButton\n    //               onClick={handleBlockUser}\n    //              className=\"block-btn\"\n    //             >\n    //               <BlockIcon style={{fontSize:\"16px\",paddingRight:\"8px\"}}/>\n    //               {t(\"BLOCK\")}\n    //             </IconButton>\n    //           )}\n    //           {showUnblockOption && (\n    //             <IconButton\n    //               onClick={handleUnblockUser}\n    //              className=\"unblock-btn\"\n    //             >\n    //               <BlockIcon style={{fontSize:\"16px\",paddingRight:\"8px\"}}/>\n    //               {t(\"UNBLOCK\")}\n    //             </IconButton>\n    //           )}\n    //         </Box>\n\n    //      </div>\n    //        <div className={classes.chat}>\n    //         <Box className=\"h5-title my-15\" style={{color:\"#484848\"}}>\n    //        Anya Gupta is a manager with the department of Revenue and taxes and has actively contributed to the growth and authenticity of the knowledge curated for the betterment of the department.\n    // <Box className=\"my-15\">Connect with them to get insights on what they do or simply answers to your question!</Box>\n    // </Box>\n    //        </div>\n    //            <TextField\n    //              variant=\"outlined\"\n    //              placeholder=\"Hello Anya Gupta, I would like to connect with you regarding some queries i had in your course.\"\n    //              fullWidth\n    //              className=\"border-none\"\n    //              style={{ background: \"#fff\", border: \"none\",borderRadius:\"5px\" }}\n\n    //            />\n    //            <Button\n    //              style={{color:\"#484848\"}}\n    //            >\n    //              <SendIcon />\n    //            </Button>\n\n    //    </div>\n  );\n};\n\nexport default Message;\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Footer from \"components/Footer\";\nimport Header from \"components/header\";\nimport { Container } from \"@mui/material\";\nimport Box from '@mui/material/Box';\n\n\n\nconst Terms = () => {\n  const { t } = useTranslation();\n\n  return (\n<div>\n    <Header/>\n    <Container>\n    <Box sx={{fontSize:'18px',color:'#484848',paddingBottom:'10px'}}>{t('TERMS_CONDITIONS')}</Box>\n\n    <p><em>(Last updated on&nbsp;</em><em><strong>19-05-2022</strong></em><em>)</em></p>\n    <p>This website is designed, developed, and maintained by the National Institute of Urban Affairs (NIUA) (Ministry of Housing &amp; Urban Affairs, Government of India) (together referred to as&nbsp;<strong>\"GoI\"</strong>).</p>\n    <p>These terms of use, as amended, govern the usage of NULP (National Urban Learning Platform) by its Users (as defined below) (<strong>\"Terms\"</strong>). NULP is an initiative of the GoI.</p>\n    <p>By using NULP, you have accepted and agree to be governed by these Terms, as may be amended from time to time. The terms \"you\", \"your\" hereinafter refer to any User of NULP, including Registered Users (as defined below).</p>\n    <ol>\n        <li>\n            <p><strong>Definitions</strong></p>\n            <ol type=\"a\">\n                <li>\n                    <p><strong>Administrator</strong> means any natural person who is a Registered User and who is authorized to be an administrator by an Institutional User on behalf of such Institutional User.&nbsp;</p>\n                </li>\n                <li>\n                    <p><strong>Content</strong> means and includes, as the context requires, (i) any text, scripts, graphics, photos, sounds, music, videos, audio-visual combinations, interactive content, features and other materials you may view, access or contribute, (ii) all content and postings that are written, uploaded, submitted, stored, sent, received, shared or otherwise provided by Registered Users, such as posts, comments, feedback, submissions, responses, explanation in forums or groups, for teaching and learning materials, and/or using project/ survey/ observation tools, and (iii) all types of learning material created, uploaded or consumed by a User, such as resources, collections (i.e. sets of ordered resources bundled together to be consumed as a whole).</p>\n                </li>\n                <li>\n                    <p><strong>NULP</strong> means National Urban Learning Platform which&nbsp;supplements traditional capacity building with online learning to enhance skills of urban practitioners in an ever-changing ecosystem. It is accessible online at https://https://nulp.niua.org/.</p>\n                </li>\n                <li>\n                    <p><strong>Institutional User</strong> means and includes MoHUA, National Institute of Urban Affairs, any Urban Local Body or State or organizations who are authorized to operate as a tenant on the NULP.</p>\n                </li>\n                <li>\n                    <p><strong>Registered Users</strong> are (i) Users of NULP, who register themselves as users of NULP in accordance with the requirements specified on NULP, and (ii) Users of NULP who have been registered on NULP by an Administrator with permissions to create, curate, review or publish Content for NULP, and such users can log in to NULP with their registered credentials.</p>\n                </li>\n                <li>\n                    <p><strong>Users</strong> are all-natural persons who access NULP, view or use Content on NULP, and such Users include Registered Users of NULP.</p>\n                </li>\n            </ol>\n        </li>\n        <li>\n            <p><strong>Access and Use</strong></p>\n            <ol type=\"a\">\n                <li>\n                    <p><strong>Users</strong></p>\n                    <ol type=\"I\">\n                        <li>\n                            <p>As a User you represent and warrant that you are legally competent to form a binding contract.</p>\n                        </li>\n                        <li>\n                            <p>If you are agreeing to these Terms on behalf of a department, institution, organization, or other legal entity you hereby represent and warrant that you are duly authorized to agree to these Terms on behalf of that department, institution, organization or entity and these Terms are binding on them.</p>\n                        </li>\n                        <li>\n                            <p>If you are agreeing to these Terms on behalf of a learner hereby represent and warrant that your consent, to access, view and use Content on NULP in accordance with these Terms.</p>\n                        </li>\n                        <li>\n                            <p>If you are a learner, you are accessing NULP to view and use Content on NULP by registering yourself on NULP.</p>\n                        </li>\n                        <li>\n                            <p>Users can:</p>\n                            <ol type=\"I\">\n                                <li>\n                                    <p>access and use Content available on NULP,</p>\n                                </li>\n                                <li>\n                                    <p>create and manage their User profiles, and</p>\n                                </li>\n                                <li>\n                                    <p>share Content with other Users.</p>\n                                </li>\n                            </ol>\n                        </li>\n                        <li>\n                            <p>NULP should be used for learning purposes. As a User, you will be responsible for all your actions and activities in relation to your usage of NULP. All Users must follow the policies and guidelines of NULP as applicable from time to time, such as these “Terms of Use”.</p>\n                        </li>\n                        <li>\n                            <p>Your access and use of NULP may possibly be disrupted due to technical or operational difficulties, without prior notice of downtime.</p>\n                        </li>\n                    </ol>\n                </li>\n                <li>\n                    <p><strong>Registered Users</strong></p>\n                    <ol type=\"I\">\n                        <li>\n                            <p>NULP allows Users to register themselves on NULP by:</p>\n                            <ol type=\"I\">\n                                <li>\n                                    <p>Self-registration</p>\n                                </li>\n                                <li>\n                                    <p>NIUA (Central Program Team) registration</p>\n                                </li>\n                                <li>\n                                    <p>State led registration</p>\n                                </li>\n                            </ol>\n                        </li>\n                        <li>\n                            <p>Depending on your mode of registration, as a Registered User, NULP collects certain data and information about you in accordance with the Privacy Policy of NULP. Registered Users may also choose to give their consent for certain of their data and information to be accessed by Administrators for specified purposes in accordance with the relevant policies and guidelines of NULP as applicable from time to time.</p>\n                        </li>\n                        <li>\n                            <p>Registered Users can use / participate in a variety of offerings on NULP including:</p>\n                            <ol type=\"I\">\n                                <li>\n                                    <p>Submitting / posting / uploading / otherwise providing Content.</p>\n                                </li>\n                                <li>\n                                    <p>Accessing courses or other collections of Content;</p>\n                                </li>\n                                <li>\n                                    <p>Creating or participating in NULP Groups.</p>\n                                </li>\n                            </ol>\n                        </li>\n                        <li>\n                            <p>All Registered Users (including Administrators) must follow the policies and guidelines of NULP as applicable from time to time, including but not limited to these Terms, the Content Policy of NULP and Privacy Policy of NULP. Some Registered Users may have read, write, and edit rights on NULP to create, curate, review or publish Content, the rights given by the Institutional Users.</p>\n                        </li>\n                        <li>\n                            <p>Registered Users are responsible for maintaining the confidentiality of their User ID and Password and responsible for all activities that occur under their User ID and Password. As a Registered User, you agree, inter alia, to provide true, accurate, current and complete information about yourself as prompted by the NULP registration form or provided by you as a visitor or user of a third-party site through which you access NULP. If you provide any information that is untrue, inappropriate, inaccurate, not current or incomplete or there are reasonable grounds to suspect that such information is untrue, inaccurate, inappropriate, not current or incomplete, or not in accordance with these Terms, the administrators and technology support providers of NULP have the right to indefinitely suspend or terminate your registration or block access to and participation in NULP.</p>\n                        </li>\n                        <li>\n                            <p>A Registered User may not transfer their registration to anyone else.</p>\n                        </li>\n                    </ol>\n                </li>\n            </ol>\n        </li>\n        <li>\n            <p><strong>Prohibited Content and Use</strong></p>\n        </li>\n    </ol>\n    <p>Registered Users shall not:</p>\n    <ol>\n        <ol type=\"a\">\n            <li>\n                <p>use NULP for any purpose other than learnings.</p>\n            </li>\n            <li>\n                <p>post, upload, or distribute any defamatory, libellous, or inaccurate Content or other content on NULP.</p>\n            </li>\n            <li>\n                <p>post, upload, or distribute any Content or other content that is unlawful or that a reasonable person could deem to be objectionable, offensive, indecent, pornographic, harassing, threatening, vulgar, hateful, racially, or ethnically offensive, or otherwise inappropriate.</p>\n            </li>\n            <li>\n                <p>contribute any Content (including any of the elements that such Content comprises such as text, scripts, graphics, photos, sounds, music, videos, audio-visual combinations etc.) that infringes upon any third-party rights including but not limited to intellectual property rights such as copyrights or any other legal rights of individual(s)/organisation(s).</p>\n            </li>\n            <li>\n                <p>use NULP in any manner that is harmful to minors, or in any manner that violates the extant&nbsp;<strong>Terms of Use</strong>, the&nbsp;<strong>Privacy Policy,</strong> and the&nbsp;<strong>Content Policy</strong>.</p>\n            </li>\n            <li>\n                <p>impersonate any person or entity, falsely claim an affiliation with any person or entity, or access NULP accounts of others without permission, or perform any other fraudulent activity.</p>\n            </li>\n            <li>\n                <p>delete the copyright or other proprietary rights on NULP or on any licensed Content.</p>\n            </li>\n            <li>\n                <p>assert, or authorize, assist, or encourage any third party to assert, against NULP any intellectual property infringement claims regarding any Content you have used, submitted, or otherwise made available on or through NULP.</p>\n            </li>\n            <li>\n                <p>make unsolicited offers, advertisements, proposals, or send junk mail or spam to other Users (including, but not limited to, unsolicited advertising, promotional materials, offerings or other solicitation material, bulk mailing of commercial advertising, chain mail, informational announcements, charity requests, and petitions for signatures).</p>\n            </li>\n            <li>\n                <p>use NULP for any illegal purpose, or in violation of any local, state, national, or international law, including, without limitation, laws governing intellectual property and other proprietary rights, and data protection and privacy.</p>\n            </li>\n            <li>\n                <p>defame, harass, abuse, threaten or defraud Users, or collect, or attempt to collect, personal information about Users or third parties without their consent.</p>\n            </li>\n            <li>\n                <p>remove, circumvent, disable, damage, or otherwise interfere with security-related features of NULP.</p>\n            </li>\n            <li>\n                <p>modify, adapt, translate or create derivative works based upon Content on NULP or any part thereof, except and only to the extent expressly permitted by the license applicable to such Content; or</p>\n            </li>\n            <li>\n                <p>intentionally interfere with or damage operation of NULP or any user's usage of it, by any means, including without limitation by participation in any denial-of-service type attacks or by uploading or otherwise disseminating viruses, adware, spyware, worms, or other malicious code.</p>\n            </li>\n        </ol>\n        <li>\n            <p><strong>Privacy and Personal Information</strong></p>\n            <ol type=\"a\">\n                <li>\n                    <p>NULP takes the privacy of its users very seriously. Please review the entire Privacy Policy of NULP.</p>\n                </li>\n                <li>\n                    <p>By using NULP and/or by providing your information, you consent to the collection and use of the information you disclose on NULP in accordance with the policies and guidelines of NULP as applicable from time to time, including but not limited to the Privacy Policy of NULP.</p>\n                </li>\n            </ol>\n        </li>\n        <li>\n            <p><strong>Content Policy of NULP</strong></p>\n            <ol type=\"a\">\n                <li>\n                    <p>NULP is an open content repository that has been built with the purpose to enable greater access to learning and teaching content. When you use NULP, you join a vast community of learners and creators using NULP which involves a certain level of trust.</p>\n                </li>\n                <li>\n                    <p>Users are expected to respect that trust and be responsible about their usage of NULP and all its Content and follow all relevant terms, policies and guidelines applicable to Content, including the&nbsp;<strong>Content Policy of NULP</strong>.</p>\n                </li>\n                <li>\n                    <p>By submitting / uploading / creating/ publishing Content on NULP and following the open license frameworks adopted by NULP, Registered Users recognize and accept that the Content will be accessed and used by any individual, institution or organization through various platforms, portals, and applications in accordance with license conditions.</p>\n                </li>\n                <li>\n                    <p>It shall be the sole responsibility of Registered Users to ensure that proper and correct attributions, acknowledgements, and sourcing references are given to the Content and individual(s)/ institution(s) that have been involved in the development and creation of Content and wherever Content has been quoted/used.</p>\n                </li>\n                <li>\n                    <p>It shall be the responsibility of Registered Users not to infringe upon any third-party rights including but not limited to intellectual property rights such as copyrights or any other legal rights of individual(s)/organization(s) with regards to Content (including all the elements that such Content comprises such as text, scripts, graphics, photos, sounds, music, videos, audio-visual combinations etc.) contributed on NULP. For any legal matter arising out of infringement of such rights by the Registered User, such Registered User shall be solely responsible for any financial or other damages arising out of such violations and disputes.</p>\n                </li>\n            </ol>\n        </li>\n        <li>\n            <p><strong>Changes in NULP Policies</strong></p>\n        </li>\n    </ol>\n    <p>These Terms (including any policies, terms, and guidelines) may be updated or modified from time to time and the revised Terms will be reflected herein. Your continued use of NULP constitutes acceptance of the then-current Terms. Hence, we encourage you to visit this page periodically to review any changes.<strong>&nbsp;</strong></p>\n    <p><strong>Limited Liability</strong></p>\n    <ol>\n        <ol type=\"a\">\n            <li>\n                <p>As a User you shall not collect any personal information or sensitive personal data of other Users through NULP, but if you do collect such information, you must ensure that such collection, storage, transfer, and disclosure is in accordance with Indian law currently in force, including but not limited to the (Indian) Information Technology (Reasonable Security Practices and Procedures) Rules, 2011.</p>\n            </li>\n            <li>\n                <p>GoI, administrators and technology support providers of NULP and Institutional Users do not guarantee the accuracy of any of the Content made available on the NULP. GoI, administrators and technology support providers of NULP and Institutional Users do not take responsibility for any external websites linked on NULP, including compliance with Indian Government Web Guidelines.</p>\n            </li>\n            <li>\n                <p>Registered Users are solely responsible for maintaining the security and confidentiality of the username and password. Any unauthorized use of your username or password or any other breach of security must be notified by sending an email notification to nulp@niua.org. GoI, administrators and technology support providers of NULP and Institutional Users will not be liable for any loss or damage arising from failure to comply with this provision.</p>\n            </li>\n            <li>\n                <p>Registered Users are responsible for any offensive or unlawful Content posted, transmitted, sent or communicated through NULP. GoI, administrators and technology support providers of NULP and Institutional Users shall not be held responsible for any offensive or unlawful Content posted, uploaded, transmitted, sent and received through NULP.</p>\n            </li>\n            <li>\n                <p>In no event will GoI, NIUA, administrators and technology support providers of NULP be liable for any expense, loss or damage including, without limitation, indirect or consequential loss or damage, or any expense, loss or damage whatsoever arising from use, or loss of use, of data, arising out of or in connection with the access or use of NULP.</p>\n            </li>\n        </ol>\n        <li>\n            <p><strong>Termination</strong><strong>&nbsp;-&nbsp;</strong>Any violation or breach of these Terms, including while investigating complaints or alleged violation of these Terms, may lead to suspension or termination of your registration and access to NULP.&nbsp;</p>\n        </li>\n        <li>\n            <p><strong>Electronic Agreement</strong><strong>&nbsp;-</strong> This document is a written agreement, an electronic record and valid and enforceable electronic agreement / contract under Information Technology Act, 2000 (as applicable in Republic of India) and rules there under as applicable and the amended provisions pertaining to electronic records in various statutes under applicable Indian laws. This electronic record is generated by a computer system and does not require any physical or digital signatures. Your usage of NULP shall be your deemed acceptance of these Terms and all the modifications and updates thereto.</p>\n        </li>\n        <li>\n            <p><strong>Governing Law and Dispute Resolution</strong><strong>&nbsp;-</strong> These Terms shall be governed by and construed in accordance with the Indian law. Any dispute arising under these Terms shall be subject to the exclusive jurisdiction of the courts of New Delhi, India.</p>\n        </li>\n        <li>\n            <p><strong>Disclaimer</strong></p>\n        </li>\n    </ol>\n    <p>NULP IS AVAILABLE ON AN \"AS IS\" BASIS AND THERE ARE NO WARRANTIES OF ANY KIND WITH RESPECT TO NULP. GOI AND THE ADMINISTRATORS AND TECHNOLOGY SUPPORT PROVIDERS OF NULP SPECIFICALLY DISCLAIM ANY IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT. ACCESS AND USE OF NULP (INCLUDING ANY CONTENT OR INFORMATION) IS ENTIRELY AT YOUR OWN RISK. IN NO EVENT WILL NIUA OR THE ADMINISTRATORS AND TECHNOLOGY SUPPORT PROVIDERS OF NULP BE LIABLE FOR ANY EXPENSE, LOSS OR DAMAGE INCLUDING, WITHOUT LIMITATION, INDIRECT OR CONSEQUENTIAL LOSS OR DAMAGE, OR ANY EXPENSE, LOSS OR DAMAGE WHATSOEVER ARISING FROM USE, OR LOSS OF USE, OF DATA, ARISING OUT OF OR IN CONNECTION WITH THE USE OF NULP. WHEN YOU SELECT A LINK TO AN OUTSIDE WEBSITE, YOU ARE LEAVING NULP AND ARE SUBJECT TO THE PRIVACY AND SECURITY POLICIES OF THE OWNERS / SPONSORS OF THE OUTSIDE WEBSITE / DOMAIN.</p>\n    <h3><strong>Privacy Policy of NULP</strong></h3>\n    <p><em>( Last updated on&nbsp;</em><em><strong>19-05-2022</strong></em><em>&nbsp;)</em></p>\n    <p>NULP (National Urban Learning Platform) is the Learning Platform for the Urban practitioners across India. NULP is a joint initiative of Ministry of Housing and Urban Affairs, Government of India and the National Institute of Urban Affairs (NIUA). Users of NULP can access content for learning on the web at https://nulp.niua.org/, through the NULP mobile application, and the web application.</p>\n    <p>The privacy and protection of data of NULP Users is of utmost importance and shall be ensured at all times. This Privacy Policy shall cover details of data protection and management on NULP, including how personal data of users of NULP is managed, used and processed. Users are individuals who access and use NULP and broadly comprise (i) users who access and use NULP by registering themselves on NULP (&nbsp;<strong>\"Users\"</strong>), (ii) users who access and use NULP after being registered by the Central Program Team on NULP (\"<strong>Registered Users</strong> \"), (iii) users who are registered on NULP and are authorized to be administrators on behalf of Institutional Users (such as TERI,WRI, State Urban Departments etc.) (\"<strong>Administrators\"</strong> ). Institutional Users operate as tenants on NULP. More details on the rights and responsibilities of Users and Registered Users are set out in the&nbsp;<strong>Terms of Use</strong>.</p>\n    <p>By accessing and using NULP, and by providing your information on NULP, you consent to the collection and use of the information you disclose on NULP by NULP and relevant Administrators of NULP in accordance with the policies and guidelines of NULP as applicable from time to time, including the Terms of Use and this Privacy Policy. If you do not agree with the contents of this policy, please do not access or use NULP.</p>\n    <p>This&nbsp;<strong>Privacy Policy</strong> should be read in conjunction with the&nbsp;<strong>Terms of Use</strong>. Defined terms used but not defined herein shall have the meaning ascribed to them in the&nbsp;<strong>Terms of Use</strong>.</p>\n    <ol>\n        <li>\n            <p><strong>Rights of Users:</strong></p>\n            <ol type=\"a\">\n                <li>\n                    <p>Right to fair, transparent, and lawful collection of your data and information on NULP.</p>\n                </li>\n                <li>\n                    <p>Right to be informed about the ways in which your data and information that is collected on NULP will be used</p>\n                </li>\n                <li>\n                    <p>Right to receive all the information you need to provide informed consent before collection of your personally identifiable information or sensitive personal data or information on NULP and sharing of the same with relevant Administrators</p>\n                </li>\n                <li>\n                    <p>Right to revoke such consent</p>\n                </li>\n                <li>\n                    <p>Right to privacy and confidentiality regarding your personal data and information</p>\n                </li>\n                <li>\n                    <p>Right to proper use of your personal data and information by Administrators for specified and legitimate purposes related to your use of NULP.</p>\n                </li>\n                <li>\n                    <p>Right to keep your personal information accurate and up to date</p>\n                </li>\n                <li>\n                    <p>Right to secure collection, handling and storage of your personal data and information</p>\n                </li>\n                <li>\n                    <p>Right to protection from unauthorized or unlawful use of your personal data and information</p>\n                </li>\n                <li>\n                    <p>Right to view and access NULP privacy policy.</p>\n                </li>\n            </ol>\n        </li>\n        <li>\n            <p><strong>Responsibilities of Administrators with respect to User data and information</strong></p>\n            <ol type=\"a\">\n                <li>\n                    <p>To respect the privacy and data protection rights of Users.</p>\n                </li>\n                <li>\n                    <p>To ensure the security of and use of data (especially any personal information) shared by Registered Users is limited solely to the uses and purposes mentioned here</p>\n                </li>\n                <li>\n                    <p>To know that any use of data for purposes outside of the proper use shall be considered violation of the terms of the policies of NULP as well as applicable laws and policies of India and they shall be responsible and liable for such actions and for any loss or damage arising from failure to comply with this obligation</p>\n                </li>\n                <li>\n                    <p>To ensure their communication (if any) with Registered Users is explicitly limited and relevant to the purpose of their usage of NULP and meets the Appropriateness standards set out in the Content Policy of NULP</p>\n                </li>\n                <li>\n                    <p>To ensure that their Content and programs on NULP are not used for any of the Prohibited Uses set out in the Terms of Use</p>\n                </li>\n            </ol>\n        </li>\n        <li>\n            <p><strong>What User data and information is collected on NULP?</strong></p>\n            <ol type=\"a\">\n                <li>\n                    <p>All&nbsp;<strong>Users</strong> can expect the following data and information of theirs to be collected on NULP:</p>\n                    <ol type=\"I\">\n                        <li>\n                            <p><strong>Basic Information</strong>: User Type (eg. learner, creator, others)</p>\n                        </li>\n                        <li>\n                            <p><strong>Geographical Information</strong>: State and District</p>\n                        </li>\n                        <li>\n                            <p><strong>Preferences:&nbsp;</strong>Domain of interest, Language of Courses / training, Medium of Content, Sub domain interest areas</p>\n                        </li>\n                        <li>\n                            <p><strong>NULP Usage:&nbsp;</strong>Usage history, time spent on Content, Content created/ contributed / published and its usage, progress in trackable collections of Content (e.g., courses), scores &amp; assessment results, question-wise answers and other telemetry data in relation to usage of NULP, badges generated, certificates issued.</p>\n                        </li>\n                        <li>\n                            <p><strong>IP Address</strong>: The IP address of a User is collected once for the limited purpose of determining your approximate location - the State, City and District of origin. The IP address is not stored in the database of Registered Users and the precise location of any User cannot be determined. The User can confirm or modify the State and District details determined based on the IP address.</p>\n                        </li>\n                        <li>\n                            <p>NULP uses hash digest functions and fingerprinting to create unique identifiers for different devices. NULP also uses FCM tokens to enable push notifications to your devices, should you choose to opt for the same.</p>\n                        </li>\n                        <li>\n                            <p>NULP also generates a unique identifier for each device used to access NULP.</p>\n                        </li>\n                    </ol>\n                </li>\n                <li>\n                    <p>In case of&nbsp;<strong>Registered Users</strong>, they can expect the following additional information of theirs to be collected on NULP:</p>\n                    <ol type=\"I\">\n                        <li>\n                            <p>Name</p>\n                        </li>\n                        <li>\n                            <p>Email Address / Mobile number, and</p>\n                        </li>\n                        <li>\n                            <p>NULP Password</p>\n                        </li>\n                    </ol>\n                </li>\n                <li>\n                    <p><strong>Registered Users&nbsp;</strong>have an option to provide the following information of theirs (\"<strong>Declared Information</strong>\"), namely:</p>\n                    <ol type=\"I\">\n                        <li>\n                            <p>Both Email Address and Mobile Number,</p>\n                        </li>\n                        <li>\n                            <p>Block,</p>\n                        </li>\n                        <li>\n                            <p>Organisation / ULB name,</p>\n                        </li>\n                        <li>\n                            <p>ID as provided by your state/organisation.</p>\n                        </li>\n                    </ol>\n                </li>\n                <li>\n                    <p>No other personally identifiable information or sensitive personal data or information of the User is collected.</p>\n                </li>\n                <li>\n                    <p>All&nbsp;<strong>Users&nbsp;</strong>(using the NULP mobile app to access NULP) have a profile which specifies the User type, Geographical Information and Preferences. They may choose to customize their profile by changing these details at any time as well as providing their name. If Users are using NULP as a guest User, i.e. without registering on NULP, your User type and Preferences are stored locally on your device. Only Registered Users can view their profile on both the NULP mobile app as well as the NULP web portal, and their profiles specify all the additional information provided by such a Registered User.</p>\n                </li>\n                <li>\n                    <p><strong>Children as Registered Users</strong>: NULP collects the year of birth of a User in order to determine whether a User is below 18 years. In the event a person under 18 years of age is registering on NULP, NULP prompts the User to provide the email address or mobile number of a parent / guardian for the purposes of registration. Children under 18 years of age are neither required to nor encouraged to provide their personal information.</p>\n                </li>\n                <li>\n                    <p>You represent to us that the data and information you provide on NULP from time to time is and shall be correct, current and updated and you have all the rights, permissions and consents to provide such data and information. Your providing the information or data and the consequent storage, collection, usage, transfer, access or processing of the same in accordance with the&nbsp;<strong>Terms of Use</strong> and this&nbsp;<strong>Privacy Policy</strong> shall not be in violation of any third party agreement, laws, charter documents, judgments, orders and decrees.</p>\n                </li>\n            </ol>\n        </li>\n        <li>\n            <p><strong>How is User data and information collected?</strong></p>\n            <ol type=\"a\">\n                <li>\n                    <p>Basic Information and Preferences are collected when a User accesses and uses NULP for the first time. These details can be updated by the User from their profile.</p>\n                </li>\n                <li>\n                    <p>Usage data of Users is collected as and when a User accesses, uses and navigates NULP.</p>\n                </li>\n                <li>\n                    <p>While registering for the first time, additional information like Mobile number, Date of Birth etc. are captured</p>\n                </li>\n                <li>\n                    <p>Declared Information of Registered Users is collected with their explicit consent when they choose to provide the same on NULP, through their profile or otherwise.</p>\n                </li>\n            </ol>\n        </li>\n        <li>\n            <p><strong>Who has access to User data and information?</strong></p>\n            <ol type=\"a\">\n                <li>\n                    <p>NULP Usage data (including Usage across the States and Cities) is a part of anonymised and aggregated data sets that is accessible to relevant Administrators of NULP and to the employees, contractors or subcontractors of the technology service providers of NULP.</p>\n                </li>\n                <li>\n                    <p>If you are a User, your Basic Information, Geographical Information, Preferences, and Usage data is accessible to the employees, contractors or subcontractors of the technology service providers of NULP (under strict confidentiality obligations) if they need to access the data to process it on behalf of NULP or an Administrator or to provide the services available on NULP. For Registered Users, your Name is also accessible in this manner.</p>\n                </li>\n                <li>\n                    <p>Usage data which is anonymised and aggregated by State and Cities is also available publicly on NULP.</p>\n                </li>\n                <li>\n                    <p>NULP runs on the License of Creative Commons Attribution&nbsp;</p>\n                </li>\n                <li>\n                    <p>Your data and information is only accessible outside of the NULP platform when it is necessary to offer the service, comply with law, or with your permission.</p>\n                </li>\n            </ol>\n        </li>\n        <li>\n            <p><strong>What is User data and information used for?</strong></p>\n            <ol type=\"a\">\n                <li>\n                    <p>NULP processes your data and information when necessary for providing access to Content for learning purposes and running programs on NULP. These purposes are legitimate. The uses of your data are set out below:</p>\n                    <ol type=\"I\">\n                        <li>\n                            <p>To create a profile for you to have a customized experience on NULP</p>\n                        </li>\n                        <li>\n                            <p>To suggest relevant Content for you to conveniently discover Content based on your preferences, activities on NULP, and Content you are viewing on NULP</p>\n                        </li>\n                        <li>\n                            <p>To enable you to access and use Content on NULP;</p>\n                        </li>\n                        <li>\n                            <p>To enable you to participate in programs run by various national &amp; international organisations on NULP</p>\n                        </li>\n                        <li>\n                            <p>To provide you push notifications on your hand-held devices, only if you have provided permission for the same during app installation;</p>\n                        </li>\n                        <li>\n                            <p>To generate badges for or issue certificates to you upon completion of milestones;</p>\n                        </li>\n                        <li>\n                            <p>To maintain records of your progress and certificates/badges in relation to collections of Content you have accessed and used;</p>\n                        </li>\n                        <li>\n                            <p>To measure interest in the offerings on NULP and to improve NULP over time;</p>\n                        </li>\n                        <li>\n                            <p>To track and analyse usage of Content on NULP by Administrators and Content providers to improve NULP and its offerings over time;</p>\n                        </li>\n                        <li>\n                            <p>To assess, evaluate, validate Content submitted / posted / uploaded by Registered Users;</p>\n                        </li>\n                        <li>\n                            <p>To report anonymized usage of NULP and its Content by Administrators to improve NULP over time;</p>\n                        </li>\n                        <li>\n                            <p>To contact you and deliver information, notices, seek feedback or other communications in connection with your usage of NULP. By accepting the&nbsp;<strong>Terms of Use</strong> including the Privacy Policy, you expressly agree to receive this information;</p>\n                        </li>\n                        <li>\n                            <p>To resolve disputes, troubleshoot problems, detect and protect you against fraud and other criminal activity, enforce the Terms of Use and any other agreements;</p>\n                        </li>\n                        <li>\n                            <p>At times multiple users may be looked at to identify problems or resolve disputes, and in particular may examine your information or data to identify users using multiple User IDs or aliases. Your information or data may be compared or reviewed for errors, omissions and for accuracy; and</p>\n                        </li>\n                        <li>\n                            <p>For any other use that may be described to you at the time of collection.</p>\n                        </li>\n                    </ol>\n                </li>\n                <li>\n                    <p>The administrators and technology support providers of NULP may use third parties as service providers to facilitate or outsource one or more aspects of service operations that are provided on NULP (e.g., search technology, discussion boards, technical service providers, affiliate) and therefore some of your information or data may be provided directly to these service providers. These service providers are subject to confidentiality and other legal restrictions that prohibit their use of the information provided to them for any purpose other than to facilitate specific website related operations.</p>\n                </li>\n                <li>\n                    <p>If we wish to use your data and information for a new purpose, not covered by this Privacy Policy, then we will provide you with a new notice explaining this new use prior to commencing the processing and setting out the relevant purposes and processing conditions. Where and whenever necessary, we will seek your prior consent to the new processing, unless authorized by law.</p>\n                </li>\n                <li>\n                    <p>In any event, your data will not be used for any of the following purposes:</p>\n                    <ol type=\"I\">\n                        <li>\n                            <p>Rent or sale or other commercial purposes;</p>\n                        </li>\n                        <li>\n                            <p>Advertising or marketing;</p>\n                        </li>\n                        <li>\n                            <p>Phone calls or other forms of unsolicited communication that is not related to your usage of NULP;</p>\n                        </li>\n                        <li>\n                            <p>Building a personal profile, other than for learning purposes on NULP;</p>\n                        </li>\n                        <li>\n                            <p>Any of the Prohibited Purposes set out in the&nbsp;<strong>Terms of Use</strong>; and</p>\n                        </li>\n                        <li>\n                            <p>Any purpose that is not disclosed in this policy or on NULP.</p>\n                        </li>\n                    </ol>\n                </li>\n                <li>\n                    <p>Administrators are responsible for any use of data and information outside the proper use and shall be held accountable for the violation of the terms and policies of NULP, as well as applicable laws and policies of India for any misuse. Administrators shall be liable for such actions and for any loss or damage arising from failure to comply with the obligation of proper use of your data and information. Should you believe that your data or information is being used in a manner inconsistent with this Privacy Policy, please contact the NULP support team with the details of your concern by sending an email to&nbsp;<strong>nulp@niua.org</strong>.</p>\n                </li>\n            </ol>\n        </li>\n        <li>\n            <p><strong>How is User data and information stored?</strong></p>\n            <ol type=\"a\">\n                <li>\n                    <p>Reasonable and appropriate security practices and procedures are being adopted to secure your personal data and information in accordance with Indian laws currently in force, including the Information Technology (Reasonable Security Practices and Procedures and Sensitive Personal Data or Information) Rules, 2011. These measures include administrative, physical security, and technical controls in order to safeguard your personal data and information.</p>\n                </li>\n                <li>\n                    <p>Your data, including your Declared Information, any personally identifiable information or sensitive personal data or information is securely stored using Microsoft Azure cloud services which have its servers in India. Your data and information will primarily be stored in electronic form however certain data may also be stored in physical form.</p>\n                </li>\n                <li>\n                    <p>Third party service providers are engaged to store and process your data. These service providers are contractually bound to follow reasonable security standards to safeguard your data.</p>\n                </li>\n                <li>\n                    <p>Your email address and mobile number and any other personally identifiable information is only collected should you choose to provide the same and it is encrypted and stored securely. Personally identifiable information is only shared with Administrators for purposes specified to you, with your explicit consent and under the obligation that the Administrators will use such information only in connection with your usage of NULP.</p>\n                </li>\n                <li>\n                    <p>Your IP address is only collected once for the limited purpose of ascertaining and suggesting your State and District. Your IP address is not stored on NULP at any time.</p>\n                </li>\n                <li>\n                    <p>Additionally, a variety of methods such as network and infrastructure security, encryption and manual security procedures are used to secure your information and data against loss or damage and to help protect the accuracy and security of your personal information / general information / usage data and to prevent unauthorized access or improper use. If you think that NULP or any of your personal information / general information / usage data is not secure or that there has been unauthorized access to the website or your personal data, please contact&nbsp;<strong>nulp@niua.org</strong> immediately.</p>\n                </li>\n                <li>\n                    <p>Although NULP strives to protect your personal information and data, it cannot guarantee the security of your data while it is being transmitted to its site; any transmission is at your own risk. Once your information has been received, reasonable procedures and security features are in place to reasonably endeavour to prevent unauthorized access in accordance with Indian law.</p>\n                </li>\n            </ol>\n        </li>\n        <li>\n            <p><strong>How long is User data and information stored?</strong></p>\n            <ol type=\"a\">\n                <li>\n                    <p>Your data will not be retained for a period more than necessary to fulfil the purposes outlined in this Privacy Policy, unless a longer retention period is required by law or for directly related legitimate purposes.</p>\n                </li>\n            </ol>\n        </li>\n        <li>\n            <p><strong>What are the system permissions required by the NULP?</strong></p>\n            <ol type=\"a\">\n                <li>\n                    <p>Microphone - Your system Microphone will be used if voice recording is explicitly requested as part of a Content for the purposes of practice. This voice recording is only stored locally on your system. Your system Microphone will be used if a Registered User creating Content wants to add a voice recording to Content. This voice recording will become part of the Content.</p>\n                </li>\n                <li>\n                    <p>Camera - Your system Camera will only be used if you want to scan QR codes to access Content on NULP.</p>\n                </li>\n                <li>\n                    <p>Access to file manager / files - This is used by the NULP android / iOS applications (as may be applicable) to transfer Content to an external storage space. Additionally, on the NULP desktop app, this is used to transfer Content to and from an external storage device like a pen drive or SD card.</p>\n                </li>\n            </ol>\n        </li>\n        <li>\n            <p><strong>Cookies: How are they used? What types of cookies are used? How to manage your cookies?</strong></p>\n            <ol type=\"a\">\n                <li>\n                    <p>Out of all the consumption clients, only the NULP web portal uses cookies. NULP only uses session cookies, none of the other types of cookies. NULP session cookies are used to store URLs in order to better redirect users to the right pages. For example, when a User signs-in to NULP from the courses page, they'll need to be redirected back to the courses page at the end of sign-in for a cleaner user experience. Session cookies are also used to store whether to use the Content Delivery Network (CDN) to pull images, plugins and other assets that are shown on the user interface. This is to enable faster loading of the pages the User interacts with. No personal information, or user preferences are stored in cookies.</p>\n                </li>\n                <li>\n                    <p>Users can clear their cookies by going to their browser settings and clearing their browsing data (by specifically checking off the option to clear cookies). Doing so, does not impact their user experience on NULP as usage of NULP sets the cookies again. Users can also choose to block cookies from the settings as well. Doing so, will mean that certain things on NULP will not function properly. For eg., images/plugins may take a long time to load and the user will not be taken to the right pages after login.</p>\n                </li>\n            </ol>\n        </li>\n        <li>\n            <p><strong>Data and information NULP is not responsible for</strong></p>\n            <ol type=\"a\">\n                <li>\n                    <p>NULP may have Content, webpages, cookies, files, software, data or other information or communication links that are originated, created or posted by third parties that may have the capability to collect, store or use your data or information. The administrators and technology support providers of NULP are not responsible for such data or information collected, stored or used by third parties even if such third parties use NULP to collect, store or use such data or information.</p>\n                </li>\n                <li>\n                    <p>If you access NULP through a third party QR code scanner or through a web browser, the administrators and technology support providers of NULP are not responsible for the data or information collected by such third parties.</p>\n                </li>\n                <li>\n                    <p>NULP is not responsible for the privacy practices of other websites and users need to be aware of the data privacy practices of such sites should they choose to use these links.</p>\n                </li>\n            </ol>\n        </li>\n        <li>\n            <p><strong>Compliance with laws and law enforcement</strong></p>\n            <ol type=\"a\">\n                <li>\n                    <p>The administrators and technology support providers of NULP cooperate with governments and law enforcement agencies or any third party by any order under law for the time being in force to enforce and comply with the law. Any information about you will be disclosed to the government or law enforcement officials or private parties as, in the sole discretion of the administrators and technology support providers, if they believe necessary or appropriate to respond to claims and legal process, to protect their property and rights or a third party, to protect the safety of the public or any person, or to prevent or stop any illegal, unethical or legally actionable activity.</p>\n                </li>\n                <li>\n                    <p>Your information or data may also be provided to various tax authorities upon any demand or request from them. You acknowledge that NULP can be accessed from anywhere in the world and it will have users from all over the world and therefore governments, judiciaries or law enforcement authorities in various parts of the world may have or assume jurisdiction over NULP and NULP may be subject to the laws, rules, regulations and judgments of various countries, states, municipalities or provinces where it may not have a direct presence to store, process, collect, use or keep your information or data. You acknowledge that government or law enforcement authorities in the countries where your data or information is stored may have the right to decrypt, collect, monitor or access your data or information, which actions are completely out of the control of the administrators and technology support providers of NULP. The administrators and technology support providers of NULP do not take any responsibility for such actions.</p>\n                </li>\n            </ol>\n        </li>\n        <li>\n            <p><strong>Deleting your information</strong></p>\n            <ol type=\"a\">\n                <li>\n                    <p>If you wish to have the information or data that you have provided deleted, you can always do so by sending an email request to&nbsp;<strong>nulp@niua.org</strong>. You may note that deletion of certain information or data may lead to cancellation of your registration with NULP and your access to certain features of NULP. You also agree and acknowledge that certain data or information cannot be deleted or may be prohibited to be deleted as required under any applicable law, law enforcement requests or under any judicial proceedings.</p>\n                </li>\n            </ol>\n        </li>\n        <li>\n            <p><strong>Changes to this Privacy Policy</strong></p>\n            <ol type=\"a\">\n                <li>\n                    <p>NULP reserves the right to modify this privacy statement at any time, so please review it frequently. If a material change is made to the practices regarding your personally identifiable information, you will be notified, by means of a notice on NULP.</p>\n                </li>\n            </ol>\n        </li>\n        <li>\n            <p><strong>How to contact us?</strong></p>\n            <ol type=\"a\">\n                <li>\n                    <p>If you have any queries, comments, or requests, please contact us by sending an email to&nbsp;<strong>nulp@niua.org</strong>.</p>\n                </li>\n            </ol>\n        </li>\n    </ol>\n    <p>Read Terms of UseRead Content Policy of NULP</p>\n    <h3><strong>Content Policy of NULP</strong></h3>\n    <p><em>(Last updated on&nbsp;</em><em><strong>19-05-2022</strong></em><em>&nbsp;)</em></p>\n    <p>This Content Policy sets out the guidelines for content to be followed on NULP. The NULP Strategy and Approach Paper clearly articulates one of the intentions of NULP - to create a common repository of open content resources for easy access to urban stakeholders across the country. This Content Policy sets out the principles and process to achieve this end.</p>\n    <p>The content creation and curation process on NULP is envisaged to be an open process with low barriers to entry. It celebrates and encourages participation by making it simple to create and share content on the platform. It avoids creating barriers to entry in the form of centralized review workflows and federates that process to the community to police itself. Institutional Users, through their Administrators, being the custodians of NULP, frame the guidelines and curation rules, and delegate the authority to curate to the community. This creates a platform that is open, has low barrier to entry, while the quality of content is ensured by the federated process.</p>\n    <p>Set out below are some common-sense rules that all Users must comply with respect to Content on NULP. These rules are to be taken seriously as Administrators are required to enforce the same strictly. Users are requested not to look for loopholes or ways around these guidelines and respect the spirit in which they have been created.</p>\n    <p>Please read this Content Policy carefully, to learn more about the rules on appropriateness, accuracy, intellectual property rights and licensing that govern Content on NULP.</p>\n    <p>This Content Policy should be read in conjunction and together with the&nbsp;<strong>Terms of Use</strong>. Defined terms used but not defined herein shall have the meaning ascribed to them in the&nbsp;<strong>Terms of Use</strong>.</p>\n    <h4><strong>Principles for Content on NULP</strong></h4>\n    <ol type=\"a\">\n        <li>\n            <p>Content on the NULP will be contributed by various content contributors across the country. The intent is to enable access to a wide range and diverse content from across the country so as to enable better contextualization of content and wide access for end users.</p>\n        </li>\n        <li>\n            <p>All content published on NULP belongs to the creators of content be it individuals or organizations that have made content available on the platform, they are responsible for use by open learning platforms and applications therefore, content creators are responsible for ensuring accuracy and appropriateness of content.</p>\n        </li>\n        <li>\n            <p>Users can make multilingual and diverse content on NULP.</p>\n        </li>\n        <li>\n            <p>Content on NULP means and includes, (i) content that is written, uploaded, submitted, stored, sent, received, or shared using NULP, learning content on urban domains, best practices, challenges faced by ULB’s other such learning materials meant for wide user consumption, and (iii) other types of Content described in the&nbsp;<strong>Terms of Use</strong>.</p>\n        </li>\n        <li>\n            <p>Registered Users are solely responsible for the accuracy, appropriateness, and violations of any privacy rights, third party rights including intellectual property rights with regards to their Content.</p>\n        </li>\n        <li>\n            <p>Different types of Content are submitted/ posted/ uploaded / published on NULP following different processes and workflows based on the purpose of the Content. Certain Content, such as posts, comments, feedback, submissions, responses, explanations in forums/groups or using project/ survey/ observation tools etc., are directly submitted/ posted/ uploaded. Certain Content contributed by Registered Users that is meant for wider user consumption is published by Institutional Users after following a review process described below.</p>\n        </li>\n    </ol>\n    <h4><strong>Content Contribution</strong></h4>\n    <p>Content that is published on NULP for wider user consumption can only be created by Registered Users who are authorized by an Institutional User to have read, write and edit rights to create Content. This authorization may happen at central level or state level. Each Institutional User has their own guidelines for such authorization. Registered Users who create Content are responsible for creating and contributing Content that complies with this&nbsp;<strong>Content Policy</strong>, the&nbsp;<strong>Terms of Use</strong> and&nbsp;<strong>Privacy Policy</strong>, and any other policies and guidelines prescribed from time to time. Registered Users shall have exercised reasonable diligence to satisfy themselves that their Content is ready for public consumption prior to being submitted for review and use on NULP.</p>\n    <h4><strong>Content Review &amp; Publishing</strong></h4>\n    <p>All Content published on NULP for wider user consumption is curated, reviewed and published by Registered Users who are authorized by an Institutional to have read, write and edit rights to curate, review or publish Content. This authorization may happen at central level or state level. Each Institutional User has their own guidelines for such authorization. Registered Users who curate, review or publish Content shall ensure that the Content they accept complies with this Content Policy, the&nbsp;<strong>Terms of Use</strong> and&nbsp;<strong>Privacy Policy</strong>, and any other policies and guidelines prescribed from time to time.</p>\n    <h4><strong>Accuracy and Appropriateness</strong></h4>\n    <p>- Registered Users must ensure that all the Content they have created, contributed, reviewed or published is appropriate and accurate and meets their pedagogical and usability requirements as prescribed by Institutional Users. Content identified as inappropriate or inaccurate, as per this Content Policy, will not be published and can be unilaterally removed from NULP.</p>\n    <ol type=\"a\">\n        <li>\n            <p><strong>Accurate Content</strong> - All Content must:</p>\n            <ol type=\"a\">\n                <li>\n                    <p>Be factually correct,</p>\n                </li>\n                <li>\n                    <p>Use language in text, audio, video and interactive materials that is simple and easy to understand, and</p>\n                </li>\n                <li>\n                    <p>Be contextual and relevant to the needs of the intended User.</p>\n                </li>\n            </ol>\n        </li>\n        <li>\n            <p><strong>Inappropriate Content</strong> includes, but is not limited to:</p>\n            <ol type=\"a\">\n                <li>\n                    <p>Hate Speech - by words either written or spoken or by signs or by visible representation or otherwise promotes or attempts to promote feelings of enmity, hatred or ill-will against persons of a:</p>\n                    <ol type=\"a\">\n                        <li>\n                            <p>Caste</p>\n                        </li>\n                        <li>\n                            <p>Class</p>\n                        </li>\n                        <li>\n                            <p>Race</p>\n                        </li>\n                        <li>\n                            <p>Ethnicity</p>\n                        </li>\n                        <li>\n                            <p>Sex, gender, or gender identity</p>\n                        </li>\n                        <li>\n                            <p>National origin</p>\n                        </li>\n                        <li>\n                            <p>Religious affiliation</p>\n                        </li>\n                        <li>\n                            <p>Sexual orientation, or</p>\n                        </li>\n                        <li>\n                            <p>Disabilities or diseases</p>\n                        </li>\n                    </ol>\n                </li>\n                <li>\n                    <p>Sexually explicit content</p>\n                    <ol type=\"a\">\n                        <li>\n                            <p>Pornography</p>\n                        </li>\n                        <li>\n                            <p>Explicit text/images/illustrations/sounds of sexual content</p>\n                        </li>\n                        <li>\n                            <p>Descriptions of sexual acts</p>\n                        </li>\n                    </ol>\n                </li>\n                <li>\n                    <p>Depiction of sexual violence and exploitation</p>\n                    <ol type=\"a\">\n                        <li>\n                            <p>Includes sexual exploitation of minors, and sexual assault.</p>\n                        </li>\n                        <li>\n                            <p>Photographs/ Illustrations/videos depicting incidents of sexual violence</p>\n                        </li>\n                    </ol>\n                </li>\n                <li>\n                    <p>Depiction of nudity</p>\n                    <ol type=\"a\">\n                        <li>\n                            <p>Nudity would mean displaying genitals, breasts or buttocks (clothed or unclothed) for the purpose of sexual gratification.</p>\n                        </li>\n                        <li>\n                            <p>Other than the depiction of body parts which isn’t gratuitously graphic and is learning, documentary, scientific, or artistic - paintings, sculptures, and other art that depicts nude figures, which is posted for learning purposes. Providing context will help users determine the purpose of the content/asset.</p>\n                        </li>\n                    </ol>\n                </li>\n                <li>\n                    <p>Content that promotes violence, including</p>\n                    <ol type=\"a\">\n                        <li>\n                            <p>Promoting, encouraging, supporting, praising, or condoning violent actions, activities and behaviour - verbal, physical or emotional.</p>\n                        </li>\n                        <li>\n                            <p>Threatening or inciting others to commit acts of violence</p>\n                        </li>\n                        <li>\n                            <p>Expressing support or praise for groups, people that are involved in violent or criminal behavior</p>\n                        </li>\n                    </ol>\n                </li>\n                <li>\n                    <p>Content that promotes/depicts/reflects discrimination and bullying or encouraging such behavior, including:</p>\n                    <ol type=\"a\">\n                        <li>\n                            <p>Targeting individuals with the intention of degrading or shaming them.</p>\n                        </li>\n                        <li>\n                            <p>Illustrations or Images altered to degrade individuals</p>\n                        </li>\n                        <li>\n                            <p>Photos or videos of physical or verbal bullying</p>\n                        </li>\n                        <li>\n                            <p>Sharing personal information or harassing people</p>\n                        </li>\n                        <li>\n                            <p>Repeatedly targeting other people with unwanted requests or messages.</p>\n                        </li>\n                    </ol>\n                </li>\n                <li>\n                    <p>Comprises harmful or dangerous content</p>\n                    <ol type=\"a\">\n                        <li>\n                            <p>which intends to incite violence or encourage dangerous or illegal activities that have an inherent risk of serious physical harm or death.</p>\n                        </li>\n                        <li>\n                            <p>Encourages dangerous or illegal activities for instance - money laundering, gambling, performing stunts, high risk activities, choking games, drug use, or other acts where serious injury or harm may result. Content that depicts dangerous acts may be allowed if the primary purpose is learning, documentary, scientific, or artistic (EDSA), and isn’t gratuitously graphic.</p>\n                        </li>\n                    </ol>\n                </li>\n                <li>\n                    <p>Other possibilities:</p>\n                    <ol type=\"a\">\n                        <li>\n                            <p>Content which violates the law for the time being in force,</p>\n                        </li>\n                        <li>\n                            <p>Content which infringes any trademark, copyright, or other intellectual property rights,</p>\n                        </li>\n                        <li>\n                            <p>Content which deceives or misleads the User about the origin of such Content and conveys information which is grossly offensive or menacing,</p>\n                        </li>\n                        <li>\n                            <p>Content which contains software viruses or any other computer code, files or programs designed to interrupt, destroy or limit the functionality of any computer resource,</p>\n                        </li>\n                        <li>\n                            <p>Content which threatens the unity, integrity, defence, security or sovereignty of India, friendly relations with foreign states, or public order, or causes incitement to the commission of any cognizable offence or prevents investigation of any offence or is insulting any other nation,</p>\n                        </li>\n                        <li>\n                            <p>Content involvings minors/ children in violence as victims or perpetrators or as forced witnesses to violence, or showing children as being subjected to any form of child abuse,</p>\n                        </li>\n                        <li>\n                            <p>Content involving abuse or ridicule of people with disabilities (physical or mental),</p>\n                        </li>\n                        <li>\n                            <p>Content involving cruelty to, or abuse of animals,</p>\n                        </li>\n                        <li>\n                            <p>depiction of violence, cruelty and horror, scenes of violence primarily,</p>\n                        </li>\n                        <li>\n                            <p>Content involving images/text/ illustrations have the effect of encouraging, justifying, glorifying, glamorising alcohol drinking, drugs and substance abuse; consumption of tobacco or smoking,</p>\n                        </li>\n                        <li>\n                            <p>Content involving degrading or denigrating women in any manner,</p>\n                        </li>\n                        <li>\n                            <p>Content involving vulgarity, obscenity or depravity,</p>\n                        </li>\n                        <li>\n                            <p>Content involving dual meaning words as obviously cater to baser instincts,</p>\n                        </li>\n                        <li>\n                            <p>Content involving visuals or words contemptuous of racial, religious or other groups,</p>\n                        </li>\n                        <li>\n                            <p>Content involving visuals or words which promote superstition, communal, obscurantist, anti-scientific attitude, and</p>\n                        </li>\n                        <li>\n                            <p>Content involving visuals or words involving defamation of an individual or a body of individuals.</p>\n                        </li>\n                    </ol>\n                </li>\n            </ol>\n        </li>\n    </ol>\n    <h4><strong>Intellectual Property Rights</strong></h4>\n    <ol type=\"a\">\n        <li>\n            <p>Registered Users are solely responsible for Content they have created, uploaded, sourced, linked, streamed, curated, reviewed, or published on NULP.</p>\n        </li>\n        <li>\n            <p>Registered Users must ensure that Content (meant for wider user consumption) that they create, upload, source, link, stream, curate, review or publish on NULP accurately reflects:</p>\n            <ol type=\"a\">\n                <li>\n                    <p>Author</p>\n                </li>\n                <li>\n                    <p>Copyright holder</p>\n                </li>\n                <li>\n                    <p>Year of copyright</p>\n                </li>\n                <li>\n                    <p>Attributions to creators whose content has been relied on, used in, or referred to in the Content (if any) and sources and citations.</p>\n                </li>\n                <li>\n                    <p>The relevant license, as per the Licensing Policy</p>\n                </li>\n            </ol>\n        </li>\n        <li>\n            <p>Registered Users who have copyright in the Content they have contributed, consent to publication of their Content in accordance with the&nbsp;<strong>Terms of Use</strong> and this&nbsp;<strong>Content Policy</strong>.</p>\n        </li>\n        <li>\n            <p>In relation to Content being contributed by any person other than the copyright holder of the Content, Registered Users must ensure that they have the necessary authorization, consent, license, or permission to publish such Content in accordance with the&nbsp;<strong>Terms of Use</strong> and this&nbsp;<strong>Content Policy</strong>.</p>\n        </li>\n        <li>\n            <p>If Content includes copyrighted materials (including text, images, photos, illustrations, sounds, music, videos, audio-visual combinations, etc.), Registered Users (creators, curators, reviewers and publishers) must ensure compliance with the license terms, proper attribution and any other third party intellectual property rights. Infringement of copyright or any other intellectual property rights is not acceptable, the proper attributions and acknowledgement of authors and creators for open learning community and creative commons community must be respected and upheld at all times. Administrators and technology support providers of NULP will remove any Content if properly notified that such Content infringes on another\\'s intellectual property rights or violates this Content Policy,&nbsp;<strong>Terms of Use</strong> and / or the&nbsp;<strong>Privacy Policy</strong>.</p>\n        </li>\n        <li>\n            <p>By submitting / uploading / creating/ publishing Content on NULP and following the open license frameworks adopted by NULP, Registered Users recognize and accept that the Content (including all the elements that such Content comprises such as text, scripts, graphics, photos, sounds, music, videos, audio-visual combinations etc.) is placed in public domain will be accessed and used by any individual, institution or organization through various platforms, portals and applications in accordance with the license conditions.</p>\n        </li>\n        <li>\n            <p>It shall be the sole responsibility of Registered Users to ensure that proper and correct attributions, acknowledgements and sourcing references are given to the Content and individual(s)/ institution(s) that have been involved in the development and creation of Content and wherever Content has been quoted/used.</p>\n        </li>\n        <li>\n            <p>It shall be the responsibility of Registered Users not to infringe upon any third party rights including but not limited to intellectual property rights such as copyrights or any other legal rights of individual(s)/organization(s) with regards to Content contributed on NULP. For any legal matter arising out of infringement of such rights by the Registered User, such Registered User shall be solely responsible for any financial or other damages arising out of such violations and disputes.</p>\n        </li>\n        <li>\n            <p>GoI and/or the administrators and technology support providers of NULP are not responsible for the violations of any third party rights including intellectual property rights by any User.</p>\n        </li>\n        <li>\n            <p>Any violations of intellectual property rights will be the responsibility of the concerned Users. Any disputes will be settled by the respective parties.</p>\n        </li>\n        <li>\n            <p>GoI and/or the administrators and technology support providers of NULP do not endorse any Content published on NULP, or any opinion, recommendation, or advice expressed therein, and NULP expressly disclaims any and all liability in connection with Content.</p>\n        </li>\n    </ol>\n    <h4><strong>Open Licensing Policy - Creative Commons Framework</strong></h4>\n    <ol type=\"a\">\n        <li>\n            <p>NULP follows principles of open access, open licensing and is a platform for open learning resources. Registered Users must ensure that they follow these licensing terms. Content which does not follow these licensing terms shall be rejected.</p>\n        </li>\n        <li>\n            <p>Content must be made available under the Creative Commons License Framework. Creative Commons licenses provide an easy way to manage the copyright terms that attach automatically to all creative material under copyright. Creative Commons licenses allow that material to be shared and reused under terms that are flexible and legally sound. Creative Commons offers a core suite of six copyright licenses. Anyone can use Creative Commons licensed materials as long as the license conditions are followed. One condition of all Creative Commons licenses is attribution. NULP permits the use of the license <a href=\"https://creativecommons.org/licenses/by/4.0/legalcode\">CC BY4.0</a> (Attribution)</p>\n        </li>\n        <li>\n            <p>Registered Users must ensure that the Content submitted to be published on the NULP for wider user consumption specifies:</p>\n            <ol type=\"a\">\n                <li>\n                    <p>the relevant license under which such Content will be available to the Users.</p>\n                </li>\n                <li>\n                    <p>That the appropriate license terms and well as attributions relating to such Content are properly followed, including details of the creator and source/ citations.</p>\n                </li>\n                <li>\n                    <p>That license options mentioned herein are followed in all cases, and that the relevant license should be compatible with the copyright license applicable to the original piece of content.</p>\n                </li>\n            </ol>\n        </li>\n        <li>\n            <p>Registered Users acknowledge and accept that since the Content provided herein follows open licensing norms such as creative commons licenses or other open licenses, the use of the Content shall not be limited to specific Institutional Users/ Registered Users that have published the Content and they shall be made available for discovery, access and use by any organization, institution, platform, application and individual in general.</p>\n        </li>\n        <li>\n            <p>Registered Users recognise and accept that once Content is submitted and placed in the public domain for use, they cannot unilaterally withdraw the Content or change the licensing terms.</p>\n        </li>\n    </ol>\n    <h4><strong>Bad Practices:</strong></h4>\n    <p>Registered Users must not indulge in any of the following bad practices in relation to their Content, including:</p>\n    <ol type=\"a\">\n        <li>\n            <p><em>Uploading Content (including photos or videos) of individuals without their consent</em>: Photos or videos which include other people who are not the subject of the photo and have not signed a consent / release form to share those photos or videos, are not permitted. Any person that appears in the photo or video (whose face is visible) must have signed a consent / release form where they consent to the sharing of such photo(s) with third parties.</p>\n        </li>\n        <li>\n            <p><em>Uploading Content (including photos or videos) with ethical issues:&nbsp;</em>Photographs or videos containing violent, pornographic, sensitive content or other inappropriate. Content described in this Content Policy that could, in some way, offend our Users are not permitted.</p>\n        </li>\n        <li>\n            <p><em>Uploading Content (including photos, videos or documents) which require authorisation from the author / owner:&nbsp;</em>Certain types of Content (including photographs, videos or documents) require the permission of the author / owner such as copyrighted works (eg. logos, literary or artworks), or confidential documents. It is important that before uploading such Content, appropriate written permissions are taken.</p>\n        </li>\n        <li>\n            <p><em>Uploading Content which doesn’t meet specified technical or visual requirements.</em></p>\n        </li>\n        <li>\n            <p><em>Uploading repeats of the same Content.</em></p>\n        </li>\n        <li>\n            <p><em>Uploading files that contain viruses or malware.</em></p>\n        </li>\n    </ol>\n    <h4><strong>Takedown Policy -</strong></h4>\n    <ol type=\"a\">\n        <li>\n            <p>If a User believes that certain Content published on NULP is in violation of this Content Policy or any applicable laws please contact us at&nbsp;<strong>nulp@niua.org</strong> and necessary action will be taken to review and / or remove such content as quickly as possible.</p>\n        </li>\n        <li>\n            <p>Administrators and technology support providers of NULP reserve the right to remove Content from NULP without any prior notice for any violation of the Content Policy,&nbsp;<strong>Privacy Policy</strong>, or the&nbsp;<strong>Terms of Use</strong>. They may at their sole and absolute discretion delete, remove, disable access or otherwise deal with information, data or Content to comply with laws currently in force, including the Information Technology Act, 2000.</p>\n        </li>\n    </ol>\n    <p><em>DISCLAIMER: Though all efforts have been made to ensure the accuracy and currency of the Content on NULP, the same should not be construed as a statement of law or used for any legal purposes. In no event will the Government of India, MoHUA or NIUA be liable for any expense, loss or damage including, without limitation, indirect or consequential loss or damage, or any expense, loss or damage whatsoever arising from use, or loss of use, of data, arising out of or in connection with the use of NULP. Links to other websites that have been included on this platform are provided for public convenience only.</em></p>\n    <h3><strong>NULP Course Terms</strong></h3>\n    <p><em>(Last updated on&nbsp;</em><em><strong>19-05-202</strong></em><em><strong>2</strong></em><em>)</em></p>\n    <p>These Course Terms specify the rights and responsibilities of Registered Users who choose to join a course on NULP and Administrators of courses on NULP. Administrators of a course are Registered Users authorized by Institutional Users to offer courses on NULP.</p>\n    <h4><strong>For Registered Users</strong></h4>\n    <ol>\n        <li>\n            <p><strong>A Registered User that chooses to join a course on NULP can:</strong></p>\n            <ol type=\"a\">\n                <li>\n                    <p>Access the course and its Content</p>\n                </li>\n                <li>\n                    <p>View their own progress</p>\n                </li>\n                <li>\n                    <p>Access and download any certificates received on achieving milestones in the course</p>\n                </li>\n                <li>\n                    <p>Opt out of the course at any time</p>\n                </li>\n                <li>\n                    <p>Provide consent for sharing personal information with Administrators of a course</p>\n                </li>\n                <li>\n                    <p>Revoke consent for sharing personal information with Administrators of a course</p>\n                </li>\n            </ol>\n        </li>\n        <li>\n            <p><strong>Access and Revocation of access to data and information of Registered User:</strong></p>\n            <ol type=\"a\">\n                <li>\n                    <p>By choosing to join a course, the Registered User agrees to give the Administrators of the course access to their Name, State, District, progress in the course and milestones achieved for the purposes of analysing usage of Content to improve content and other offerings.</p>\n                </li>\n                <li>\n                    <p>Upon joining a course, a Registered User has the option to provide their explicit consent to give the Administrators of the course access to the following additional information, namely: (i) Organisation name (ii) mobile number and (iii) email address. This consent can be given either when prompted by a pop-up or by changing their data sharing settings. This additional information can only be used by the Administrators of the course for the purpose of:</p>\n                    <ol type=\"a\">\n                        <li>\n                            <p>tracking progress of the Registered Users;</p>\n                        </li>\n                        <li>\n                            <p>analysing usage to improve the course, Content and other offerings.</p>\n                        </li>\n                        <li>\n                            <p>validating contact details;</p>\n                        </li>\n                        <li>\n                            <p>issuing certificates; and</p>\n                        </li>\n                        <li>\n                            <p>contacting Registered Users to send relevant information or seek feedback.</p>\n                        </li>\n                    </ol>\n                </li>\n                <li>\n                    <p>Registered Users can revoke their consent to sharing additional information at any time by changing their data sharing settings.</p>\n                </li>\n            </ol>\n        </li>\n        <li>\n            <p><strong>Responsibilities of Registered Users:</strong></p>\n            <ol type=\"a\">\n                <li>\n                    <p>To ensure that any of their communication is relevant to the purpose of the course and meet the Appropriateness standards set out in the&nbsp;<strong>Content Policy of NULP</strong>.</p>\n                </li>\n                <li>\n                    <p>To ensure that their use of courses does not violate any of the Prohibited Uses set out in the&nbsp;<strong>Terms of Use</strong>.</p>\n                </li>\n            </ol>\n        </li>\n        <li>\n            <p><strong>For Administrators of the course on NULP, can:</strong></p>\n            <ol type=\"a\">\n                <li>\n                    <p>Create, review or publish courses on NULP</p>\n                </li>\n                <li>\n                    <p>Access data and information of courses created by or assigned to them, which contain:</p>\n                    <ol type=\"a\">\n                        <li>\n                            <p>Name, State, City and progress data of the Registered Users who have chosen to join the course,</p>\n                        </li>\n                        <li>\n                            <p>Course usage data such as progress and completion details and other related matters</p>\n                        </li>\n                    </ol>\n                </li>\n                <li>\n                    <p>Use the data and information of the Registered Users only for the purposes of:</p>\n                    <ol type=\"a\">\n                        <li>\n                            <p>tracking their progress;</p>\n                        </li>\n                        <li>\n                            <p>analysing usage of Content to improve content and other offerings;</p>\n                        </li>\n                        <li>\n                            <p>validating contact details;</p>\n                        </li>\n                        <li>\n                            <p>issuing certificates; and</p>\n                        </li>\n                        <li>\n                            <p>contacting Registered Users to send relevant information or seek feedback.</p>\n                        </li>\n                    </ol>\n                </li>\n                <li>\n                    <p>Create and issue certificates for Registered Users who have achieved milestones in the course.</p>\n                </li>\n            </ol>\n        </li>\n        <li>\n            <p><strong>Responsibilities of Administrators of a course:</strong></p>\n            <ol type=\"a\">\n                <li>\n                    <p>To ensure that the courses created, reviewed or published by them are in line with the&nbsp;<strong>Content Policy of NULP</strong>, and accordingly meet the Accuracy and Appropriateness standards.</p>\n                </li>\n                <li>\n                    <p>To respect the privacy and data protection rights of Registered Users.</p>\n                </li>\n                <li>\n                    <p>To ensure the security of and use of data (especially personal data) shared by Registered Users is limited solely to the purposes mentioned here.</p>\n                </li>\n                <li>\n                    <p>To know that any use of data for purposes outside of the proper use shall be considered violation of the terms of the policies of NULP as well as applicable laws and policies of India and they shall be responsible and liable for such actions and for any loss or damage arising from failure to comply with this obligation.</p>\n                </li>\n                <li>\n                    <p>To ensure that their communication (if any) with Registered Users is explicitly limited and relevant to the purpose of the course and meets the Appropriateness standards set out in the&nbsp;<strong>Content Policy of NULP</strong>. The email address and phone number of Registered Users shall only be used to share information in connection with the course and shall not under any circumstance be used for any other matters.</p>\n                </li>\n                <li>\n                    <p>To ensure that their courses are not used for any of the Prohibited Uses set out in the&nbsp;<strong>Terms of Use of NULP</strong>.</p>\n                </li>\n            </ol>\n        </li>\n    </ol>\n    <p><em>These Course Guidelines should be read in conjunction with the policies and guidelines of NULP, including the&nbsp;</em><em><strong>Terms of Use</strong></em><em>,&nbsp;</em><em><strong>Content Policy</strong></em><em>&nbsp;and&nbsp;</em><em><strong>Privacy Policy</strong></em><em>. Defined terms used but not defined herein shall have the meaning ascribed to them in the&nbsp;</em><em><strong>Terms of Use</strong></em><em>.</em></p>\n    <p> </p>\n    </Container>\n    <Footer/>\n    </div>\n\n)\n};\n\nexport default Terms;","function SampleComponent() {\n  return <>Render SampleComponent here ...</>;\n}\nexport default SampleComponent;\n","import React, { useEffect, useState } from \"react\";\n\nimport \"./App.css\";\nimport \"./styles/style.css\";\nimport {\n  NativeBaseProvider,\n  Box,\n  Stack,\n  VStack,\n  Text,\n  HStack,\n  Button,\n  extendTheme,\n  Actionsheet,\n  ScrollView,\n} from \"native-base\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { DEFAULT_THEME, H2, initializeI18n } from \"@shiksha/common-lib\";\nimport { useTranslation, initReactI18next } from \"react-i18next\";\nimport i18n from \"i18next\";\n\nimport * as util from \"services/utilService\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport Profile from \"pages/profile/Profile\";\nimport Certificate from \"pages/profile/certificate\";\nimport FAQPage from \"pages/FAQPage\";\nimport AddConnections from \"pages/connections/AddConnections\";\nimport DomainList from \"pages/search/DomainList\";\nimport Registration from \"pages/registration/Registration\";\nimport ContentList from \"pages/search/ContentList\";\nimport AllContent from \"pages/content/AllContent\";\nimport CategoryPage from \"pages/content/CategoryPage\";\nimport LearningHistory from \"pages/profile/learningHistory\";\nimport continueLearning from \"pages/profile/continueLearning\";\nimport JoinCourse from \"pages/content/joinCourse\";\nimport Player from \"pages/content/Player\";\nimport Otp from \"pages/registration/Otp\";\nimport PDFContent from \"pages/content/pdf\";\nimport NoResult from \"pages/content/noResultFound\";\nimport Message from \"pages/connections/message\";\nimport Terms from \"pages/terms\";\nimport SelectPreference from \"pages/SelectPreference\";\nimport Chat from \"pages/connections/chat\";\nimport SampleComponent from \"components/SampleComponent\";\nconst urlConfig = require(\"./configs/urlConfig.json\");\nconst routeConfig = require(\"./configs/routeConfig.json\");\n\nfunction App() {\n  // const [t] = useTranslation();\n  const [search, setSearch] = React.useState(true);\n  const [searchState, setSearchState] = React.useState(false);\n  // const theme = extendTheme(DEFAULT_THEME);\n  const colors = \"\";\n  const [sortArray, setSortArray] = React.useState([]);\n  const [checkPref, setCheckPref] = React.useState(false);\n  const _userId = util.userId();\n  const routes = [\n    {\n      moduleName: \"nulp_elite\",\n      path: routeConfig.ROUTES.ALL_CONTENT_PAGE.ALL_CONTENT,\n      component: AllContent,\n    },\n    {\n      moduleName: \"nulp_elite\",\n      path: routeConfig.ROUTES.POFILE_PAGE.PROFILE,\n      component: Profile,\n    },\n    {\n      moduleName: \"nulp_elite\",\n      path: routeConfig.ROUTES.CERTIFICATE_PAGE.CERTIFICATE,\n      component: Certificate,\n    },\n    {\n      moduleName: \"nulp_elite\",\n      path: routeConfig.ROUTES.LEARNING_HISTORY_PAGE.LEARNING_HISTORY,\n      component: LearningHistory,\n    },\n    {\n      moduleName: \"nulp_elite\",\n      path: routeConfig.ROUTES.CONTINUE_LEARNING_PAGE.CONTINUE_LEARNING,\n      component: continueLearning,\n    },\n    {\n      moduleName: \"nulp_elite\",\n      path: routeConfig.ROUTES.HELP_PAGE.HELP,\n      component: FAQPage,\n    },\n    {\n      moduleName: \"nulp_elite\",\n      path: routeConfig.ROUTES.ADDCONNECTION_PAGE.ADDCONNECTION,\n      component: AddConnections,\n    },\n    {\n      moduleName: \"nulp_elite\",\n      path: routeConfig.ROUTES.DOMAINLIST_PAGE.DOMAINLIST,\n      component: DomainList,\n    },\n    {\n      moduleName: \"nulp_elite\",\n      path:\n        routeConfig.ROUTES.CONTENTLIST_PAGE.CONTENTLIST +\n        routeConfig.ROUTES.CONTENTLIST_PAGE.PAGENUMBER,\n      component: ContentList,\n    },\n    {\n      moduleName: \"nulp_elite\",\n      path:\n        routeConfig.ROUTES.JOIN_COURSE_PAGE.JOIN_COURSE +\n        routeConfig.ROUTES.JOIN_COURSE_PAGE.CONTENT_ID,\n      component: JoinCourse,\n    },\n    // {\n    //   moduleName: \"nulp_elite\",\n    //   path: \"/joinCourse/:contentId\",\n    //   component: JoinCourse,\n    // },\n\n    {\n      moduleName: \"nulp_elite\",\n      path: routeConfig.ROUTES.PLAYER_PAGE.PLAYER,\n      component: Player,\n    },\n    {\n      moduleName: \"nulp_elite\",\n      path: routeConfig.ROUTES.PDF_PAGE.PDF,\n      component: PDFContent,\n    },\n    {\n      moduleName: \"nulp_elite\",\n      path: routeConfig.ROUTES.NORESULT_PAGE.NORESULT,\n      component: NoResult,\n    },\n    {\n      moduleName: \"nulp_elite\",\n      path: routeConfig.ROUTES.CERTIFICATE_OLD_PAGE.CERTIFICATE_OLD,\n      component: Certificate,\n    },\n    {\n      moduleName: \"nulp_elite\",\n      path: routeConfig.ROUTES.SIGNUP_PAGE.SIGNUP,\n      component: Registration,\n    },\n    {\n      moduleName: \"nulp_elite\",\n      path: routeConfig.ROUTES.TERMS_PAGE.TERMS,\n      component: Terms,\n    },\n    {\n      moduleName: \"nulp_elite\",\n      path: routeConfig.ROUTES.OTP_PAGE.OTP,\n      component: Otp,\n    },\n    {\n      moduleName: \"nulp_elite\",\n      path:\n        routeConfig.ROUTES.VIEW_ALL_PAGE.VIEW_ALL +\n        routeConfig.ROUTES.VIEW_ALL_PAGE.CATEGORY,\n      component: CategoryPage,\n    },\n    {\n      moduleName: \"nulp_elite\",\n      path: routeConfig.ROUTES.MESSAGE_PAGE.MESSAGE,\n      component: Message,\n    },\n    {\n      moduleName: \"nulp_elite\",\n      path: routeConfig.ROUTES.SELECT_PREFERENCE_PAGE.SELECT_PREFERENCE,\n      component: SelectPreference,\n    },\n    {\n      moduleName: \"nulp_elite\",\n      path: routeConfig.ROUTES.CHAT_PAGE.CHAT,\n      component: Chat,\n    },\n    {\n      moduleName: \"nulp_elite\",\n      path: \"/webapp/demo\",\n      component: SampleComponent,\n    },\n  ];\n\n  initializeI18n(\n    [\"translation\"],\n    `${process.env.PUBLIC_URL}/locales/{{lng}}/{{ns}}.json`\n  );\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const url = `${urlConfig.URLS.LEARNER_PREFIX}${urlConfig.URLS.USER.GET_PROFILE}${_userId}`;\n        const response = await fetch(url);\n        const data = await response.json();\n        const rootOrgId = data.result.response.rootOrgId;\n        sessionStorage.setItem(\"rootOrgId\", rootOrgId);\n        console.log(data.result.response.framework.board);\n        if (data.result.response.framework.board) {\n          setCheckPref(true);\n        } else {\n          setCheckPref(false);\n        }\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <NativeBaseProvider>\n      {/* <ChakraProvider> */}\n      {/* <React.Suspense> */}\n      {/* <I18nextProvider i18n={i18n}> */}\n      {/* <ChakraProvider> */}\n      <React.Suspense>\n        {/* {!checkPref && <UserPrefPopup />} */}\n\n        <Router>\n          <Routes>\n            {routes.map((route, index) => (\n              <Route\n                key={index}\n                path={route.path}\n                element={<route.component />}\n              />\n            ))}\n          </Routes>\n        </Router>\n      </React.Suspense>\n      {/* </ChakraProvider> */}\n      {/* </ChakraProvider> */}\n      {/* </I18nextProvider> */}\n    </NativeBaseProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","var map = {\n\t\"./Energy_and_GreenBuilding.png\": 17159,\n\t\"./Knowledge.png\": 96489,\n\t\"./Management.png\": 94424,\n\t\"./Mission.png\": 97527,\n\t\"./Process.png\": 14142,\n\t\"./Program.png\": 30477,\n\t\"./Solution.png\": 55704\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6782;","var map = {\n\t\"./domainImgs/admin.png\": 26036,\n\t\"./domainImgs/building.png\": 54309,\n\t\"./domainImgs/mobility.png\": 96346,\n\t\"./domainImgs/savage.png\": 71798,\n\t\"./domainImgs/social.png\": 38204,\n\t\"./domainImgs/swm.png\": 46206,\n\t\"./domainImgs/town.png\": 57257,\n\t\"./domainImgs/uran.png\": 39221\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 40334;"],"names":["userId","userIdElement","document","getElementById","value","Footer","t","useTranslation","setValue","React","anchorEl","setAnchorEl","navigate","useNavigate","_jsxs","_Fragment","children","_jsx","Box","maxWidth","className","sx","position","bottom","left","right","width","zIndex","BottomNavigation","display","paddingTop","showLabels","onChange","event","newValue","BottomNavigationAction","onClick","label","icon","SearchSharpIcon","location","pathname","MenuBookOutlinedIcon","ChatOutlinedIcon","AccountCircleOutlinedIcon","style","background","color","padding","Grid","container","spacing","item","xs","md","fontSize","lineHeight","fontWeight","Link","underline","target","href","margin","FacebookIcon","InstagramIcon","LinkedInIcon","TwitterIcon","_ref","globalSearchQuery","language","setLanguage","useState","handleChangeLanguage","selectedLanguage","changeLanguage","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","searchQuery","setSearchQuery","activePath","setActivePath","useEffect","onGlobalSearch","state","justifyContent","src","require","alignItems","paddingRight","DevicesIcon","verticalAlign","borderRight","WebIcon","minWidth","paddingLeft","FormControl","fullWidth","size","flexDirection","GTranslateIcon","Select","labelId","id","border","startIcon","LanguageIcon","inputProps","MenuItem","AppBar","Container","Toolbar","disableGutters","IconButton","currentTarget","SortOutlinedIcon","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","handleCloseNavMenu","textAlign","LiveHelpOutlinedIcon","LogoutOutlinedIcon","TextField","placeholder","variant","onKeyPress","key","InputProps","endAdornment","type","SearchIcon","flexGrow","my","Tooltip","p","mt","handleCloseUserMenu","useStyles","makeStyles","theme","link","FloatingChatIcon","undefined","Popover","handleClosePopover","height","title","HeadsetMicOutlinedIcon","borderRadius","received","total","progress","CircularProgress","top","Typography","component","concat","options","Autocomplete","multiple","disablePortal","handleFilterChange","selectedValues","renderInput","params","BoxCard","items","index","imgUrl","setImgUrl","subdomain","setSubdomain","se_gradeLevels","gradeLevel","RandomImage","content","Card","cursor","CardMedia","image","CardContent","primaryCategory","gutterBottom","appIcon","alt","name","enrolledDate","unixTimestamp","Date","toLocaleDateString","day","month","year","marginTop","status","organisation","length","board","se_boards","placement","Button","NoResult","BorderRadius","SearchOffIcon","ToasterCommon","response","setOpen","handleClose","reason","Snackbar","autoHideDuration","TransitionComponent","Slide","TransitionProps","direction","transform","Alert","severity","backgroundColor","urlConfig","ContinueLearning","data","setData","filters","setFilters","isLoading","setIsLoading","error","setError","gradeLevels","setGradeLevels","courseStatus","setCourseStatus","useLocation","domain","toasterOpen","setToasterOpen","toasterMessage","setToasterMessage","showErrorMessage","msg","setTimeout","fetchData","fetchGradeLevels","async","_userId","util","headers","url","URLS","LEARNER_PREFIX","COURSE","GET_ENROLLED_COURSES","appConfig","enrolledCourses","fields","batchDetails","contentDetails","fetch","responseData","json","result","courses","defaultFramework","localStorage","getItem","PUBLIC_PREFIX","FRAMEWORK","READ","framework","categories","gradeLevelCategory","find","category","identifier","terms","gradeLevelsOptions","map","term","code","console","filteredCourses","useMemo","filter","includes","contents","role","Filter","selectedOptions","option","se_gradeLevel","marginBottom","lg","handleCardClick","contentId","courseType","formControl","selectEmpty","isOpen","setCategories","subCategories","setSubCategories","languages","setLanguages","topics","setTopics","frameworkData","setFrameworkData","selectedCategory","setSelectedCategory","selectedSubCategory","setSelectedSubCategory","selectedTopic","setSelectedTopic","selectedLanguages","setSelectedLanguages","isUserLoggedIn","setIsUserLoggedIn","isRootOrg","setIsRootOrg","frameworks","setFrameworks","setDefaultFramework","custodianOrgId","setCustodianOrgId","isEmptyPreference","setIsEmptyPreference","setDomain","subDomain","setSubDomain","topic","setTopic","isDisabled","setIsDisabled","preCategory","setPreCategory","preTopic","setPreTopic","preSubCategory","setPreSubCategory","preLanguages","setPreLanguages","_data$result","_data$result$response","SYSTEM_SETTING","CUSTODIAN_ORG","ok","Error","log","rootOrgId","_data$result2","_data$result2$channel","CHANNEL","channel","setItem","_data$result3","_data$result3$channel","fetchUserDataAndSetCustodianOrgData","defaultFrameworkFromLocal","getFramework","getUserData","_data$result4","_data$result4$framewo","_data$result5","_data$result5$framewo","_data$result5$framewo2","_data$result6","_data$result6$framewo","_data$result6$framewo2","_data$result7","_data$result7$framewo","_data$result7$framewo2","_data$result8","_data$result8$framewo","_data$result8$framewo2","_data$result9","_data$result9$framewo","_data$result9$framewo2","_data$result10","_data$result10$framew","_data$result10$framew2","_data$result11","_data$result11$framew","_data$result11$framew2","_data$result12","_data$result12$framew","_data$result12$framew2","method","_responseData$result","USER","GET_PROFILE","userReadParam","_responseData$result2","_responseData$result3","_responseData$result4","_responseData$result5","_responseData$result6","_responseData$result7","_responseData$result8","_responseData$result9","_responseData$result10","_responseData$result11","_responseData$result12","_responseData$result13","_responseData$result14","_responseData$result15","_responseData$result16","_responseData$result17","_responseData$result18","_responseData$result19","_responseData$result20","_responseData$result21","_responseData$result22","_responseData$result23","_responseData$result24","_responseData$result25","_responseData$result26","_responseData$result27","_responseData$result28","_responseData$result29","_responseData$result30","_responseData$result31","_","isEmpty","subject","medium","deepEqual","array1","array2","sort","every","element","InputLabel","subCategory","Checkbox","checked","ListItemText","primary","handleSavePreferences","requestBody","request","UPDATE_USER_PROFILE","body","JSON","stringify","updateUserData","disabled","LearningHistory","_courseData$result","_courseData$result$co","courseData","setCourseData","selectedStatus","setSelectedStatus","course","courseName","Certificate","certData","setCertData","otherCertData","setOtherCertData","svgData","setSvgData","useRef","_source","query","bool","must","match_phrase","CERTIFICATE","CERT_SEARCH","axios","recipient","eq","CERTIF_SEARCH","formatDate","dateString","downloadPDF","cleanSvgData","DOMPurify","svgContainer","createElement","innerHTML","svgElement","querySelector","getAttribute","clientWidth","clientHeight","doc","jsPDF","orientation","unit","format","svg2pdf","xOffset","yOffset","scale","save","Header","DescriptionOutlinedIcon","certificate","boxShadow","paddingBottom","badge","issuer","issuedOn","SimCardDownloadOutlinedIcon","pdfUrl","_id","training","osCreatedAt","template","osid","config","maxBodyLength","Infinity","DOWNLOAD_CERTIFICATE","withCredentials","Accept","getCertificate","templateUrl","designations","CssTextField","styled","borderBottomColor","borderColor","bgcolor","Profile","_userData$result","_userData$result$resp","_userData$result2","_userData$result2$res","_userData$result10","_userData$result10$re","_userData$result11","_userData$result11$re","_userData$result12","_userData$result12$re","_userInfo$5","_userInfo$6","_userData$result13","_userData$result13$re","_userData$result14","_userData$result14$re","_userData$result14$re2","_userInfo$7","_editedUserInfo$bio","userData","setUserData","setCertificateCountData","setCourseCountData","openModal","setOpenModal","userInfo","setUserInfo","isEditing","setIsEditing","editedUserInfo","setEditedUserInfo","firstName","lastName","bio","designation","otherDesignation","originalUserInfo","setOriginalUserInfo","isFormDirty","setIsFormDirty","designationsList","setDesignationsList","load","setLoad","setRootOrgId","isMobile","setIsMobile","window","innerWidth","showCertificate","setShowCertificate","isButtonDisabled","setIsButtonDisabled","_userData$result3","_userData$result8","_userData$result9","_userData$result4","_userData$result5","_userInfo$","_userInfo$2","_userData$result6","_userData$result7","_userInfo$3","_userInfo$4","handleResize","addEventListener","removeEventListener","POFILE_PAGE","CERTIFICATE_COUNT","totalCourses","courseWithCertificate","certificatesReceived","certificateReceived","fetchCertificateCount","COURSE_COUNT","enrolledThisMonth","enrolledLastMonth","fetchCourseCount","_response$data","USER_READ","post","user_ids","fetchUserInfo","sessionStorage","handleCloseEditDialog","updateUserInfoInCustomDB","created_by","USER_UPDATE","handleCloseModal","reload","userName","organisations","orgName","ModeEditIcon","handleOpenEditDialog","EmojiEventsOutlinedIcon","CircularProgressWithLabel","Modal","onSubmit","e","preventDefault","py","desig","multiline","rows","maxLength","pt","handleCertificateButtonClick","ReceiptLongOutlinedIcon","isableEscapeKeyDown","SelectPreference","SettingsOutlinedIcon","handleOpenModal","TabContext","borderBottom","TabList","handleChange","Tab","TabPanel","active","textDecoration","FAQPage","classes","faqData","setFaqData","then","catch","message","selectedCategoryData","faqs","faq","faqIndex","Accordion","maxHeight","overflow","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","dangerouslySetInnerHTML","__html","description","useStore","create","set","moment","chatContainer","chatHeader","chat","flex","overflowY","messageInput","senderMessage","marginLeft","receiverMessage","clear","alignSelf","_receiverData$","senderUserId","propSenderUserId","receiverUserId","propReceiverUserId","onChatSent","setMessage","messages","setMessages","loggedInUserId","setLoggedInUserId","currentPage","setCurrentPage","pageSize","setPageSize","setReason","dialogOpen","setDialogOpen","isBlocked","setIsBlocked","showUnblockOption","setShowUnblockOption","receiverData","setReceiverData","prefilledMessage","setPrefilledMessage","textValue","setTextValue","routeSenderUserId","routeReceiverUserId","_responseData$result$","ADMIN","USER_SEARCH","userInfoPromises","userInfoList","Promise","all","forEach","getInvitationNotAcceptedUserByIds","fetchChats","fetchBlockUserStatus","updateMessage","intervalId","setInterval","clearInterval","DIRECT_CONNECT","GET_BLOCK_USER","get","blockedUserId","sender_id","GET_CHATS","UPDATE_CHAT","put","receiver_id","is_read","getTimeAgo","timestamp","timeZone","date","tz","now","isSame","clone","subtract","handleDialogClose","handleGoBack","ArrowBackIcon","handleBlockUser","BlockIcon","UNBLOCK","Dialog","DialogTitle","DialogContent","DialogActions","BLOCK","toLocaleString","hour","minute","hour12","DoneAllIcon","is_accepted","iconMapping","success","CheckCircleOutlineIcon","minRows","maxRows","trim","SEND_CHATS","SendIcon","Backdrop","modal","modalContent","palette","paper","shadows","borderTopLeftRadius","borderTopRightRadius","props","ref","other","Fade","in","grey","BaseModal","_templateObject","_taggedTemplateLiteral","ModalContent","_templateObject2","_ref3","css","_templateObject3","mode","_ref4","_templateObject4","AddConnections","handleOpen","showChat","setShowChat","buttonText","setButtonText","activeTab","setActiveTab","selectedUser","setSelectedUser","userSearchData","setUserSearchData","invitationAcceptedUsers","setInvitationAcceptedUsers","invitationNotAcceptedUsers","setInvitationNotAcceptedUsers","invitationReceiverByUser","setInvitationReceivedUserByIds","userChat","setUserChat","isModalOpen","setIsModalOpen","showModal","setShowModal","showChatModal","setShowChatModal","selectedUserName","setSelectedUserName","totalPages","setTotalPages","userQuerySearchData","setUserQuerySearchData","expandedMessageId","setExpandedMessageId","setSelectedValues","selectedName","setSelectedName","selectedDesignation","setSelectedDesignation","userFilter","setUserFilter","userIds","setUserIds","autocompleteOpen","setAutocompleteOpen","inputValue","setInputValue","setOptions","showTableTwo","setShowTableTwo","selectedChatUser","setSelectedChatUser","selectedUserId","setSelectedUserId","blockedUserList","setBlockedUserList","blockUserIds","setBlockUserIds","openPopover","handleSearch","onMyConnection","handleTabClick","tab","arguments","limit","offset","sort_by","lastUpdatedOn","Math","ceil","count","allTypeOfUsers","responseUserData","el","getInvitationAcceptedUserByIds","userList","userListWithChat","URLSearchParams","toString","getChat","latestChat","reduce","latest","current","allRead","isRead","getInvitationReceivedUserByIds","getChatRequest","_userChat$","messageRequest","getBlockedUserByIds","is_connection","invitationNotAcceptedUserIds","res","sender","receiver","invitationAcceptedUserIds","invitationReceivedUserIds","getConnections","handleAcceptedChatOpen","dataToSend","fullName","getUserChat","acceptChatInvitation","ACCEPT_CHAT","rejectChatInvitation","REJECT_CHAT","userChats","onClickSearchedUser","user","emptyOtherSectionsFromMyConnection","onUserQuerySearch","handleFilter","user_id","showMessages","creatorId","handleRejectClick","handleConfirmReject","rejectChat","handleUnblockUser","handleBackClick","noOptionsText","getOptionLabel","getOptionKey","handleOnSelectSearchedUser","onInputChange","newInputValue","fetchedOptions","fetchOptions","handlePopoverClose","List","ListItem","secondary","Divider","userDesignation","handleUserClick","Pagination","page","handlePageChange","GET_BLOCK_USER_LIST","Array","isArray","senderIds","is_blocked","_ref2","fetchBlockUserList","userClick","substring","handleShowFullMessage","itemId","acceptChat","CancelOutlinedIcon","DialogContentText","autoFocus","unBlockedUserChat","Chat","ForumOutlinedIcon","getChannel","header","getSelectedFrameworkCategories","responsive","superLargeDesktop","breakpoint","max","min","desktop","tablet","mobile","DomainCarousel","domains","onSelectDomain","selectedDomainCode","isActive","setIsActive","itemsArray","setItemsArray","activeStates","setActiveStates","activeDomain","setActiveDomain","scrolled","setScrolled","handleScroll","scrollY","_domainWithImage$resu","_domainWithImage$resu2","_domainWithImage$resu3","_domainWithImage$resu4","domainWithImage","form","imgItem","pushData","push","croppedArray","slice","prevData","handleDomainClick","handleMouseLeave","Carousel","swipeable","draggable","showDots","ssr","infinite","autoPlaySpeed","keyBoardControl","customTransition","transitionDuration","containerClass","dotListClass","itemClass","objectFit","level","onMouseEnter","handleMouseEnter","onMouseLeave","Paper","typography","body2","text","createTheme","h3","breakpoints","up","channelData","setChannelData","setCategory","setImgItem","object","popularCourses","setPopularCourses","recentlyAddedCourses","setRecentlyAddedCourses","fetchDataFramework","getRecentlyAddedCourses","getPopularCourses","frameworkService","_response$data$result","_response$data$result2","_response$data2","_response$data2$resul","_response$data2$resul2","requestData","visibility","lastPublishedOn","facets","req","CONTENT","SEARCH","onMobileSearch","loadContents","handleDomainFilter","domainName","VerifiedOutlinedIcon","sm","contentType","BookmarkAddedOutlinedIcon","MAX_CHARS","Wrapper","section","Registration","_formik$values$bio","captchaResponse","setCaptchaResponse","emailExist","setEmailExist","goToOtp","setGoToOtp","showPassword","setShowPassword","setBio","formik","useFormik","initialValues","email","password","confirmPassword","validationSchema","Yup","required","matches","oneOf","values","handleSubmit","EMAIL_EXIST","exists","generateOtp","isEmailExist","templateId","OTP","ANONYMOUS","GENERATE","tncConfig","getTermsAndCondition","Navigate","to","search","TNC_CONFIG","backgroundPosition","onBlur","handleBlur","touched","errors","age","getFullYear","setFieldValue","autoComplete","InputAdornment","onMouseDown","Visibility","VisibilityOff","isValid","ReCAPTCHA","sitekey","getAllContents","DrawerFilter","setState","toggleDrawer","anchor","list","onKeyDown","FormControlLabel","control","m","htmlFor","OutlinedInput","SearchOutlinedIcon","SwipeableDrawer","onOpen","_location$state","_location$state2","_location$state3","_location$state8","_data$content","setSearch","pageNumber","setPageNumber","domainfilter","setDomainfilter","setDomainName","domainList","setDomainList","domainquery","setGlobalSearchQuery","Fetchdomain","getRandomValue","_location$state4","_location$state5","_location$state6","_location$state7","se_board","se_gradeleverl","contentService","floor","_responseData$result$2","domainOptions","responsiveCard","AllContent","selectedDomain","setSelectedDomain","expandedCategory","setExpandedCategory","fetchDomains","sortedData","a","b","localeCompare","getCookieValue","cookies","cookie","split","i","cookieName","cookieValue","Cookie","_response$data$result3","renderItems","Object","entries","acc","SummarizeOutlinedIcon","removeArrowOnDeviceType","CategoryPage","useParams","fetchMoreItems","JoinCourse","_userInfo$organisatio","_userData$result$cont","_userData$result2$con","_courseData$result$co2","_courseData$result$co3","_courseData$result2","_courseData$result2$c","_courseData$result2$c2","_courseData$result2$c3","_courseData$result3","_courseData$result3$c","_courseData$result3$c2","_courseData$result3$c3","_courseData$result4","_courseData$result4$c","_courseData$result4$c2","_courseData$result4$c3","_userData$result3$con","_userData$result3$con2","_userData$result4$con","_userData$result4$con2","_userData$result5$con","_userData$result5$con2","_chat$2","_chat$3","_courseData$result5","_courseData$result5$c","_userData$result6$con","_courseData$result6","_courseData$result6$c","_courseData$result6$c2","_courseData$result7","_courseData$result7$c","_courseData$result7$c2","_courseData$result8","_courseData$result8$c","_courseData$result8$c2","_chat$4","_chat$5","batchData","setBatchData","setBatchDetails","userCourseData","setUserCourseData","showEnrollmentSnackbar","setShowEnrollmentSnackbar","showConsentForm","setShowConsentForm","enrolled","setEnrolled","setCourseProgress","showConfirmation","setShowConfirmation","consentChecked","setConsentChecked","shareEnabled","setShareEnabled","setCreatorId","setChat","formData","setFormData","shareUrl","_data$result$content","HIERARCHY","createdBy","BATCH","GET_BATCHS","courseId","enrollmentType","createdDate","startDate","endDate","enrollmentEndDate","batchId","fetchBatchData","checkEnrolledCourse","contentIds","CONTENT_PREFIX","USER_CONTENT_STATE_READ","getCourseProgress","handleDirectConnect","_chat$","handleLinkClick","handleSnackbarClose","handleLeaveCourseClick","handleConfirmationClose","handleLeaveConfirmed","UNENROLL_USER_COURSE","handleJoinAndOpenModal","handleJoinCourse","ENROLL_USER_COURSE","consentUpdate","CONSENT_READ","consent","consumerId","objectId","objectType","MuiAlert","elevation","phone","handleDontShareClick","handleShareClick","Breadcrumbs","createdOn","licenseDetails","rel","FacebookShareButton","round","WhatsappShareButton","WhatsappIcon","LinkedinShareButton","LinkedinIcon","TwitterShareButton","renderActionButton","some","contentList","today","lastDayOfEnrollment","isNaN","getTime","isLastDayOfEnrollment","toDateString","isExpired","defaultExpanded","faqIndexname","outline","Player","lessonId","setLessonId","trackData","setTrackData","contentData","setContentData","lesson","setLesson","handleTrackData","score","attempts","ShareOutlinedIcon","SunbirdPlayer","mimeType","old","newData","public_url","Otp","otp","setOtp","resendDisabled","setResendDisabled","remainingTime","setRemainingTime","dataStore","setTncConfig","tncConfigVersion","setTncConfigVersion","birthYear","setBirthYear","isChecked","setIsChecked","storedUserData","_JSON$parse$latestVer","latestVersion","parse","timer","prevTime","verifyUser","VERIFY","signupUser","reqData","acceptTermsAndConditions","source","signupType","emailVerified","SIGN_UP_V1","saveUserInfoInCustomDB","USER_SIGNUP","TNC_ACCEPT_LOGIN","version","tncText","handleOtpChange","test","resendOtp","FormGroup","flexFlow","marginRight","handleLogin","PDFContent","SEND_CHAT","sender_email","receiver_email","Terms","routeConfig","searchState","setSearchState","sortArray","setSortArray","checkPref","setCheckPref","routes","moduleName","path","ROUTES","ALL_CONTENT_PAGE","ALL_CONTENT","PROFILE","CERTIFICATE_PAGE","LEARNING_HISTORY_PAGE","LEARNING_HISTORY","CONTINUE_LEARNING_PAGE","CONTINUE_LEARNING","continueLearning","HELP_PAGE","HELP","ADDCONNECTION_PAGE","ADDCONNECTION","DOMAINLIST_PAGE","DOMAINLIST","DomainList","CONTENTLIST_PAGE","CONTENTLIST","PAGENUMBER","ContentList","JOIN_COURSE_PAGE","JOIN_COURSE","CONTENT_ID","PLAYER_PAGE","PLAYER","PDF_PAGE","PDF","NORESULT_PAGE","NORESULT","CERTIFICATE_OLD_PAGE","CERTIFICATE_OLD","SIGNUP_PAGE","SIGNUP","TERMS_PAGE","TERMS","OTP_PAGE","VIEW_ALL_PAGE","VIEW_ALL","CATEGORY","MESSAGE_PAGE","MESSAGE","Message","SELECT_PREFERENCE_PAGE","SELECT_PREFERENCE","CHAT_PAGE","CHAT","SampleComponent","initializeI18n","process","NativeBaseProvider","Router","Routes","route","Route","hostname","match","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","App","navigator","serviceWorker","ready","registration","unregister","reportWebVitals","webpackContext","webpackContextResolve","__webpack_require__","o","keys","resolve","module","exports"],"sourceRoot":""}